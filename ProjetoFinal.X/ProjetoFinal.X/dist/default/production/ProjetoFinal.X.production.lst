

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Jun 25 15:28:56 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    41                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    42                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    43   000000                     
    44                           ; Generated 05/01/2024 GMT
    45                           ; 
    46                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution. Publication is not required when
    60                           ;        this file is used in an embedded application.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC18F4550 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78   000000                     
    79                           	psect	idataCOMRAM
    80   0015F4                     __pidataCOMRAM:
    81                           	callstack 0
    82                           
    83                           ;initializer for _limite_Ph
    84   0015F4  0007               	dw	7
    85                           
    86                           ;initializer for _limite_Tc
    87   0015F6  0014               	dw	20
    88                           
    89                           ;initializer for _limite_UR
    90   0015F8  0032               	dw	50
    91   000000                     _TRISB	set	3987
    92   000000                     _TRISC	set	3988
    93   000000                     _ADRESL	set	4035
    94   000000                     _ADRESH	set	4036
    95   000000                     _PORTBbits	set	3969
    96   000000                     _PORTB	set	3969
    97   000000                     _PORTCbits	set	3970
    98   000000                     _ADCON0bits	set	4034
    99   000000                     _LATEbits	set	3981
   100   000000                     _PORTD	set	3971
   101   000000                     _TRISA	set	3986
   102   000000                     _TRISEbits	set	3990
   103   000000                     _TRISD	set	3989
   104   000000                     _ADCON2	set	4032
   105   000000                     _ADCON1	set	4033
   106                           
   107                           	psect	smallconst
   108   000800                     __psmallconst:
   109                           	callstack 0
   110   000800  00                 	db	0
   111   000801                     STR_2:
   112   000801  41                 	db	65	;'A'
   113   000802  2D                 	db	45
   114   000803  55                 	db	85	;'U'
   115   000804  52                 	db	82	;'R'
   116   000805  20                 	db	32
   117   000806  42                 	db	66	;'B'
   118   000807  2D                 	db	45
   119   000808  50                 	db	80	;'P'
   120   000809  68                 	db	104	;'h'
   121   00080A  20                 	db	32
   122   00080B  43                 	db	67	;'C'
   123   00080C  2D                 	db	45
   124   00080D  54                 	db	84	;'T'
   125   00080E  63                 	db	99	;'c'
   126   00080F  00                 	db	0
   127   000810                     STR_4:
   128   000810  41                 	db	65	;'A'
   129   000811  74                 	db	116	;'t'
   130   000812  75                 	db	117	;'u'
   131   000813  61                 	db	97	;'a'
   132   000814  6C                 	db	108	;'l'
   133   000815  69                 	db	105	;'i'
   134   000816  7A                 	db	122	;'z'
   135   000817  61                 	db	97	;'a'
   136   000818  64                 	db	100	;'d'
   137   000819  6F                 	db	111	;'o'
   138   00081A  00                 	db	0
   139   00081B                     STR_1:
   140   00081B  43                 	db	67	;'C'
   141   00081C  61                 	db	97	;'a'
   142   00081D  72                 	db	114	;'r'
   143   00081E  72                 	db	114	;'r'
   144   00081F  65                 	db	101	;'e'
   145   000820  67                 	db	103	;'g'
   146   000821  61                 	db	97	;'a'
   147   000822  6E                 	db	110	;'n'
   148   000823  64                 	db	100	;'d'
   149   000824  6F                 	db	111	;'o'
   150   000825  00                 	db	0
   151   000826                     STR_3:
   152   000826  56                 	db	86	;'V'
   153   000827  61                 	db	97	;'a'
   154   000828  6C                 	db	108	;'l'
   155   000829  6F                 	db	111	;'o'
   156   00082A  72                 	db	114	;'r'
   157   00082B  3A                 	db	58	;':'
   158   00082C  00                 	db	0
   159   00082D                     STR_8:
   160   00082D  55                 	db	85	;'U'
   161   00082E  52                 	db	82	;'R'
   162   00082F  3A                 	db	58	;':'
   163   000830  00                 	db	0
   164   000831                     STR_10:
   165   000831  54                 	db	84	;'T'
   166   000832  63                 	db	99	;'c'
   167   000833  3A                 	db	58	;':'
   168   000834  00                 	db	0
   169   000835                     STR_12:
   170   000835  50                 	db	80	;'P'
   171   000836  68                 	db	104	;'h'
   172   000837  3A                 	db	58	;':'
   173   000838  00                 	db	0
   174   000839                     STR_5:
   175   000839  25                 	db	37
   176   00083A  64                 	db	100	;'d'
   177   00083B  00                 	db	0
   178   00083C                     STR_9:
   179   00083C  25                 	db	37
   180   00083D  00                 	db	0
   181   00083E                     STR_11:
   182   00083E  43                 	db	67	;'C'
   183   00083F  00                 	db	0
   184   000840  00                 	db	0	; dummy byte at the end
   185   000000                     
   186                           ; #config settings
   187                           
   188                           	psect	cinit
   189   001340                     __pcinit:
   190                           	callstack 0
   191   001340                     start_initialization:
   192                           	callstack 0
   193   001340                     __initialization:
   194                           	callstack 0
   195                           
   196                           ; Initialize objects allocated to COMRAM (6 bytes)
   197                           ; load TBLPTR registers with __pidataCOMRAM
   198   001340  0EF4               	movlw	low __pidataCOMRAM
   199   001342  6EF6               	movwf	tblptrl,c
   200   001344  0E15               	movlw	high __pidataCOMRAM
   201   001346  6EF7               	movwf	tblptrh,c
   202   001348  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   203   00134A  6EF8               	movwf	tblptru,c
   204   00134C  EE00  F056         	lfsr	0,__pdataCOMRAM
   205   001350  EE10 F006          	lfsr	1,6
   206   001354                     copy_data0:
   207   001354  0009               	tblrd		*+
   208   001356  CFF5 FFEE          	movff	tablat,postinc0
   209   00135A  50E5               	movf	postdec1,w,c
   210   00135C  50E1               	movf	fsr1l,w,c
   211   00135E  E1FA               	bnz	copy_data0
   212                           
   213                           ; Clear objects allocated to BANK0 (6 bytes)
   214   001360  0100               	movlb	0
   215   001362  6B95               	clrf	(__pbssBANK0+5)& (0+255),b
   216   001364  6B94               	clrf	(__pbssBANK0+4)& (0+255),b
   217   001366  6B93               	clrf	(__pbssBANK0+3)& (0+255),b
   218   001368  6B92               	clrf	(__pbssBANK0+2)& (0+255),b
   219   00136A  6B91               	clrf	(__pbssBANK0+1)& (0+255),b
   220   00136C  6B90               	clrf	__pbssBANK0& (0+255),b
   221                           
   222                           ; Clear objects allocated to COMRAM (37 bytes)
   223   00136E  EE00  F031         	lfsr	0,__pbssCOMRAM
   224   001372  0E25               	movlw	37
   225   001374                     clear_0:
   226   001374  6AEE               	clrf	postinc0,c
   227   001376  06E8               	decf	wreg,f,c
   228   001378  E1FD               	bnz	clear_0
   229   00137A                     end_of_initialization:
   230                           	callstack 0
   231   00137A                     __end_of__initialization:
   232                           	callstack 0
   233   00137A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   234   00137C  6EF8               	movwf	tblptru,c
   235   00137E  0100               	movlb	0
   236   001380  EF21  F004         	goto	_main	;jump to C main() function
   237                           
   238                           	psect	bssCOMRAM
   239   000031                     __pbssCOMRAM:
   240                           	callstack 0
   241   000031                     _dbuf:
   242                           	callstack 0
   243   000031                     	ds	32
   244   000051                     _width:
   245                           	callstack 0
   246   000051                     	ds	2
   247   000053                     _prec:
   248                           	callstack 0
   249   000053                     	ds	2
   250   000055                     _flags:
   251                           	callstack 0
   252   000055                     	ds	1
   253                           
   254                           	psect	dataCOMRAM
   255   000056                     __pdataCOMRAM:
   256                           	callstack 0
   257   000056                     _limite_Ph:
   258                           	callstack 0
   259   000056                     	ds	2
   260   000058                     _limite_Tc:
   261                           	callstack 0
   262   000058                     	ds	2
   263   00005A                     _limite_UR:
   264                           	callstack 0
   265   00005A                     	ds	2
   266                           
   267                           	psect	bssBANK0
   268   000090                     __pbssBANK0:
   269                           	callstack 0
   270   000090                     _temp:
   271                           	callstack 0
   272   000090                     	ds	2
   273   000092                     _ph:
   274                           	callstack 0
   275   000092                     	ds	2
   276   000094                     _umidade:
   277                           	callstack 0
   278   000094                     	ds	2
   279                           
   280                           	psect	cstackBANK0
   281   000060                     __pcstackBANK0:
   282                           	callstack 0
   283   000060                     main@umidadeStr:
   284                           	callstack 0
   285                           
   286                           ; 16 bytes @ 0x0
   287   000060                     	ds	16
   288   000070                     main@phStr:
   289                           	callstack 0
   290                           
   291                           ; 16 bytes @ 0x10
   292   000070                     	ds	16
   293   000080                     main@tempStr:
   294                           	callstack 0
   295                           
   296                           ; 16 bytes @ 0x20
   297   000080                     	ds	16
   298                           
   299                           	psect	cstackCOMRAM
   300   000001                     __pcstackCOMRAM:
   301                           	callstack 0
   302   000001                     ??_DelayPORXLCD:
   303   000001                     ??_DelayXLCD:
   304   000001                     ?_LEADC:
   305                           	callstack 0
   306   000001                     ?___wmul:
   307                           	callstack 0
   308   000001                     ?___awmod:
   309                           	callstack 0
   310   000001                     SetDDRamAddr@DDaddr:
   311                           	callstack 0
   312   000001                     WriteCmdXLCD@cmd:
   313                           	callstack 0
   314   000001                     WriteDataXLCD@data:
   315                           	callstack 0
   316   000001                     LEADC@channel:
   317                           	callstack 0
   318   000001                     controleAgua@UR:
   319                           	callstack 0
   320   000001                     controlePh@Ph:
   321                           	callstack 0
   322   000001                     controleTc@Tc:
   323                           	callstack 0
   324   000001                     ___wmul@multiplier:
   325                           	callstack 0
   326   000001                     ___awmod@dividend:
   327                           	callstack 0
   328   000001                     fputc@c:
   329                           	callstack 0
   330                           
   331                           ; 2 bytes @ 0x0
   332   000001                     	ds	1
   333   000002                     OpenXLCD@lcdtype:
   334                           	callstack 0
   335   000002                     putsXLCD@buffer:
   336                           	callstack 0
   337                           
   338                           ; 2 bytes @ 0x1
   339   000002                     	ds	1
   340   000003                     ??_LEADC:
   341   000003                     ??_controleAgua:
   342   000003                     ??_controlePh:
   343   000003                     ??_controleTc:
   344   000003                     fputc@fp:
   345                           	callstack 0
   346   000003                     ___wmul@multiplicand:
   347                           	callstack 0
   348   000003                     ___awmod@divisor:
   349                           	callstack 0
   350                           
   351                           ; 2 bytes @ 0x2
   352   000003                     	ds	1
   353   000004                     ??_fputc:
   354                           
   355                           ; 1 bytes @ 0x3
   356   000004                     	ds	1
   357   000005                     ___awmod@counter:
   358                           	callstack 0
   359   000005                     ___wmul@product:
   360                           	callstack 0
   361                           
   362                           ; 2 bytes @ 0x4
   363   000005                     	ds	1
   364   000006                     ___awmod@sign:
   365                           	callstack 0
   366                           
   367                           ; 1 bytes @ 0x5
   368   000006                     	ds	1
   369   000007                     ?_abs:
   370                           	callstack 0
   371   000007                     ?_readNumber:
   372                           	callstack 0
   373   000007                     ?___awdiv:
   374                           	callstack 0
   375   000007                     ___awdiv@dividend:
   376                           	callstack 0
   377   000007                     abs@a:
   378                           	callstack 0
   379                           
   380                           ; 2 bytes @ 0x6
   381   000007                     	ds	2
   382   000009                     ??_abs:
   383   000009                     ??_readNumber:
   384   000009                     ___awdiv@divisor:
   385                           	callstack 0
   386                           
   387                           ; 2 bytes @ 0x8
   388   000009                     	ds	2
   389   00000B                     ___awdiv@counter:
   390                           	callstack 0
   391   00000B                     readNumber@num:
   392                           	callstack 0
   393                           
   394                           ; 2 bytes @ 0xA
   395   00000B                     	ds	1
   396   00000C                     ___awdiv@sign:
   397                           	callstack 0
   398                           
   399                           ; 1 bytes @ 0xB
   400   00000C                     	ds	1
   401   00000D                     readNumber@key:
   402                           	callstack 0
   403   00000D                     ___awdiv@quotient:
   404                           	callstack 0
   405                           
   406                           ; 2 bytes @ 0xC
   407   00000D                     	ds	1
   408   00000E                     ??_limitante:
   409                           
   410                           ; 1 bytes @ 0xD
   411   00000E                     	ds	1
   412   00000F                     vfpfcnvrt@fp:
   413                           	callstack 0
   414                           
   415                           ; 1 bytes @ 0xE
   416   00000F                     	ds	1
   417   000010                     vfpfcnvrt@fmt:
   418                           	callstack 0
   419   000010                     limitante@valor:
   420                           	callstack 0
   421                           
   422                           ; 2 bytes @ 0xF
   423   000010                     	ds	1
   424   000011                     vfpfcnvrt@ap:
   425                           	callstack 0
   426                           
   427                           ; 1 bytes @ 0x10
   428   000011                     	ds	1
   429   000012                     ??_vfpfcnvrt:
   430   000012                     limitante@op:
   431                           	callstack 0
   432                           
   433                           ; 1 bytes @ 0x11
   434   000012                     	ds	1
   435   000013                     vfpfcnvrt@done:
   436                           	callstack 0
   437                           
   438                           ; 1 bytes @ 0x12
   439   000013                     	ds	1
   440   000014                     vfpfcnvrt@cp:
   441                           	callstack 0
   442                           
   443                           ; 1 bytes @ 0x13
   444   000014                     	ds	1
   445   000015                     vfpfcnvrt@convarg:
   446                           	callstack 0
   447                           
   448                           ; 4 bytes @ 0x14
   449   000015                     	ds	4
   450   000019                     vfpfcnvrt@c:
   451                           	callstack 0
   452                           
   453                           ; 1 bytes @ 0x18
   454   000019                     	ds	1
   455   00001A                     ?_vfprintf:
   456                           	callstack 0
   457   00001A                     vfprintf@fp:
   458                           	callstack 0
   459                           
   460                           ; 1 bytes @ 0x19
   461   00001A                     	ds	1
   462   00001B                     vfprintf@fmt:
   463                           	callstack 0
   464                           
   465                           ; 1 bytes @ 0x1A
   466   00001B                     	ds	1
   467   00001C                     vfprintf@ap:
   468                           	callstack 0
   469                           
   470                           ; 1 bytes @ 0x1B
   471   00001C                     	ds	1
   472   00001D                     vfprintf@cfmt:
   473                           	callstack 0
   474                           
   475                           ; 1 bytes @ 0x1C
   476   00001D                     	ds	1
   477   00001E                     ?_sprintf:
   478                           	callstack 0
   479   00001E                     sprintf@s:
   480                           	callstack 0
   481                           
   482                           ; 1 bytes @ 0x1D
   483   00001E                     	ds	1
   484   00001F                     sprintf@fmt:
   485                           	callstack 0
   486                           
   487                           ; 1 bytes @ 0x1E
   488   00001F                     	ds	3
   489   000022                     sprintf@ap:
   490                           	callstack 0
   491                           
   492                           ; 1 bytes @ 0x21
   493   000022                     	ds	1
   494   000023                     sprintf@f:
   495                           	callstack 0
   496                           
   497                           ; 12 bytes @ 0x22
   498   000023                     	ds	12
   499   00002F                     ??_main:
   500                           
   501                           ; 1 bytes @ 0x2E
   502   00002F                     	ds	2
   503                           
   504 ;;
   505 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   506 ;;
   507 ;; *************** function _main *****************
   508 ;; Defined at:
   509 ;;		line 142 in file "newmain.c"
   510 ;; Parameters:    Size  Location     Type
   511 ;;		None
   512 ;; Auto vars:     Size  Location     Type
   513 ;;  tempStr        16   32[BANK0 ] unsigned char [16]
   514 ;;  phStr          16   16[BANK0 ] unsigned char [16]
   515 ;;  umidadeStr     16    0[BANK0 ] unsigned char [16]
   516 ;; Return value:  Size  Location     Type
   517 ;;                  1    wreg      void 
   518 ;; Registers used:
   519 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   520 ;; Tracked objects:
   521 ;;		On entry : 0/0
   522 ;;		On exit  : 0/0
   523 ;;		Unchanged: 0/0
   524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   525 ;;      Params:         0       0       0       0       0       0       0       0       0
   526 ;;      Locals:         0      48       0       0       0       0       0       0       0
   527 ;;      Temps:          2       0       0       0       0       0       0       0       0
   528 ;;      Totals:         2      48       0       0       0       0       0       0       0
   529 ;;Total ram usage:       50 bytes
   530 ;; Hardware stack levels required when called: 5
   531 ;; This function calls:
   532 ;;		_Keypad
   533 ;;		_LEADC
   534 ;;		_OpenXLCD
   535 ;;		_WriteCmdXLCD
   536 ;;		___awdiv
   537 ;;		___wmul
   538 ;;		_controleAgua
   539 ;;		_controlePh
   540 ;;		_controleTc
   541 ;;		_limitante
   542 ;;		_putsXLCD
   543 ;;		_sprintf
   544 ;; This function is called by:
   545 ;;		Startup code after reset
   546 ;; This function uses a non-reentrant model
   547 ;;
   548                           
   549                           	psect	text0
   550   000842                     __ptext0:
   551                           	callstack 0
   552   000842                     _main:
   553                           	callstack 26
   554   000842                     
   555                           ;newmain.c: 144:     TRISA = 0xFF;
   556   000842  6892               	setf	146,c	;volatile
   557   000844                     
   558                           ;newmain.c: 145:     TRISC = 0x00;
   559   000844  0E00               	movlw	0
   560   000846  6E94               	movwf	148,c	;volatile
   561   000848                     
   562                           ;newmain.c: 147:     ADCON0bits.ADON = 1;
   563   000848  80C2               	bsf	194,0,c	;volatile
   564                           
   565                           ;newmain.c: 148:     ADCON1 = 0x0D;
   566   00084A  0E0D               	movlw	13
   567   00084C  6EC1               	movwf	193,c	;volatile
   568                           
   569                           ;newmain.c: 149:     ADCON2 = 0xA9;
   570   00084E  0EA9               	movlw	169
   571   000850  6EC0               	movwf	192,c	;volatile
   572                           
   573                           ;newmain.c: 151:     TRISB = 0b11110000;
   574   000852  0EF0               	movlw	240
   575   000854  6E93               	movwf	147,c	;volatile
   576   000856                     
   577                           ;newmain.c: 153:     OpenXLCD(0b00101100 & 0b00111000);
   578   000856  0E28               	movlw	40
   579   000858  EC76  F007         	call	_OpenXLCD
   580   00085C                     
   581                           ;newmain.c: 154:  WriteCmdXLCD(0x01);
   582   00085C  0E01               	movlw	1
   583   00085E  EC42  F00A         	call	_WriteCmdXLCD
   584   000862                     
   585                           ;newmain.c: 155:  _delay((unsigned long)((10)*(20000000/4000.0)));
   586   000862  0E41               	movlw	65
   587   000864  6E2F               	movwf	??_main^0,c
   588   000866  0EEE               	movlw	238
   589   000868                     u1477:
   590   000868  2EE8               	decfsz	wreg,f,c
   591   00086A  D7FE               	bra	u1477
   592   00086C  2E2F               	decfsz	??_main^0,f,c
   593   00086E  D7FC               	bra	u1477
   594   000870  D000               	nop2	
   595   000872                     l2193:
   596                           
   597                           ;newmain.c: 160:     WriteCmdXLCD(0x01);
   598   000872  0E01               	movlw	1
   599   000874  EC42  F00A         	call	_WriteCmdXLCD
   600   000878                     
   601                           ;newmain.c: 161:     umidade = LEADC(3);
   602   000878  0E00               	movlw	0
   603   00087A  6E02               	movwf	(LEADC@channel+1)^0,c
   604   00087C  0E03               	movlw	3
   605   00087E  6E01               	movwf	LEADC@channel^0,c
   606   000880  ECC2  F009         	call	_LEADC	;wreg free
   607   000884  C001  F094         	movff	?_LEADC,_umidade
   608   000888  C002  F095         	movff	?_LEADC+1,_umidade+1
   609   00088C                     
   610                           ;newmain.c: 162:     temp = LEADC(1);
   611   00088C  0E00               	movlw	0
   612   00088E  6E02               	movwf	(LEADC@channel+1)^0,c
   613   000890  0E01               	movlw	1
   614   000892  6E01               	movwf	LEADC@channel^0,c
   615   000894  ECC2  F009         	call	_LEADC	;wreg free
   616   000898  C001  F090         	movff	?_LEADC,_temp
   617   00089C  C002  F091         	movff	?_LEADC+1,_temp+1
   618   0008A0                     
   619                           ;newmain.c: 163:     ph = LEADC(2);
   620   0008A0  0E00               	movlw	0
   621   0008A2  6E02               	movwf	(LEADC@channel+1)^0,c
   622   0008A4  0E02               	movlw	2
   623   0008A6  6E01               	movwf	LEADC@channel^0,c
   624   0008A8  ECC2  F009         	call	_LEADC	;wreg free
   625   0008AC  C001  F092         	movff	?_LEADC,_ph
   626   0008B0  C002  F093         	movff	?_LEADC+1,_ph+1
   627   0008B4                     
   628                           ;newmain.c: 165:     umidade = (umidade*100)/1023;
   629   0008B4  C094  F001         	movff	_umidade,___wmul@multiplier
   630   0008B8  C095  F002         	movff	_umidade+1,___wmul@multiplier+1
   631   0008BC  0E00               	movlw	0
   632   0008BE  6E04               	movwf	(___wmul@multiplicand+1)^0,c
   633   0008C0  0E64               	movlw	100
   634   0008C2  6E03               	movwf	___wmul@multiplicand^0,c
   635   0008C4  ECD1  F00A         	call	___wmul	;wreg free
   636   0008C8  C001  F007         	movff	?___wmul,___awdiv@dividend
   637   0008CC  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
   638   0008D0  0E03               	movlw	3
   639   0008D2  6E0A               	movwf	(___awdiv@divisor+1)^0,c
   640   0008D4  6809               	setf	___awdiv@divisor^0,c
   641   0008D6  ECED  F007         	call	___awdiv	;wreg free
   642   0008DA  C007  F094         	movff	?___awdiv,_umidade
   643   0008DE  C008  F095         	movff	?___awdiv+1,_umidade+1
   644   0008E2                     
   645                           ;newmain.c: 166:     ph = (ph*14)/1023;
   646   0008E2  C092  F001         	movff	_ph,___wmul@multiplier
   647   0008E6  C093  F002         	movff	_ph+1,___wmul@multiplier+1
   648   0008EA  0E00               	movlw	0
   649   0008EC  6E04               	movwf	(___wmul@multiplicand+1)^0,c
   650   0008EE  0E0E               	movlw	14
   651   0008F0  6E03               	movwf	___wmul@multiplicand^0,c
   652   0008F2  ECD1  F00A         	call	___wmul	;wreg free
   653   0008F6  C001  F007         	movff	?___wmul,___awdiv@dividend
   654   0008FA  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
   655   0008FE  0E03               	movlw	3
   656   000900  6E0A               	movwf	(___awdiv@divisor+1)^0,c
   657   000902  6809               	setf	___awdiv@divisor^0,c
   658   000904  ECED  F007         	call	___awdiv	;wreg free
   659   000908  C007  F092         	movff	?___awdiv,_ph
   660   00090C  C008  F093         	movff	?___awdiv+1,_ph+1
   661   000910                     
   662                           ;newmain.c: 167:     temp = (temp*30)/1023;
   663   000910  C090  F001         	movff	_temp,___wmul@multiplier
   664   000914  C091  F002         	movff	_temp+1,___wmul@multiplier+1
   665   000918  0E00               	movlw	0
   666   00091A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
   667   00091C  0E1E               	movlw	30
   668   00091E  6E03               	movwf	___wmul@multiplicand^0,c
   669   000920  ECD1  F00A         	call	___wmul	;wreg free
   670   000924  C001  F007         	movff	?___wmul,___awdiv@dividend
   671   000928  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
   672   00092C  0E03               	movlw	3
   673   00092E  6E0A               	movwf	(___awdiv@divisor+1)^0,c
   674   000930  6809               	setf	___awdiv@divisor^0,c
   675   000932  ECED  F007         	call	___awdiv	;wreg free
   676   000936  C007  F090         	movff	?___awdiv,_temp
   677   00093A  C008  F091         	movff	?___awdiv+1,_temp+1
   678   00093E                     
   679                           ;newmain.c: 168:     _delay((unsigned long)((2)*(20000000/4000.0)));
   680   00093E  0E0D               	movlw	13
   681   000940  6E2F               	movwf	??_main^0,c
   682   000942  0EFC               	movlw	252
   683   000944                     u1487:
   684   000944  2EE8               	decfsz	wreg,f,c
   685   000946  D7FE               	bra	u1487
   686   000948  2E2F               	decfsz	??_main^0,f,c
   687   00094A  D7FC               	bra	u1487
   688   00094C                     
   689                           ;newmain.c: 171:     char umidadeStr[16], phStr[16], tempStr[16];;newmain.c: 174:     sp
      +                          rintf(umidadeStr, "%d", umidade);
   690   00094C  0E60               	movlw	low main@umidadeStr
   691   00094E  6E1E               	movwf	sprintf@s^0,c
   692   000950  0E39               	movlw	low STR_5
   693   000952  6E1F               	movwf	sprintf@fmt^0,c
   694   000954  C094  F020         	movff	_umidade,?_sprintf+2
   695   000958  C095  F021         	movff	_umidade+1,?_sprintf+3
   696   00095C  EC61  F00A         	call	_sprintf	;wreg free
   697   000960                     
   698                           ;newmain.c: 175:     sprintf(phStr, "%d", ph);
   699   000960  0E70               	movlw	low main@phStr
   700   000962  6E1E               	movwf	sprintf@s^0,c
   701   000964  0E39               	movlw	low STR_5
   702   000966  6E1F               	movwf	sprintf@fmt^0,c
   703   000968  C092  F020         	movff	_ph,?_sprintf+2
   704   00096C  C093  F021         	movff	_ph+1,?_sprintf+3
   705   000970  EC61  F00A         	call	_sprintf	;wreg free
   706   000974                     
   707                           ;newmain.c: 176:     sprintf(tempStr, "%d", temp);
   708   000974  0E80               	movlw	low main@tempStr
   709   000976  6E1E               	movwf	sprintf@s^0,c
   710   000978  0E39               	movlw	low STR_5
   711   00097A  6E1F               	movwf	sprintf@fmt^0,c
   712   00097C  C090  F020         	movff	_temp,?_sprintf+2
   713   000980  C091  F021         	movff	_temp+1,?_sprintf+3
   714   000984  EC61  F00A         	call	_sprintf	;wreg free
   715   000988                     
   716                           ;newmain.c: 178:     WriteCmdXLCD(0x80);
   717   000988  0E80               	movlw	128
   718   00098A  EC42  F00A         	call	_WriteCmdXLCD
   719   00098E                     
   720                           ;newmain.c: 179:     putsXLCD ("UR:");
   721   00098E  0E2D               	movlw	low STR_8
   722   000990  6E02               	movwf	putsXLCD@buffer^0,c
   723   000992  5002               	movf	putsXLCD@buffer^0,w,c
   724   000994  A4D8               	btfss	status,2,c
   725   000996  0E08               	movlw	high __smallconst
   726   000998  6E03               	movwf	(putsXLCD@buffer+1)^0,c
   727   00099A  EC44  F009         	call	_putsXLCD	;wreg free
   728   00099E                     
   729                           ;newmain.c: 180:     WriteCmdXLCD(0xC0);
   730   00099E  0EC0               	movlw	192
   731   0009A0  EC42  F00A         	call	_WriteCmdXLCD
   732   0009A4                     
   733                           ;newmain.c: 181:     putsXLCD(umidadeStr);
   734   0009A4  0E60               	movlw	low main@umidadeStr
   735   0009A6  6E02               	movwf	putsXLCD@buffer^0,c
   736   0009A8  6A03               	clrf	(putsXLCD@buffer+1)^0,c
   737   0009AA  EC44  F009         	call	_putsXLCD	;wreg free
   738   0009AE                     
   739                           ;newmain.c: 182:     WriteCmdXLCD(0xC3);
   740   0009AE  0EC3               	movlw	195
   741   0009B0  EC42  F00A         	call	_WriteCmdXLCD
   742   0009B4                     
   743                           ;newmain.c: 183:     putsXLCD("%");
   744   0009B4  0E3C               	movlw	low STR_9
   745   0009B6  6E02               	movwf	putsXLCD@buffer^0,c
   746   0009B8  5002               	movf	putsXLCD@buffer^0,w,c
   747   0009BA  A4D8               	btfss	status,2,c
   748   0009BC  0E08               	movlw	high __smallconst
   749   0009BE  6E03               	movwf	(putsXLCD@buffer+1)^0,c
   750   0009C0  EC44  F009         	call	_putsXLCD	;wreg free
   751   0009C4                     
   752                           ;newmain.c: 185:     WriteCmdXLCD(0x86);
   753   0009C4  0E86               	movlw	134
   754   0009C6  EC42  F00A         	call	_WriteCmdXLCD
   755   0009CA                     
   756                           ;newmain.c: 186:     putsXLCD ("Tc:");
   757   0009CA  0E31               	movlw	low STR_10
   758   0009CC  6E02               	movwf	putsXLCD@buffer^0,c
   759   0009CE  5002               	movf	putsXLCD@buffer^0,w,c
   760   0009D0  A4D8               	btfss	status,2,c
   761   0009D2  0E08               	movlw	high __smallconst
   762   0009D4  6E03               	movwf	(putsXLCD@buffer+1)^0,c
   763   0009D6  EC44  F009         	call	_putsXLCD	;wreg free
   764   0009DA                     
   765                           ;newmain.c: 187:     WriteCmdXLCD(0xC6);
   766   0009DA  0EC6               	movlw	198
   767   0009DC  EC42  F00A         	call	_WriteCmdXLCD
   768   0009E0                     
   769                           ;newmain.c: 188:     putsXLCD(tempStr);
   770   0009E0  0E80               	movlw	low main@tempStr
   771   0009E2  6E02               	movwf	putsXLCD@buffer^0,c
   772   0009E4  6A03               	clrf	(putsXLCD@buffer+1)^0,c
   773   0009E6  EC44  F009         	call	_putsXLCD	;wreg free
   774   0009EA                     
   775                           ;newmain.c: 189:     WriteCmdXLCD(0xC8);
   776   0009EA  0EC8               	movlw	200
   777   0009EC  EC42  F00A         	call	_WriteCmdXLCD
   778   0009F0                     
   779                           ;newmain.c: 190:     putsXLCD("C");
   780   0009F0  0E3E               	movlw	low STR_11
   781   0009F2  6E02               	movwf	putsXLCD@buffer^0,c
   782   0009F4  5002               	movf	putsXLCD@buffer^0,w,c
   783   0009F6  A4D8               	btfss	status,2,c
   784   0009F8  0E08               	movlw	high __smallconst
   785   0009FA  6E03               	movwf	(putsXLCD@buffer+1)^0,c
   786   0009FC  EC44  F009         	call	_putsXLCD	;wreg free
   787   000A00                     
   788                           ;newmain.c: 192:     WriteCmdXLCD(0x8C);
   789   000A00  0E8C               	movlw	140
   790   000A02  EC42  F00A         	call	_WriteCmdXLCD
   791   000A06                     
   792                           ;newmain.c: 193:     putsXLCD ("Ph:");
   793   000A06  0E35               	movlw	low STR_12
   794   000A08  6E02               	movwf	putsXLCD@buffer^0,c
   795   000A0A  5002               	movf	putsXLCD@buffer^0,w,c
   796   000A0C  A4D8               	btfss	status,2,c
   797   000A0E  0E08               	movlw	high __smallconst
   798   000A10  6E03               	movwf	(putsXLCD@buffer+1)^0,c
   799   000A12  EC44  F009         	call	_putsXLCD	;wreg free
   800   000A16                     
   801                           ;newmain.c: 194:     WriteCmdXLCD(0xCC);
   802   000A16  0ECC               	movlw	204
   803   000A18  EC42  F00A         	call	_WriteCmdXLCD
   804   000A1C                     
   805                           ;newmain.c: 195:     putsXLCD(phStr);
   806   000A1C  0E70               	movlw	low main@phStr
   807   000A1E  6E02               	movwf	putsXLCD@buffer^0,c
   808   000A20  6A03               	clrf	(putsXLCD@buffer+1)^0,c
   809   000A22  EC44  F009         	call	_putsXLCD	;wreg free
   810   000A26                     
   811                           ;newmain.c: 196:     WriteCmdXLCD(0xCF);
   812   000A26  0ECF               	movlw	207
   813   000A28  EC42  F00A         	call	_WriteCmdXLCD
   814   000A2C                     
   815                           ;newmain.c: 198:     controleAgua(umidade);
   816   000A2C  C094  F001         	movff	_umidade,controleAgua@UR
   817   000A30  C095  F002         	movff	_umidade+1,controleAgua@UR+1
   818   000A34  ECBD  F00A         	call	_controleAgua	;wreg free
   819   000A38                     
   820                           ;newmain.c: 199:     controlePh(ph);
   821   000A38  C092  F001         	movff	_ph,controlePh@Ph
   822   000A3C  C093  F002         	movff	_ph+1,controlePh@Ph+1
   823   000A40  ECA9  F00A         	call	_controlePh	;wreg free
   824   000A44                     
   825                           ;newmain.c: 200:     controleTc(temp);
   826   000A44  C090  F001         	movff	_temp,controleTc@Tc
   827   000A48  C091  F002         	movff	_temp+1,controleTc@Tc+1
   828   000A4C  EC95  F00A         	call	_controleTc	;wreg free
   829   000A50                     
   830                           ;newmain.c: 202:     if(Keypad() == '*') limitante();
   831   000A50  ECCC  F006         	call	_Keypad	;wreg free
   832   000A54  0A2A               	xorlw	42
   833   000A56  A4D8               	btfss	status,2,c
   834   000A58  EF30  F005         	goto	u1441
   835   000A5C  EF32  F005         	goto	u1440
   836   000A60                     u1441:
   837   000A60  EF34  F005         	goto	l2259
   838   000A64                     u1440:
   839   000A64  EC20  F006         	call	_limitante	;wreg free
   840   000A68                     l2259:
   841                           
   842                           ;newmain.c: 204:     _delay((unsigned long)((500)*(20000000/4000.0)));
   843   000A68  0E0D               	movlw	13
   844   000A6A  6E30               	movwf	(??_main+1)^0,c
   845   000A6C  0EAF               	movlw	175
   846   000A6E  6E2F               	movwf	??_main^0,c
   847   000A70  0EB6               	movlw	182
   848   000A72                     u1497:
   849   000A72  2EE8               	decfsz	wreg,f,c
   850   000A74  D7FE               	bra	u1497
   851   000A76  2E2F               	decfsz	??_main^0,f,c
   852   000A78  D7FC               	bra	u1497
   853   000A7A  2E30               	decfsz	(??_main+1)^0,f,c
   854   000A7C  D7FA               	bra	u1497
   855   000A7E  D000               	nop2	
   856   000A80  EF39  F004         	goto	l2193
   857   000A84  EF00  F000         	goto	start
   858   000A88                     __end_of_main:
   859                           	callstack 0
   860                           
   861 ;; *************** function _sprintf *****************
   862 ;; Defined at:
   863 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
   864 ;; Parameters:    Size  Location     Type
   865 ;;  s               1   29[COMRAM] PTR unsigned char 
   866 ;;		 -> main@tempStr(16), main@phStr(16), main@umidadeStr(16), 
   867 ;;  fmt             1   30[COMRAM] PTR const unsigned char 
   868 ;;		 -> STR_7(3), STR_6(3), STR_5(3), 
   869 ;; Auto vars:     Size  Location     Type
   870 ;;  f              12   34[COMRAM] struct _IO_FILE
   871 ;;  ret             2    0        int 
   872 ;;  ap              1   33[COMRAM] PTR void [1]
   873 ;;		 -> ?_sprintf(2), 
   874 ;; Return value:  Size  Location     Type
   875 ;;                  2   29[COMRAM] int 
   876 ;; Registers used:
   877 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   878 ;; Tracked objects:
   879 ;;		On entry : 0/0
   880 ;;		On exit  : 0/0
   881 ;;		Unchanged: 0/0
   882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   883 ;;      Params:         4       0       0       0       0       0       0       0       0
   884 ;;      Locals:        13       0       0       0       0       0       0       0       0
   885 ;;      Temps:          0       0       0       0       0       0       0       0       0
   886 ;;      Totals:        17       0       0       0       0       0       0       0       0
   887 ;;Total ram usage:       17 bytes
   888 ;; Hardware stack levels used: 1
   889 ;; Hardware stack levels required when called: 4
   890 ;; This function calls:
   891 ;;		_vfprintf
   892 ;; This function is called by:
   893 ;;		_main
   894 ;; This function uses a non-reentrant model
   895 ;;
   896                           
   897                           	psect	text1
   898   0014C2                     __ptext1:
   899                           	callstack 0
   900   0014C2                     _sprintf:
   901                           	callstack 26
   902   0014C2  0E20               	movlw	low (?_sprintf+2)
   903   0014C4  6E22               	movwf	sprintf@ap^0,c
   904   0014C6  C01E  F023         	movff	sprintf@s,sprintf@f
   905   0014CA  0E00               	movlw	0
   906   0014CC  6E27               	movwf	(sprintf@f+4)^0,c
   907   0014CE  0E00               	movlw	0
   908   0014D0  6E26               	movwf	(sprintf@f+3)^0,c
   909   0014D2  0E00               	movlw	0
   910   0014D4  6E2E               	movwf	(sprintf@f+11)^0,c
   911   0014D6  0E00               	movlw	0
   912   0014D8  6E2D               	movwf	(sprintf@f+10)^0,c
   913   0014DA  0E23               	movlw	low sprintf@f
   914   0014DC  6E1A               	movwf	vfprintf@fp^0,c
   915   0014DE  C01F  F01B         	movff	sprintf@fmt,vfprintf@fmt
   916   0014E2  0E22               	movlw	low sprintf@ap
   917   0014E4  6E1C               	movwf	vfprintf@ap^0,c
   918   0014E6  EC04  F00A         	call	_vfprintf	;wreg free
   919   0014EA  501E               	movf	sprintf@s^0,w,c
   920   0014EC  2426               	addwf	(sprintf@f+3)^0,w,c
   921   0014EE  6ED9               	movwf	fsr2l,c
   922   0014F0  6ADA               	clrf	fsr2h,c
   923   0014F2  6ADF               	clrf	indf2,c
   924   0014F4  0012               	return		;funcret
   925   0014F6                     __end_of_sprintf:
   926                           	callstack 0
   927                           
   928 ;; *************** function _vfprintf *****************
   929 ;; Defined at:
   930 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
   931 ;; Parameters:    Size  Location     Type
   932 ;;  fp              1   25[COMRAM] PTR struct _IO_FILE
   933 ;;		 -> sprintf@f(12), 
   934 ;;  fmt             1   26[COMRAM] PTR const unsigned char 
   935 ;;		 -> STR_7(3), STR_6(3), STR_5(3), 
   936 ;;  ap              1   27[COMRAM] PTR PTR void 
   937 ;;		 -> sprintf@ap(1), 
   938 ;; Auto vars:     Size  Location     Type
   939 ;;  cfmt            1   28[COMRAM] PTR unsigned char 
   940 ;;		 -> STR_7(3), STR_6(3), STR_5(3), 
   941 ;; Return value:  Size  Location     Type
   942 ;;                  2   25[COMRAM] int 
   943 ;; Registers used:
   944 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   945 ;; Tracked objects:
   946 ;;		On entry : 0/0
   947 ;;		On exit  : 0/0
   948 ;;		Unchanged: 0/0
   949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   950 ;;      Params:         3       0       0       0       0       0       0       0       0
   951 ;;      Locals:         1       0       0       0       0       0       0       0       0
   952 ;;      Temps:          0       0       0       0       0       0       0       0       0
   953 ;;      Totals:         4       0       0       0       0       0       0       0       0
   954 ;;Total ram usage:        4 bytes
   955 ;; Hardware stack levels used: 1
   956 ;; Hardware stack levels required when called: 3
   957 ;; This function calls:
   958 ;;		_vfpfcnvrt
   959 ;; This function is called by:
   960 ;;		_sprintf
   961 ;; This function uses a non-reentrant model
   962 ;;
   963                           
   964                           	psect	text2
   965   001408                     __ptext2:
   966                           	callstack 0
   967   001408                     _vfprintf:
   968                           	callstack 26
   969   001408                     
   970                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
   971   001408  C01B  F01D         	movff	vfprintf@fmt,vfprintf@cfmt
   972                           
   973                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
   974   00140C  EF10  F00A         	goto	l2035
   975   001410                     l2033:
   976                           
   977                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
   978   001410  C01A  F00F         	movff	vfprintf@fp,vfpfcnvrt@fp
   979   001414  0E1D               	movlw	low vfprintf@cfmt
   980   001416  6E10               	movwf	vfpfcnvrt@fmt^0,c
   981   001418  C01C  F011         	movff	vfprintf@ap,vfpfcnvrt@ap
   982   00141C  EC44  F005         	call	_vfpfcnvrt	;wreg free
   983   001420                     l2035:
   984                           
   985                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
   986   001420  C01D  FFF6         	movff	vfprintf@cfmt,tblptrl
   987   001424                     	if	1	;There is more than 1 active tblptr byte
   988   001424  0E08               	movlw	high __smallconst
   989   001426  6EF7               	movwf	tblptrh,c
   990   001428                     	endif
   991   001428                     	if	0	;tblptru may be non-zero
   992   001428                     	endif
   993   001428                     	if	0	;tblptru may be non-zero
   994   001428                     	endif
   995   001428  0008               	tblrd		*
   996   00142A  50F5               	movf	tablat,w,c
   997   00142C  0900               	iorlw	0
   998   00142E  A4D8               	btfss	status,2,c
   999   001430  EF1C  F00A         	goto	u1251
  1000   001434  EF1E  F00A         	goto	u1250
  1001   001438                     u1251:
  1002   001438  EF08  F00A         	goto	l2033
  1003   00143C                     u1250:
  1004   00143C                     
  1005                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1006   00143C  0E00               	movlw	0
  1007   00143E  6E1B               	movwf	(?_vfprintf+1)^0,c
  1008   001440  0E00               	movlw	0
  1009   001442  6E1A               	movwf	?_vfprintf^0,c
  1010   001444  0012               	return		;funcret
  1011   001446                     __end_of_vfprintf:
  1012                           	callstack 0
  1013                           
  1014 ;; *************** function _vfpfcnvrt *****************
  1015 ;; Defined at:
  1016 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1017 ;; Parameters:    Size  Location     Type
  1018 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
  1019 ;;		 -> sprintf@f(12), 
  1020 ;;  fmt             1   15[COMRAM] PTR PTR unsigned char 
  1021 ;;		 -> vfprintf@cfmt(1), 
  1022 ;;  ap              1   16[COMRAM] PTR PTR void 
  1023 ;;		 -> sprintf@ap(1), 
  1024 ;; Auto vars:     Size  Location     Type
  1025 ;;  convarg         4   20[COMRAM] struct .
  1026 ;;  c               1   24[COMRAM] unsigned char 
  1027 ;;  cp              1   19[COMRAM] PTR unsigned char 
  1028 ;;		 -> STR_7(3), STR_6(3), STR_5(3), 
  1029 ;;  done            1   18[COMRAM] _Bool 
  1030 ;; Return value:  Size  Location     Type
  1031 ;;                  1    wreg      void 
  1032 ;; Registers used:
  1033 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1034 ;; Tracked objects:
  1035 ;;		On entry : 0/0
  1036 ;;		On exit  : 0/0
  1037 ;;		Unchanged: 0/0
  1038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1039 ;;      Params:         3       0       0       0       0       0       0       0       0
  1040 ;;      Locals:         7       0       0       0       0       0       0       0       0
  1041 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1042 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1043 ;;Total ram usage:       11 bytes
  1044 ;; Hardware stack levels used: 1
  1045 ;; Hardware stack levels required when called: 2
  1046 ;; This function calls:
  1047 ;;		___awdiv
  1048 ;;		___awmod
  1049 ;;		_abs
  1050 ;;		_fputc
  1051 ;; This function is called by:
  1052 ;;		_vfprintf
  1053 ;; This function uses a non-reentrant model
  1054 ;;
  1055                           
  1056                           	psect	text3
  1057   000A88                     __ptext3:
  1058                           	callstack 0
  1059   000A88                     _vfpfcnvrt:
  1060                           	callstack 26
  1061   000A88                     
  1062                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1063   000A88  5010               	movf	vfpfcnvrt@fmt^0,w,c
  1064   000A8A  6ED9               	movwf	fsr2l,c
  1065   000A8C  6ADA               	clrf	fsr2h,c
  1066   000A8E  CFDF FFF6          	movff	indf2,tblptrl
  1067   000A92                     	if	1	;There is more than 1 active tblptr byte
  1068   000A92  0E08               	movlw	high __smallconst
  1069   000A94  6EF7               	movwf	tblptrh,c
  1070   000A96                     	endif
  1071   000A96                     	if	0	;tblptru may be non-zero
  1072   000A96                     	endif
  1073   000A96                     	if	0	;tblptru may be non-zero
  1074   000A96                     	endif
  1075   000A96  0008               	tblrd		*
  1076   000A98  50F5               	movf	tablat,w,c
  1077   000A9A  0A25               	xorlw	37
  1078   000A9C  A4D8               	btfss	status,2,c
  1079   000A9E  EF53  F005         	goto	u1081
  1080   000AA2  EF55  F005         	goto	u1080
  1081   000AA6                     u1081:
  1082   000AA6  EF0E  F006         	goto	l1947
  1083   000AAA                     u1080:
  1084   000AAA                     
  1085                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1086   000AAA  5010               	movf	vfpfcnvrt@fmt^0,w,c
  1087   000AAC  6ED9               	movwf	fsr2l,c
  1088   000AAE  6ADA               	clrf	fsr2h,c
  1089   000AB0  2ADF               	incf	indf2,f,c
  1090   000AB2                     
  1091                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1092   000AB2  0E00               	movlw	0
  1093   000AB4  6E52               	movwf	(_width+1)^0,c
  1094   000AB6  0E00               	movlw	0
  1095   000AB8  6E51               	movwf	_width^0,c
  1096   000ABA  C051  F055         	movff	_width,_flags
  1097   000ABE                     
  1098                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1099   000ABE  6853               	setf	_prec^0,c
  1100   000AC0  6854               	setf	(_prec+1)^0,c
  1101   000AC2                     
  1102                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1103   000AC2  5010               	movf	vfpfcnvrt@fmt^0,w,c
  1104   000AC4  6ED9               	movwf	fsr2l,c
  1105   000AC6  6ADA               	clrf	fsr2h,c
  1106   000AC8  50DF               	movf	indf2,w,c
  1107   000ACA  6E14               	movwf	vfpfcnvrt@cp^0,c
  1108   000ACC                     
  1109                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1110   000ACC  C014  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1111   000AD0                     	if	1	;There is more than 1 active tblptr byte
  1112   000AD0  0E08               	movlw	high __smallconst
  1113   000AD2  6EF7               	movwf	tblptrh,c
  1114   000AD4                     	endif
  1115   000AD4                     	if	0	;tblptru may be non-zero
  1116   000AD4                     	endif
  1117   000AD4                     	if	0	;tblptru may be non-zero
  1118   000AD4                     	endif
  1119   000AD4  0008               	tblrd		*
  1120   000AD6  50F5               	movf	tablat,w,c
  1121   000AD8  0A64               	xorlw	100
  1122   000ADA  B4D8               	btfsc	status,2,c
  1123   000ADC  EF72  F005         	goto	u1091
  1124   000AE0  EF74  F005         	goto	u1090
  1125   000AE4                     u1091:
  1126   000AE4  EF82  F005         	goto	l1917
  1127   000AE8                     u1090:
  1128   000AE8  C014  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1129   000AEC                     	if	1	;There is more than 1 active tblptr byte
  1130   000AEC  0E08               	movlw	high __smallconst
  1131   000AEE  6EF7               	movwf	tblptrh,c
  1132   000AF0                     	endif
  1133   000AF0                     	if	0	;tblptru may be non-zero
  1134   000AF0                     	endif
  1135   000AF0                     	if	0	;tblptru may be non-zero
  1136   000AF0                     	endif
  1137   000AF0  0008               	tblrd		*
  1138   000AF2  50F5               	movf	tablat,w,c
  1139   000AF4  0A69               	xorlw	105
  1140   000AF6  A4D8               	btfss	status,2,c
  1141   000AF8  EF80  F005         	goto	u1101
  1142   000AFC  EF82  F005         	goto	u1100
  1143   000B00                     u1101:
  1144   000B00  EF08  F006         	goto	l1943
  1145   000B04                     u1100:
  1146   000B04                     l1917:
  1147                           
  1148                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1149   000B04  5011               	movf	vfpfcnvrt@ap^0,w,c
  1150   000B06  6ED9               	movwf	fsr2l,c
  1151   000B08  6ADA               	clrf	fsr2h,c
  1152   000B0A  0E02               	movlw	2
  1153   000B0C  26DF               	addwf	indf2,f,c
  1154   000B0E  5CDF               	subwf	indf2,w,c
  1155   000B10  6ED9               	movwf	fsr2l,c
  1156   000B12  6ADA               	clrf	fsr2h,c
  1157   000B14  CFDE F015          	movff	postinc2,vfpfcnvrt@convarg
  1158   000B18  CFDE F016          	movff	postinc2,vfpfcnvrt@convarg+1
  1159   000B1C                     
  1160                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1161   000B1C  5010               	movf	vfpfcnvrt@fmt^0,w,c
  1162   000B1E  6ED9               	movwf	fsr2l,c
  1163   000B20  6ADA               	clrf	fsr2h,c
  1164   000B22  2814               	incf	vfpfcnvrt@cp^0,w,c
  1165   000B24  6EDF               	movwf	indf2,c
  1166   000B26                     
  1167                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  1168   000B26  0E20               	movlw	32
  1169   000B28  6E19               	movwf	vfpfcnvrt@c^0,c
  1170                           
  1171                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  1172   000B2A  BE16               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1173   000B2C  EF9A  F005         	goto	u1111
  1174   000B30  EF9D  F005         	goto	u1110
  1175   000B34                     u1111:
  1176   000B34  0E01               	movlw	1
  1177   000B36  EF9E  F005         	goto	u1120
  1178   000B3A                     u1110:
  1179   000B3A  0E00               	movlw	0
  1180   000B3C                     u1120:
  1181   000B3C  6E13               	movwf	vfpfcnvrt@done^0,c
  1182   000B3E                     l1923:
  1183                           
  1184                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  1185   000B3E  0619               	decf	vfpfcnvrt@c^0,f,c
  1186   000B40  5019               	movf	vfpfcnvrt@c^0,w,c
  1187   000B42  0F31               	addlw	low _dbuf
  1188   000B44  6ED9               	movwf	fsr2l,c
  1189   000B46  6ADA               	clrf	fsr2h,c
  1190   000B48  C015  F001         	movff	vfpfcnvrt@convarg,___awmod@dividend
  1191   000B4C  C016  F002         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  1192   000B50  0E00               	movlw	0
  1193   000B52  6E04               	movwf	(___awmod@divisor+1)^0,c
  1194   000B54  0E0A               	movlw	10
  1195   000B56  6E03               	movwf	___awmod@divisor^0,c
  1196   000B58  EC4F  F008         	call	___awmod	;wreg free
  1197   000B5C  C001  F007         	movff	?___awmod,abs@a
  1198   000B60  C002  F008         	movff	?___awmod+1,abs@a+1
  1199   000B64  EC7B  F00A         	call	_abs	;wreg free
  1200   000B68  5007               	movf	?_abs^0,w,c
  1201   000B6A  0F30               	addlw	48
  1202   000B6C  6EDF               	movwf	indf2,c
  1203   000B6E                     
  1204                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  1205   000B6E  C015  F007         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  1206   000B72  C016  F008         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  1207   000B76  0E00               	movlw	0
  1208   000B78  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  1209   000B7A  0E0A               	movlw	10
  1210   000B7C  6E09               	movwf	___awdiv@divisor^0,c
  1211   000B7E  ECED  F007         	call	___awdiv	;wreg free
  1212   000B82  C007  F015         	movff	?___awdiv,vfpfcnvrt@convarg
  1213   000B86  C008  F016         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  1214   000B8A                     
  1215                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  1216   000B8A  5015               	movf	vfpfcnvrt@convarg^0,w,c
  1217   000B8C  1016               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  1218   000B8E  B4D8               	btfsc	status,2,c
  1219   000B90  EFCC  F005         	goto	u1131
  1220   000B94  EFCE  F005         	goto	u1130
  1221   000B98                     u1131:
  1222   000B98  EFD6  F005         	goto	l1931
  1223   000B9C                     u1130:
  1224   000B9C  5019               	movf	vfpfcnvrt@c^0,w,c
  1225   000B9E  A4D8               	btfss	status,2,c
  1226   000BA0  EFD4  F005         	goto	u1141
  1227   000BA4  EFD6  F005         	goto	u1140
  1228   000BA8                     u1141:
  1229   000BA8  EF9F  F005         	goto	l1923
  1230   000BAC                     u1140:
  1231   000BAC                     l1931:
  1232                           
  1233                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  1234   000BAC  5019               	movf	vfpfcnvrt@c^0,w,c
  1235   000BAE  B4D8               	btfsc	status,2,c
  1236   000BB0  EFDC  F005         	goto	u1151
  1237   000BB4  EFDE  F005         	goto	u1150
  1238   000BB8                     u1151:
  1239   000BB8  EFFD  F005         	goto	l1941
  1240   000BBC                     u1150:
  1241   000BBC  5013               	movf	vfpfcnvrt@done^0,w,c
  1242   000BBE  B4D8               	btfsc	status,2,c
  1243   000BC0  EFE4  F005         	goto	u1161
  1244   000BC4  EFE6  F005         	goto	u1160
  1245   000BC8                     u1161:
  1246   000BC8  EFFD  F005         	goto	l1941
  1247   000BCC                     u1160:
  1248   000BCC                     
  1249                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  1250   000BCC  0619               	decf	vfpfcnvrt@c^0,f,c
  1251   000BCE  5019               	movf	vfpfcnvrt@c^0,w,c
  1252   000BD0  0F31               	addlw	low _dbuf
  1253   000BD2  6ED9               	movwf	fsr2l,c
  1254   000BD4  6ADA               	clrf	fsr2h,c
  1255   000BD6  0E2D               	movlw	45
  1256   000BD8  6EDF               	movwf	indf2,c
  1257   000BDA  EFFD  F005         	goto	l1941
  1258   000BDE                     l1937:
  1259                           
  1260                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  1261   000BDE  5019               	movf	vfpfcnvrt@c^0,w,c
  1262   000BE0  0F31               	addlw	low _dbuf
  1263   000BE2  6ED9               	movwf	fsr2l,c
  1264   000BE4  6ADA               	clrf	fsr2h,c
  1265   000BE6  50DF               	movf	indf2,w,c
  1266   000BE8  6E12               	movwf	??_vfpfcnvrt^0,c
  1267   000BEA  5012               	movf	??_vfpfcnvrt^0,w,c
  1268   000BEC  6E01               	movwf	fputc@c^0,c
  1269   000BEE  6A02               	clrf	(fputc@c+1)^0,c
  1270   000BF0  C00F  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1271   000BF4  ECA7  F008         	call	_fputc	;wreg free
  1272   000BF8  2A19               	incf	vfpfcnvrt@c^0,f,c
  1273   000BFA                     l1941:
  1274                           
  1275                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  1276   000BFA  0E20               	movlw	32
  1277   000BFC  1819               	xorwf	vfpfcnvrt@c^0,w,c
  1278   000BFE  A4D8               	btfss	status,2,c
  1279   000C00  EF04  F006         	goto	u1171
  1280   000C04  EF06  F006         	goto	u1170
  1281   000C08                     u1171:
  1282   000C08  EFEF  F005         	goto	l1937
  1283   000C0C                     u1170:
  1284   000C0C  EF1F  F006         	goto	l923
  1285   000C10                     l1943:
  1286                           
  1287                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1288   000C10  5010               	movf	vfpfcnvrt@fmt^0,w,c
  1289   000C12  6ED9               	movwf	fsr2l,c
  1290   000C14  6ADA               	clrf	fsr2h,c
  1291   000C16  2ADF               	incf	indf2,f,c
  1292   000C18  EF1F  F006         	goto	l923
  1293   000C1C                     l1947:
  1294                           
  1295                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1296   000C1C  5010               	movf	vfpfcnvrt@fmt^0,w,c
  1297   000C1E  6ED9               	movwf	fsr2l,c
  1298   000C20  6ADA               	clrf	fsr2h,c
  1299   000C22  CFDF FFF6          	movff	indf2,tblptrl
  1300   000C26                     	if	1	;There is more than 1 active tblptr byte
  1301   000C26  0E08               	movlw	high __smallconst
  1302   000C28  6EF7               	movwf	tblptrh,c
  1303   000C2A                     	endif
  1304   000C2A                     	if	0	;tblptru may be non-zero
  1305   000C2A                     	endif
  1306   000C2A                     	if	0	;tblptru may be non-zero
  1307   000C2A                     	endif
  1308   000C2A  0008               	tblrd		*
  1309   000C2C  50F5               	movf	tablat,w,c
  1310   000C2E  6E01               	movwf	fputc@c^0,c
  1311   000C30  6A02               	clrf	(fputc@c+1)^0,c
  1312   000C32  C00F  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1313   000C36  ECA7  F008         	call	_fputc	;wreg free
  1314   000C3A  EF08  F006         	goto	l1943
  1315   000C3E                     l923:
  1316   000C3E  0012               	return		;funcret
  1317   000C40                     __end_of_vfpfcnvrt:
  1318                           	callstack 0
  1319                           
  1320 ;; *************** function _fputc *****************
  1321 ;; Defined at:
  1322 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  1323 ;; Parameters:    Size  Location     Type
  1324 ;;  c               2    0[COMRAM] int 
  1325 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  1326 ;;		 -> sprintf@f(12), 
  1327 ;; Auto vars:     Size  Location     Type
  1328 ;;		None
  1329 ;; Return value:  Size  Location     Type
  1330 ;;                  2    0[COMRAM] int 
  1331 ;; Registers used:
  1332 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1333 ;; Tracked objects:
  1334 ;;		On entry : 0/0
  1335 ;;		On exit  : 0/0
  1336 ;;		Unchanged: 0/0
  1337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1338 ;;      Params:         3       0       0       0       0       0       0       0       0
  1339 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1340 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1341 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1342 ;;Total ram usage:        8 bytes
  1343 ;; Hardware stack levels used: 1
  1344 ;; Hardware stack levels required when called: 1
  1345 ;; This function calls:
  1346 ;;		_putch
  1347 ;; This function is called by:
  1348 ;;		_vfpfcnvrt
  1349 ;; This function uses a non-reentrant model
  1350 ;;
  1351                           
  1352                           	psect	text4
  1353   00114E                     __ptext4:
  1354                           	callstack 0
  1355   00114E                     _fputc:
  1356                           	callstack 26
  1357   00114E  5003               	movf	fputc@fp^0,w,c
  1358   001150  B4D8               	btfsc	status,2,c
  1359   001152  EFAD  F008         	goto	u861
  1360   001156  EFAF  F008         	goto	u860
  1361   00115A                     u861:
  1362   00115A  EFB7  F008         	goto	l1739
  1363   00115E                     u860:
  1364   00115E  5003               	movf	fputc@fp^0,w,c
  1365   001160  A4D8               	btfss	status,2,c
  1366   001162  EFB5  F008         	goto	u871
  1367   001166  EFB7  F008         	goto	u870
  1368   00116A                     u871:
  1369   00116A  EFBC  F008         	goto	l1741
  1370   00116E                     u870:
  1371   00116E                     l1739:
  1372   00116E  5001               	movf	fputc@c^0,w,c
  1373   001170  ECFD  F00A         	call	_putch
  1374   001174  EFFB  F008         	goto	l948
  1375   001178                     l1741:
  1376   001178  5003               	movf	fputc@fp^0,w,c
  1377   00117A  6ED9               	movwf	fsr2l,c
  1378   00117C  6ADA               	clrf	fsr2h,c
  1379   00117E  0E0A               	movlw	10
  1380   001180  26D9               	addwf	fsr2l,f,c
  1381   001182  50DE               	movf	postinc2,w,c
  1382   001184  10DE               	iorwf	postinc2,w,c
  1383   001186  B4D8               	btfsc	status,2,c
  1384   001188  EFC8  F008         	goto	u881
  1385   00118C  EFCA  F008         	goto	u880
  1386   001190                     u881:
  1387   001190  EFE3  F008         	goto	l1745
  1388   001194                     u880:
  1389   001194  5003               	movf	fputc@fp^0,w,c
  1390   001196  6ED9               	movwf	fsr2l,c
  1391   001198  6ADA               	clrf	fsr2h,c
  1392   00119A  0E0A               	movlw	10
  1393   00119C  26D9               	addwf	fsr2l,f,c
  1394   00119E  5003               	movf	fputc@fp^0,w,c
  1395   0011A0  6EE1               	movwf	fsr1l,c
  1396   0011A2  6AE2               	clrf	fsr1h,c
  1397   0011A4  0E03               	movlw	3
  1398   0011A6  26E1               	addwf	fsr1l,f,c
  1399   0011A8  50DE               	movf	postinc2,w,c
  1400   0011AA  5CE6               	subwf	postinc1,w,c
  1401   0011AC  50E6               	movf	postinc1,w,c
  1402   0011AE  0A80               	xorlw	128
  1403   0011B0  6E08               	movwf	(??_fputc+4)^0,c
  1404   0011B2  50DE               	movf	postinc2,w,c
  1405   0011B4  0A80               	xorlw	128
  1406   0011B6  5808               	subwfb	(??_fputc+4)^0,w,c
  1407   0011B8  B0D8               	btfsc	status,0,c
  1408   0011BA  EFE1  F008         	goto	u891
  1409   0011BE  EFE3  F008         	goto	u890
  1410   0011C2                     u891:
  1411   0011C2  EFFB  F008         	goto	l948
  1412   0011C6                     u890:
  1413   0011C6                     l1745:
  1414   0011C6  5003               	movf	fputc@fp^0,w,c
  1415   0011C8  6ED9               	movwf	fsr2l,c
  1416   0011CA  6ADA               	clrf	fsr2h,c
  1417   0011CC  0E03               	movlw	3
  1418   0011CE  26D9               	addwf	fsr2l,f,c
  1419   0011D0  50DF               	movf	indf2,w,c
  1420   0011D2  6E04               	movwf	??_fputc^0,c
  1421   0011D4  5003               	movf	fputc@fp^0,w,c
  1422   0011D6  6ED9               	movwf	fsr2l,c
  1423   0011D8  6ADA               	clrf	fsr2h,c
  1424   0011DA  50DF               	movf	indf2,w,c
  1425   0011DC  2404               	addwf	??_fputc^0,w,c
  1426   0011DE  6ED9               	movwf	fsr2l,c
  1427   0011E0  6ADA               	clrf	fsr2h,c
  1428   0011E2  C001  FFDF         	movff	fputc@c,indf2
  1429   0011E6  5003               	movf	fputc@fp^0,w,c
  1430   0011E8  6ED9               	movwf	fsr2l,c
  1431   0011EA  6ADA               	clrf	fsr2h,c
  1432   0011EC  0E03               	movlw	3
  1433   0011EE  26D9               	addwf	fsr2l,f,c
  1434   0011F0  2ADE               	incf	postinc2,f,c
  1435   0011F2  0E00               	movlw	0
  1436   0011F4  22DD               	addwfc	postdec2,f,c
  1437   0011F6                     l948:
  1438   0011F6  0012               	return		;funcret
  1439   0011F8                     __end_of_fputc:
  1440                           	callstack 0
  1441                           
  1442 ;; *************** function _putch *****************
  1443 ;; Defined at:
  1444 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\putch.c"
  1445 ;; Parameters:    Size  Location     Type
  1446 ;;  c               1    wreg     unsigned char 
  1447 ;; Auto vars:     Size  Location     Type
  1448 ;;  c               1    0[COMRAM] unsigned char 
  1449 ;; Return value:  Size  Location     Type
  1450 ;;                  1    wreg      void 
  1451 ;; Registers used:
  1452 ;;		wreg
  1453 ;; Tracked objects:
  1454 ;;		On entry : 0/0
  1455 ;;		On exit  : 0/0
  1456 ;;		Unchanged: 0/0
  1457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1458 ;;      Params:         0       0       0       0       0       0       0       0       0
  1459 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1460 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1461 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1462 ;;Total ram usage:        0 bytes
  1463 ;; Hardware stack levels used: 1
  1464 ;; This function calls:
  1465 ;;		Nothing
  1466 ;; This function is called by:
  1467 ;;		_fputc
  1468 ;; This function uses a non-reentrant model
  1469 ;;
  1470                           
  1471                           	psect	text5
  1472   0015FA                     __ptext5:
  1473                           	callstack 0
  1474   0015FA                     _putch:
  1475                           	callstack 26
  1476   0015FA  0012               	return		;funcret
  1477   0015FC                     __end_of_putch:
  1478                           	callstack 0
  1479                           
  1480 ;; *************** function _abs *****************
  1481 ;; Defined at:
  1482 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
  1483 ;; Parameters:    Size  Location     Type
  1484 ;;  a               2    6[COMRAM] int 
  1485 ;; Auto vars:     Size  Location     Type
  1486 ;;		None
  1487 ;; Return value:  Size  Location     Type
  1488 ;;                  2    6[COMRAM] int 
  1489 ;; Registers used:
  1490 ;;		wreg, status,2, status,0
  1491 ;; Tracked objects:
  1492 ;;		On entry : 0/0
  1493 ;;		On exit  : 0/0
  1494 ;;		Unchanged: 0/0
  1495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1496 ;;      Params:         2       0       0       0       0       0       0       0       0
  1497 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1498 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1499 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1500 ;;Total ram usage:        4 bytes
  1501 ;; Hardware stack levels used: 1
  1502 ;; This function calls:
  1503 ;;		Nothing
  1504 ;; This function is called by:
  1505 ;;		_vfpfcnvrt
  1506 ;; This function uses a non-reentrant model
  1507 ;;
  1508                           
  1509                           	psect	text6
  1510   0014F6                     __ptext6:
  1511                           	callstack 0
  1512   0014F6                     _abs:
  1513                           	callstack 27
  1514   0014F6  BE08               	btfsc	(abs@a+1)^0,7,c
  1515   0014F8  EF80  F00A         	goto	u901
  1516   0014FC  EF82  F00A         	goto	u900
  1517   001500                     u901:
  1518   001500  EF88  F00A         	goto	l933
  1519   001504                     u900:
  1520   001504  C007  F007         	movff	abs@a,?_abs
  1521   001508  C008  F008         	movff	abs@a+1,?_abs+1
  1522   00150C  EF94  F00A         	goto	l936
  1523   001510                     l933:
  1524   001510  C007  F009         	movff	abs@a,??_abs
  1525   001514  C008  F00A         	movff	abs@a+1,??_abs+1
  1526   001518  1E09               	comf	??_abs^0,f,c
  1527   00151A  1E0A               	comf	(??_abs+1)^0,f,c
  1528   00151C  4A09               	infsnz	??_abs^0,f,c
  1529   00151E  2A0A               	incf	(??_abs+1)^0,f,c
  1530   001520  C009  F007         	movff	??_abs,?_abs
  1531   001524  C00A  F008         	movff	??_abs+1,?_abs+1
  1532   001528                     l936:
  1533   001528  0012               	return		;funcret
  1534   00152A                     __end_of_abs:
  1535                           	callstack 0
  1536                           
  1537 ;; *************** function ___awmod *****************
  1538 ;; Defined at:
  1539 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  1540 ;; Parameters:    Size  Location     Type
  1541 ;;  dividend        2    0[COMRAM] int 
  1542 ;;  divisor         2    2[COMRAM] int 
  1543 ;; Auto vars:     Size  Location     Type
  1544 ;;  sign            1    5[COMRAM] unsigned char 
  1545 ;;  counter         1    4[COMRAM] unsigned char 
  1546 ;; Return value:  Size  Location     Type
  1547 ;;                  2    0[COMRAM] int 
  1548 ;; Registers used:
  1549 ;;		wreg, status,2, status,0
  1550 ;; Tracked objects:
  1551 ;;		On entry : 0/0
  1552 ;;		On exit  : 0/0
  1553 ;;		Unchanged: 0/0
  1554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1555 ;;      Params:         4       0       0       0       0       0       0       0       0
  1556 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1557 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1558 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1559 ;;Total ram usage:        6 bytes
  1560 ;; Hardware stack levels used: 1
  1561 ;; This function calls:
  1562 ;;		Nothing
  1563 ;; This function is called by:
  1564 ;;		_vfpfcnvrt
  1565 ;; This function uses a non-reentrant model
  1566 ;;
  1567                           
  1568                           	psect	text7
  1569   00109E                     __ptext7:
  1570                           	callstack 0
  1571   00109E                     ___awmod:
  1572                           	callstack 27
  1573   00109E  0E00               	movlw	0
  1574   0010A0  6E06               	movwf	___awmod@sign^0,c
  1575   0010A2  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  1576   0010A4  EF58  F008         	goto	u800
  1577   0010A8  EF56  F008         	goto	u801
  1578   0010AC                     u801:
  1579   0010AC  EF5E  F008         	goto	l1707
  1580   0010B0                     u800:
  1581   0010B0  6C01               	negf	___awmod@dividend^0,c
  1582   0010B2  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1583   0010B4  B0D8               	btfsc	status,0,c
  1584   0010B6  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1585   0010B8  0E01               	movlw	1
  1586   0010BA  6E06               	movwf	___awmod@sign^0,c
  1587   0010BC                     l1707:
  1588   0010BC  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  1589   0010BE  EF65  F008         	goto	u810
  1590   0010C2  EF63  F008         	goto	u811
  1591   0010C6                     u811:
  1592   0010C6  EF69  F008         	goto	l1711
  1593   0010CA                     u810:
  1594   0010CA  6C03               	negf	___awmod@divisor^0,c
  1595   0010CC  1E04               	comf	(___awmod@divisor+1)^0,f,c
  1596   0010CE  B0D8               	btfsc	status,0,c
  1597   0010D0  2A04               	incf	(___awmod@divisor+1)^0,f,c
  1598   0010D2                     l1711:
  1599   0010D2  5003               	movf	___awmod@divisor^0,w,c
  1600   0010D4  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  1601   0010D6  B4D8               	btfsc	status,2,c
  1602   0010D8  EF70  F008         	goto	u821
  1603   0010DC  EF72  F008         	goto	u820
  1604   0010E0                     u821:
  1605   0010E0  EF96  F008         	goto	l1727
  1606   0010E4                     u820:
  1607   0010E4  0E01               	movlw	1
  1608   0010E6  6E05               	movwf	___awmod@counter^0,c
  1609   0010E8  EF7A  F008         	goto	l1717
  1610   0010EC                     l1715:
  1611   0010EC  90D8               	bcf	status,0,c
  1612   0010EE  3603               	rlcf	___awmod@divisor^0,f,c
  1613   0010F0  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  1614   0010F2  2A05               	incf	___awmod@counter^0,f,c
  1615   0010F4                     l1717:
  1616   0010F4  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  1617   0010F6  EF7F  F008         	goto	u831
  1618   0010FA  EF81  F008         	goto	u830
  1619   0010FE                     u831:
  1620   0010FE  EF76  F008         	goto	l1715
  1621   001102                     u830:
  1622   001102                     l1719:
  1623   001102  5003               	movf	___awmod@divisor^0,w,c
  1624   001104  5C01               	subwf	___awmod@dividend^0,w,c
  1625   001106  5004               	movf	(___awmod@divisor+1)^0,w,c
  1626   001108  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  1627   00110A  A0D8               	btfss	status,0,c
  1628   00110C  EF8A  F008         	goto	u841
  1629   001110  EF8C  F008         	goto	u840
  1630   001114                     u841:
  1631   001114  EF90  F008         	goto	l1723
  1632   001118                     u840:
  1633   001118  5003               	movf	___awmod@divisor^0,w,c
  1634   00111A  5E01               	subwf	___awmod@dividend^0,f,c
  1635   00111C  5004               	movf	(___awmod@divisor+1)^0,w,c
  1636   00111E  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  1637   001120                     l1723:
  1638   001120  90D8               	bcf	status,0,c
  1639   001122  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  1640   001124  3203               	rrcf	___awmod@divisor^0,f,c
  1641   001126  2E05               	decfsz	___awmod@counter^0,f,c
  1642   001128  EF81  F008         	goto	l1719
  1643   00112C                     l1727:
  1644   00112C  5006               	movf	___awmod@sign^0,w,c
  1645   00112E  B4D8               	btfsc	status,2,c
  1646   001130  EF9C  F008         	goto	u851
  1647   001134  EF9E  F008         	goto	u850
  1648   001138                     u851:
  1649   001138  EFA2  F008         	goto	l1731
  1650   00113C                     u850:
  1651   00113C  6C01               	negf	___awmod@dividend^0,c
  1652   00113E  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1653   001140  B0D8               	btfsc	status,0,c
  1654   001142  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1655   001144                     l1731:
  1656   001144  C001  F001         	movff	___awmod@dividend,?___awmod
  1657   001148  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  1658   00114C  0012               	return		;funcret
  1659   00114E                     __end_of___awmod:
  1660                           	callstack 0
  1661                           
  1662 ;; *************** function ___awdiv *****************
  1663 ;; Defined at:
  1664 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  1665 ;; Parameters:    Size  Location     Type
  1666 ;;  dividend        2    6[COMRAM] int 
  1667 ;;  divisor         2    8[COMRAM] int 
  1668 ;; Auto vars:     Size  Location     Type
  1669 ;;  quotient        2   12[COMRAM] int 
  1670 ;;  sign            1   11[COMRAM] unsigned char 
  1671 ;;  counter         1   10[COMRAM] unsigned char 
  1672 ;; Return value:  Size  Location     Type
  1673 ;;                  2    6[COMRAM] int 
  1674 ;; Registers used:
  1675 ;;		wreg, status,2, status,0
  1676 ;; Tracked objects:
  1677 ;;		On entry : 0/0
  1678 ;;		On exit  : 0/0
  1679 ;;		Unchanged: 0/0
  1680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1681 ;;      Params:         4       0       0       0       0       0       0       0       0
  1682 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1683 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1684 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1685 ;;Total ram usage:        8 bytes
  1686 ;; Hardware stack levels used: 1
  1687 ;; This function calls:
  1688 ;;		Nothing
  1689 ;; This function is called by:
  1690 ;;		_main
  1691 ;;		_vfpfcnvrt
  1692 ;; This function uses a non-reentrant model
  1693 ;;
  1694                           
  1695                           	psect	text8
  1696   000FDA                     __ptext8:
  1697                           	callstack 0
  1698   000FDA                     ___awdiv:
  1699                           	callstack 27
  1700   000FDA  0E00               	movlw	0
  1701   000FDC  6E0C               	movwf	___awdiv@sign^0,c
  1702   000FDE  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
  1703   000FE0  EFF6  F007         	goto	u740
  1704   000FE4  EFF4  F007         	goto	u741
  1705   000FE8                     u741:
  1706   000FE8  EFFC  F007         	goto	l1663
  1707   000FEC                     u740:
  1708   000FEC  6C09               	negf	___awdiv@divisor^0,c
  1709   000FEE  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
  1710   000FF0  B0D8               	btfsc	status,0,c
  1711   000FF2  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
  1712   000FF4  0E01               	movlw	1
  1713   000FF6  6E0C               	movwf	___awdiv@sign^0,c
  1714   000FF8                     l1663:
  1715   000FF8  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
  1716   000FFA  EF03  F008         	goto	u750
  1717   000FFE  EF01  F008         	goto	u751
  1718   001002                     u751:
  1719   001002  EF09  F008         	goto	l1669
  1720   001006                     u750:
  1721   001006  6C07               	negf	___awdiv@dividend^0,c
  1722   001008  1E08               	comf	(___awdiv@dividend+1)^0,f,c
  1723   00100A  B0D8               	btfsc	status,0,c
  1724   00100C  2A08               	incf	(___awdiv@dividend+1)^0,f,c
  1725   00100E  0E01               	movlw	1
  1726   001010  1A0C               	xorwf	___awdiv@sign^0,f,c
  1727   001012                     l1669:
  1728   001012  0E00               	movlw	0
  1729   001014  6E0E               	movwf	(___awdiv@quotient+1)^0,c
  1730   001016  0E00               	movlw	0
  1731   001018  6E0D               	movwf	___awdiv@quotient^0,c
  1732   00101A  5009               	movf	___awdiv@divisor^0,w,c
  1733   00101C  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
  1734   00101E  B4D8               	btfsc	status,2,c
  1735   001020  EF14  F008         	goto	u761
  1736   001024  EF16  F008         	goto	u760
  1737   001028                     u761:
  1738   001028  EF3E  F008         	goto	l1691
  1739   00102C                     u760:
  1740   00102C  0E01               	movlw	1
  1741   00102E  6E0B               	movwf	___awdiv@counter^0,c
  1742   001030  EF1E  F008         	goto	l1677
  1743   001034                     l1675:
  1744   001034  90D8               	bcf	status,0,c
  1745   001036  3609               	rlcf	___awdiv@divisor^0,f,c
  1746   001038  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
  1747   00103A  2A0B               	incf	___awdiv@counter^0,f,c
  1748   00103C                     l1677:
  1749   00103C  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  1750   00103E  EF23  F008         	goto	u771
  1751   001042  EF25  F008         	goto	u770
  1752   001046                     u771:
  1753   001046  EF1A  F008         	goto	l1675
  1754   00104A                     u770:
  1755   00104A                     l1679:
  1756   00104A  90D8               	bcf	status,0,c
  1757   00104C  360D               	rlcf	___awdiv@quotient^0,f,c
  1758   00104E  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
  1759   001050  5009               	movf	___awdiv@divisor^0,w,c
  1760   001052  5C07               	subwf	___awdiv@dividend^0,w,c
  1761   001054  500A               	movf	(___awdiv@divisor+1)^0,w,c
  1762   001056  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
  1763   001058  A0D8               	btfss	status,0,c
  1764   00105A  EF31  F008         	goto	u781
  1765   00105E  EF33  F008         	goto	u780
  1766   001062                     u781:
  1767   001062  EF38  F008         	goto	l1687
  1768   001066                     u780:
  1769   001066  5009               	movf	___awdiv@divisor^0,w,c
  1770   001068  5E07               	subwf	___awdiv@dividend^0,f,c
  1771   00106A  500A               	movf	(___awdiv@divisor+1)^0,w,c
  1772   00106C  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
  1773   00106E  800D               	bsf	___awdiv@quotient^0,0,c
  1774   001070                     l1687:
  1775   001070  90D8               	bcf	status,0,c
  1776   001072  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
  1777   001074  3209               	rrcf	___awdiv@divisor^0,f,c
  1778   001076  2E0B               	decfsz	___awdiv@counter^0,f,c
  1779   001078  EF25  F008         	goto	l1679
  1780   00107C                     l1691:
  1781   00107C  500C               	movf	___awdiv@sign^0,w,c
  1782   00107E  B4D8               	btfsc	status,2,c
  1783   001080  EF44  F008         	goto	u791
  1784   001084  EF46  F008         	goto	u790
  1785   001088                     u791:
  1786   001088  EF4A  F008         	goto	l1695
  1787   00108C                     u790:
  1788   00108C  6C0D               	negf	___awdiv@quotient^0,c
  1789   00108E  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
  1790   001090  B0D8               	btfsc	status,0,c
  1791   001092  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
  1792   001094                     l1695:
  1793   001094  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  1794   001098  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  1795   00109C  0012               	return		;funcret
  1796   00109E                     __end_of___awdiv:
  1797                           	callstack 0
  1798                           
  1799 ;; *************** function _limitante *****************
  1800 ;; Defined at:
  1801 ;;		line 108 in file "newmain.c"
  1802 ;; Parameters:    Size  Location     Type
  1803 ;;		None
  1804 ;; Auto vars:     Size  Location     Type
  1805 ;;  valor           2   15[COMRAM] int 
  1806 ;;  op              1   17[COMRAM] unsigned char 
  1807 ;; Return value:  Size  Location     Type
  1808 ;;                  2   94[None  ] int 
  1809 ;; Registers used:
  1810 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1811 ;; Tracked objects:
  1812 ;;		On entry : 0/0
  1813 ;;		On exit  : 0/0
  1814 ;;		Unchanged: 0/0
  1815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1816 ;;      Params:         0       0       0       0       0       0       0       0       0
  1817 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1818 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1819 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1820 ;;Total ram usage:        5 bytes
  1821 ;; Hardware stack levels used: 1
  1822 ;; Hardware stack levels required when called: 3
  1823 ;; This function calls:
  1824 ;;		_Keypad
  1825 ;;		_WriteCmdXLCD
  1826 ;;		_putsXLCD
  1827 ;;		_readNumber
  1828 ;; This function is called by:
  1829 ;;		_main
  1830 ;; This function uses a non-reentrant model
  1831 ;;
  1832                           
  1833                           	psect	text9
  1834   000C40                     __ptext9:
  1835                           	callstack 0
  1836   000C40                     _limitante:
  1837                           	callstack 27
  1838   000C40                     
  1839                           ;newmain.c: 109:     char op;;newmain.c: 110:     int valor;;newmain.c: 112:     WriteCm
      +                          dXLCD(0x01);
  1840   000C40  0E01               	movlw	1
  1841   000C42  EC42  F00A         	call	_WriteCmdXLCD
  1842                           
  1843                           ;newmain.c: 113:     WriteCmdXLCD(0x80);
  1844   000C46  0E80               	movlw	128
  1845   000C48  EC42  F00A         	call	_WriteCmdXLCD
  1846   000C4C                     
  1847                           ;newmain.c: 114:     putsXLCD("Carregando");
  1848   000C4C  0E1B               	movlw	low STR_1
  1849   000C4E  6E02               	movwf	putsXLCD@buffer^0,c
  1850   000C50  5002               	movf	putsXLCD@buffer^0,w,c
  1851   000C52  A4D8               	btfss	status,2,c
  1852   000C54  0E08               	movlw	high __smallconst
  1853   000C56  6E03               	movwf	(putsXLCD@buffer+1)^0,c
  1854   000C58  EC44  F009         	call	_putsXLCD	;wreg free
  1855   000C5C                     
  1856                           ;newmain.c: 115:     _delay((unsigned long)((1000)*(20000000/4000.0)));
  1857   000C5C  0E1A               	movlw	26
  1858   000C5E  6E0F               	movwf	(??_limitante+1)^0,c
  1859   000C60  0E5E               	movlw	94
  1860   000C62  6E0E               	movwf	??_limitante^0,c
  1861   000C64  0E6E               	movlw	110
  1862   000C66                     u1507:
  1863   000C66  2EE8               	decfsz	wreg,f,c
  1864   000C68  D7FE               	bra	u1507
  1865   000C6A  2E0E               	decfsz	??_limitante^0,f,c
  1866   000C6C  D7FC               	bra	u1507
  1867   000C6E  2E0F               	decfsz	(??_limitante+1)^0,f,c
  1868   000C70  D7FA               	bra	u1507
  1869   000C72  D000               	nop2	
  1870   000C74                     
  1871                           ;newmain.c: 116:     WriteCmdXLCD(0x01);
  1872   000C74  0E01               	movlw	1
  1873   000C76  EC42  F00A         	call	_WriteCmdXLCD
  1874   000C7A                     l2071:
  1875                           
  1876                           ;newmain.c: 119:         WriteCmdXLCD(0x80);
  1877   000C7A  0E80               	movlw	128
  1878   000C7C  EC42  F00A         	call	_WriteCmdXLCD
  1879   000C80                     
  1880                           ;newmain.c: 120:         putsXLCD("A-UR B-Ph C-Tc");
  1881   000C80  0E01               	movlw	low STR_2
  1882   000C82  6E02               	movwf	putsXLCD@buffer^0,c
  1883   000C84  5002               	movf	putsXLCD@buffer^0,w,c
  1884   000C86  A4D8               	btfss	status,2,c
  1885   000C88  0E08               	movlw	high __smallconst
  1886   000C8A  6E03               	movwf	(putsXLCD@buffer+1)^0,c
  1887   000C8C  EC44  F009         	call	_putsXLCD	;wreg free
  1888   000C90                     
  1889                           ;newmain.c: 121:         op = Keypad();
  1890   000C90  ECCC  F006         	call	_Keypad	;wreg free
  1891   000C94  6E12               	movwf	limitante@op^0,c
  1892   000C96                     
  1893                           ;newmain.c: 122:         if (op == 'A' || op == 'B' || op == 'C') {
  1894   000C96  0E41               	movlw	65
  1895   000C98  1812               	xorwf	limitante@op^0,w,c
  1896   000C9A  B4D8               	btfsc	status,2,c
  1897   000C9C  EF52  F006         	goto	u1301
  1898   000CA0  EF54  F006         	goto	u1300
  1899   000CA4                     u1301:
  1900   000CA4  EF66  F006         	goto	l2083
  1901   000CA8                     u1300:
  1902   000CA8  0E42               	movlw	66
  1903   000CAA  1812               	xorwf	limitante@op^0,w,c
  1904   000CAC  B4D8               	btfsc	status,2,c
  1905   000CAE  EF5B  F006         	goto	u1311
  1906   000CB2  EF5D  F006         	goto	u1310
  1907   000CB6                     u1311:
  1908   000CB6  EF66  F006         	goto	l2083
  1909   000CBA                     u1310:
  1910   000CBA  0E43               	movlw	67
  1911   000CBC  1812               	xorwf	limitante@op^0,w,c
  1912   000CBE  A4D8               	btfss	status,2,c
  1913   000CC0  EF64  F006         	goto	u1321
  1914   000CC4  EF66  F006         	goto	u1320
  1915   000CC8                     u1321:
  1916   000CC8  EFB3  F006         	goto	l2105
  1917   000CCC                     u1320:
  1918   000CCC                     l2083:
  1919                           
  1920                           ;newmain.c: 123:             WriteCmdXLCD(0xC0);
  1921   000CCC  0EC0               	movlw	192
  1922   000CCE  EC42  F00A         	call	_WriteCmdXLCD
  1923   000CD2                     
  1924                           ;newmain.c: 124:             putsXLCD("Valor:");
  1925   000CD2  0E26               	movlw	low STR_3
  1926   000CD4  6E02               	movwf	putsXLCD@buffer^0,c
  1927   000CD6  5002               	movf	putsXLCD@buffer^0,w,c
  1928   000CD8  A4D8               	btfss	status,2,c
  1929   000CDA  0E08               	movlw	high __smallconst
  1930   000CDC  6E03               	movwf	(putsXLCD@buffer+1)^0,c
  1931   000CDE  EC44  F009         	call	_putsXLCD	;wreg free
  1932   000CE2                     
  1933                           ;newmain.c: 125:             valor = readNumber();
  1934   000CE2  ECFC  F008         	call	_readNumber	;wreg free
  1935   000CE6  C007  F010         	movff	?_readNumber,limitante@valor
  1936   000CEA  C008  F011         	movff	?_readNumber+1,limitante@valor+1
  1937   000CEE                     
  1938                           ;newmain.c: 126:             if (op == 'A') limite_UR = valor;
  1939   000CEE  0E41               	movlw	65
  1940   000CF0  1812               	xorwf	limitante@op^0,w,c
  1941   000CF2  A4D8               	btfss	status,2,c
  1942   000CF4  EF7E  F006         	goto	u1331
  1943   000CF8  EF80  F006         	goto	u1330
  1944   000CFC                     u1331:
  1945   000CFC  EF84  F006         	goto	l2093
  1946   000D00                     u1330:
  1947   000D00  C010  F05A         	movff	limitante@valor,_limite_UR
  1948   000D04  C011  F05B         	movff	limitante@valor+1,_limite_UR+1
  1949   000D08                     l2093:
  1950                           
  1951                           ;newmain.c: 127:             if (op == 'B') limite_Ph = valor;
  1952   000D08  0E42               	movlw	66
  1953   000D0A  1812               	xorwf	limitante@op^0,w,c
  1954   000D0C  A4D8               	btfss	status,2,c
  1955   000D0E  EF8B  F006         	goto	u1341
  1956   000D12  EF8D  F006         	goto	u1340
  1957   000D16                     u1341:
  1958   000D16  EF91  F006         	goto	l2097
  1959   000D1A                     u1340:
  1960   000D1A  C010  F056         	movff	limitante@valor,_limite_Ph
  1961   000D1E  C011  F057         	movff	limitante@valor+1,_limite_Ph+1
  1962   000D22                     l2097:
  1963                           
  1964                           ;newmain.c: 128:             if (op == 'C') limite_Tc = valor;
  1965   000D22  0E43               	movlw	67
  1966   000D24  1812               	xorwf	limitante@op^0,w,c
  1967   000D26  A4D8               	btfss	status,2,c
  1968   000D28  EF98  F006         	goto	u1351
  1969   000D2C  EF9A  F006         	goto	u1350
  1970   000D30                     u1351:
  1971   000D30  EF9E  F006         	goto	l2101
  1972   000D34                     u1350:
  1973   000D34  C010  F058         	movff	limitante@valor,_limite_Tc
  1974   000D38  C011  F059         	movff	limitante@valor+1,_limite_Tc+1
  1975   000D3C                     l2101:
  1976                           
  1977                           ;newmain.c: 129:             putsXLCD("Atualizado");
  1978   000D3C  0E10               	movlw	low STR_4
  1979   000D3E  6E02               	movwf	putsXLCD@buffer^0,c
  1980   000D40  5002               	movf	putsXLCD@buffer^0,w,c
  1981   000D42  A4D8               	btfss	status,2,c
  1982   000D44  0E08               	movlw	high __smallconst
  1983   000D46  6E03               	movwf	(putsXLCD@buffer+1)^0,c
  1984   000D48  EC44  F009         	call	_putsXLCD	;wreg free
  1985   000D4C                     
  1986                           ;newmain.c: 130:             _delay((unsigned long)((2000)*(20000000/4000.0)));
  1987   000D4C  0E33               	movlw	51
  1988   000D4E  6E0F               	movwf	(??_limitante+1)^0,c
  1989   000D50  0EBB               	movlw	187
  1990   000D52  6E0E               	movwf	??_limitante^0,c
  1991   000D54  0EE0               	movlw	224
  1992   000D56                     u1517:
  1993   000D56  2EE8               	decfsz	wreg,f,c
  1994   000D58  D7FE               	bra	u1517
  1995   000D5A  2E0E               	decfsz	??_limitante^0,f,c
  1996   000D5C  D7FC               	bra	u1517
  1997   000D5E  2E0F               	decfsz	(??_limitante+1)^0,f,c
  1998   000D60  D7FA               	bra	u1517
  1999                           
  2000                           ;newmain.c: 131:             break;
  2001   000D62  EFCB  F006         	goto	l105
  2002   000D66                     l2105:
  2003                           
  2004                           ;newmain.c: 133:         if(op == '*') break;
  2005   000D66  0E2A               	movlw	42
  2006   000D68  1812               	xorwf	limitante@op^0,w,c
  2007   000D6A  A4D8               	btfss	status,2,c
  2008   000D6C  EFBA  F006         	goto	u1361
  2009   000D70  EFBC  F006         	goto	u1360
  2010   000D74                     u1361:
  2011   000D74  EFBE  F006         	goto	l2109
  2012   000D78                     u1360:
  2013   000D78  EFCB  F006         	goto	l105
  2014   000D7C                     l2109:
  2015                           
  2016                           ;newmain.c: 134:         _delay((unsigned long)((100)*(20000000/4000.0)));
  2017   000D7C  0E03               	movlw	3
  2018   000D7E  6E0F               	movwf	(??_limitante+1)^0,c
  2019   000D80  0E8A               	movlw	138
  2020   000D82  6E0E               	movwf	??_limitante^0,c
  2021   000D84  0E56               	movlw	86
  2022   000D86                     u1527:
  2023   000D86  2EE8               	decfsz	wreg,f,c
  2024   000D88  D7FE               	bra	u1527
  2025   000D8A  2E0E               	decfsz	??_limitante^0,f,c
  2026   000D8C  D7FC               	bra	u1527
  2027   000D8E  2E0F               	decfsz	(??_limitante+1)^0,f,c
  2028   000D90  D7FA               	bra	u1527
  2029   000D92  EF3D  F006         	goto	l2071
  2030   000D96                     l105:
  2031   000D96  0012               	return		;funcret
  2032   000D98                     __end_of_limitante:
  2033                           	callstack 0
  2034                           
  2035 ;; *************** function _readNumber *****************
  2036 ;; Defined at:
  2037 ;;		line 86 in file "newmain.c"
  2038 ;; Parameters:    Size  Location     Type
  2039 ;;		None
  2040 ;; Auto vars:     Size  Location     Type
  2041 ;;  num             2   10[COMRAM] int 
  2042 ;;  key             1   12[COMRAM] unsigned char 
  2043 ;; Return value:  Size  Location     Type
  2044 ;;                  2    6[COMRAM] int 
  2045 ;; Registers used:
  2046 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2047 ;; Tracked objects:
  2048 ;;		On entry : 0/0
  2049 ;;		On exit  : 0/0
  2050 ;;		Unchanged: 0/0
  2051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2052 ;;      Params:         2       0       0       0       0       0       0       0       0
  2053 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2054 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2055 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2056 ;;Total ram usage:        7 bytes
  2057 ;; Hardware stack levels used: 1
  2058 ;; Hardware stack levels required when called: 1
  2059 ;; This function calls:
  2060 ;;		_Keypad
  2061 ;;		___wmul
  2062 ;; This function is called by:
  2063 ;;		_limitante
  2064 ;; This function uses a non-reentrant model
  2065 ;;
  2066                           
  2067                           	psect	text10
  2068   0011F8                     __ptext10:
  2069                           	callstack 0
  2070   0011F8                     _readNumber:
  2071                           	callstack 28
  2072   0011F8                     
  2073                           ;newmain.c: 88:     int num = 0;
  2074   0011F8  0E00               	movlw	0
  2075   0011FA  6E0C               	movwf	(readNumber@num+1)^0,c
  2076   0011FC  0E00               	movlw	0
  2077   0011FE  6E0B               	movwf	readNumber@num^0,c
  2078   001200                     l1955:
  2079                           
  2080                           ;newmain.c: 93:         key = Keypad();
  2081   001200  ECCC  F006         	call	_Keypad	;wreg free
  2082   001204  6E0D               	movwf	readNumber@key^0,c
  2083   001206                     
  2084                           ;newmain.c: 94:         if (key == '#') {
  2085   001206  0E23               	movlw	35
  2086   001208  180D               	xorwf	readNumber@key^0,w,c
  2087   00120A  A4D8               	btfss	status,2,c
  2088   00120C  EF0A  F009         	goto	u1181
  2089   001210  EF0C  F009         	goto	u1180
  2090   001214                     u1181:
  2091   001214  EF0E  F009         	goto	l1961
  2092   001218                     u1180:
  2093   001218  EF3F  F009         	goto	l89
  2094   00121C                     l1961:
  2095                           
  2096                           ;newmain.c: 97:         if (key >= '0' && key <= '9') {
  2097   00121C  0E2F               	movlw	47
  2098   00121E  640D               	cpfsgt	readNumber@key^0,c
  2099   001220  EF14  F009         	goto	u1191
  2100   001224  EF16  F009         	goto	u1190
  2101   001228                     u1191:
  2102   001228  EF32  F009         	goto	l1967
  2103   00122C                     u1190:
  2104   00122C  0E3A               	movlw	58
  2105   00122E  600D               	cpfslt	readNumber@key^0,c
  2106   001230  EF1C  F009         	goto	u1201
  2107   001234  EF1E  F009         	goto	u1200
  2108   001238                     u1201:
  2109   001238  EF32  F009         	goto	l1967
  2110   00123C                     u1200:
  2111   00123C                     
  2112                           ;newmain.c: 98:             num = num * 10 + (key - '0');
  2113   00123C  C00B  F001         	movff	readNumber@num,___wmul@multiplier
  2114   001240  C00C  F002         	movff	readNumber@num+1,___wmul@multiplier+1
  2115   001244  0E00               	movlw	0
  2116   001246  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2117   001248  0E0A               	movlw	10
  2118   00124A  6E03               	movwf	___wmul@multiplicand^0,c
  2119   00124C  ECD1  F00A         	call	___wmul	;wreg free
  2120   001250  500D               	movf	readNumber@key^0,w,c
  2121   001252  2601               	addwf	?___wmul^0,f,c
  2122   001254  0E00               	movlw	0
  2123   001256  2202               	addwfc	(?___wmul+1)^0,f,c
  2124   001258  0ED0               	movlw	208
  2125   00125A  2401               	addwf	?___wmul^0,w,c
  2126   00125C  6E0B               	movwf	readNumber@num^0,c
  2127   00125E  0EFF               	movlw	255
  2128   001260  2002               	addwfc	(?___wmul+1)^0,w,c
  2129   001262  6E0C               	movwf	(readNumber@num+1)^0,c
  2130   001264                     l1967:
  2131                           
  2132                           ;newmain.c: 102:         _delay((unsigned long)((200)*(20000000/4000.0)));
  2133   001264  0E06               	movlw	6
  2134   001266  6E0A               	movwf	(??_readNumber+1)^0,c
  2135   001268  0E13               	movlw	19
  2136   00126A  6E09               	movwf	??_readNumber^0,c
  2137   00126C  0EAE               	movlw	174
  2138   00126E                     u1537:
  2139   00126E  2EE8               	decfsz	wreg,f,c
  2140   001270  D7FE               	bra	u1537
  2141   001272  2E09               	decfsz	??_readNumber^0,f,c
  2142   001274  D7FC               	bra	u1537
  2143   001276  2E0A               	decfsz	(??_readNumber+1)^0,f,c
  2144   001278  D7FA               	bra	u1537
  2145   00127A  EF00  F009         	goto	l1955
  2146   00127E                     l89:
  2147                           
  2148                           ;newmain.c: 104:     return num;
  2149   00127E  C00B  F007         	movff	readNumber@num,?_readNumber
  2150   001282  C00C  F008         	movff	readNumber@num+1,?_readNumber+1
  2151   001286  0012               	return		;funcret
  2152   001288                     __end_of_readNumber:
  2153                           	callstack 0
  2154                           
  2155 ;; *************** function ___wmul *****************
  2156 ;; Defined at:
  2157 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  2158 ;; Parameters:    Size  Location     Type
  2159 ;;  multiplier      2    0[COMRAM] unsigned int 
  2160 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2161 ;; Auto vars:     Size  Location     Type
  2162 ;;  product         2    4[COMRAM] unsigned int 
  2163 ;; Return value:  Size  Location     Type
  2164 ;;                  2    0[COMRAM] unsigned int 
  2165 ;; Registers used:
  2166 ;;		wreg, status,2, status,0, prodl, prodh
  2167 ;; Tracked objects:
  2168 ;;		On entry : 0/0
  2169 ;;		On exit  : 0/0
  2170 ;;		Unchanged: 0/0
  2171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2172 ;;      Params:         4       0       0       0       0       0       0       0       0
  2173 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2174 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2175 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2176 ;;Total ram usage:        6 bytes
  2177 ;; Hardware stack levels used: 1
  2178 ;; This function calls:
  2179 ;;		Nothing
  2180 ;; This function is called by:
  2181 ;;		_readNumber
  2182 ;;		_main
  2183 ;; This function uses a non-reentrant model
  2184 ;;
  2185                           
  2186                           	psect	text11
  2187   0015A2                     __ptext11:
  2188                           	callstack 0
  2189   0015A2                     ___wmul:
  2190                           	callstack 28
  2191   0015A2  5001               	movf	___wmul@multiplier^0,w,c
  2192   0015A4  0203               	mulwf	___wmul@multiplicand^0,c
  2193   0015A6  CFF3 F005          	movff	prodl,___wmul@product
  2194   0015AA  CFF4 F006          	movff	prodh,___wmul@product+1
  2195   0015AE  5001               	movf	___wmul@multiplier^0,w,c
  2196   0015B0  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2197   0015B2  50F3               	movf	243,w,c
  2198   0015B4  2606               	addwf	(___wmul@product+1)^0,f,c
  2199   0015B6  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2200   0015B8  0203               	mulwf	___wmul@multiplicand^0,c
  2201   0015BA  50F3               	movf	243,w,c
  2202   0015BC  2606               	addwf	(___wmul@product+1)^0,f,c
  2203   0015BE  C005  F001         	movff	___wmul@product,?___wmul
  2204   0015C2  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2205   0015C6  0012               	return		;funcret
  2206   0015C8                     __end_of___wmul:
  2207                           	callstack 0
  2208                           
  2209 ;; *************** function _Keypad *****************
  2210 ;; Defined at:
  2211 ;;		line 57 in file "newmain.c"
  2212 ;; Parameters:    Size  Location     Type
  2213 ;;		None
  2214 ;; Auto vars:     Size  Location     Type
  2215 ;;		None
  2216 ;; Return value:  Size  Location     Type
  2217 ;;                  1    wreg      unsigned char 
  2218 ;; Registers used:
  2219 ;;		wreg, status,2
  2220 ;; Tracked objects:
  2221 ;;		On entry : 0/0
  2222 ;;		On exit  : 0/0
  2223 ;;		Unchanged: 0/0
  2224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2225 ;;      Params:         0       0       0       0       0       0       0       0       0
  2226 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2227 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2228 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2229 ;;Total ram usage:        0 bytes
  2230 ;; Hardware stack levels used: 1
  2231 ;; This function calls:
  2232 ;;		Nothing
  2233 ;; This function is called by:
  2234 ;;		_readNumber
  2235 ;;		_limitante
  2236 ;;		_main
  2237 ;; This function uses a non-reentrant model
  2238 ;;
  2239                           
  2240                           	psect	text12
  2241   000D98                     __ptext12:
  2242                           	callstack 0
  2243   000D98                     _Keypad:
  2244                           	callstack 28
  2245   000D98                     
  2246                           ;newmain.c: 59:     PORTB = 0b11110111;
  2247   000D98  0EF7               	movlw	247
  2248   000D9A  6E81               	movwf	129,c	;volatile
  2249   000D9C                     
  2250                           ;newmain.c: 60:     if (!PORTBbits.RB4) return '1';
  2251   000D9C  B881               	btfsc	129,4,c	;volatile
  2252   000D9E  EFD3  F006         	goto	u911
  2253   000DA2  EFD5  F006         	goto	u910
  2254   000DA6                     u911:
  2255   000DA6  EFD8  F006         	goto	l68
  2256   000DAA                     u910:
  2257   000DAA  0E31               	movlw	49
  2258   000DAC  EF75  F007         	goto	l69
  2259   000DB0                     l68:
  2260                           
  2261                           ;newmain.c: 61:     if (!PORTBbits.RB5) return '4';
  2262   000DB0  BA81               	btfsc	129,5,c	;volatile
  2263   000DB2  EFDD  F006         	goto	u921
  2264   000DB6  EFDF  F006         	goto	u920
  2265   000DBA                     u921:
  2266   000DBA  EFE2  F006         	goto	l70
  2267   000DBE                     u920:
  2268   000DBE  0E34               	movlw	52
  2269   000DC0  EF75  F007         	goto	l69
  2270   000DC4                     l70:
  2271                           
  2272                           ;newmain.c: 62:     if (!PORTBbits.RB6) return '7';
  2273   000DC4  BC81               	btfsc	129,6,c	;volatile
  2274   000DC6  EFE7  F006         	goto	u931
  2275   000DCA  EFE9  F006         	goto	u930
  2276   000DCE                     u931:
  2277   000DCE  EFEC  F006         	goto	l71
  2278   000DD2                     u930:
  2279   000DD2  0E37               	movlw	55
  2280   000DD4  EF75  F007         	goto	l69
  2281   000DD8                     l71:
  2282                           
  2283                           ;newmain.c: 63:     if (!PORTBbits.RB7) return '*';
  2284   000DD8  BE81               	btfsc	129,7,c	;volatile
  2285   000DDA  EFF1  F006         	goto	u941
  2286   000DDE  EFF3  F006         	goto	u940
  2287   000DE2                     u941:
  2288   000DE2  EFF6  F006         	goto	l1773
  2289   000DE6                     u940:
  2290   000DE6  0E2A               	movlw	42
  2291   000DE8  EF75  F007         	goto	l69
  2292   000DEC                     l1773:
  2293                           
  2294                           ;newmain.c: 65:     PORTB = 0b11111011;
  2295   000DEC  0EFB               	movlw	251
  2296   000DEE  6E81               	movwf	129,c	;volatile
  2297   000DF0                     
  2298                           ;newmain.c: 66:     if (!PORTBbits.RB4) return '2';
  2299   000DF0  B881               	btfsc	129,4,c	;volatile
  2300   000DF2  EFFD  F006         	goto	u951
  2301   000DF6  EFFF  F006         	goto	u950
  2302   000DFA                     u951:
  2303   000DFA  EF02  F007         	goto	l73
  2304   000DFE                     u950:
  2305   000DFE  0E32               	movlw	50
  2306   000E00  EF75  F007         	goto	l69
  2307   000E04                     l73:
  2308                           
  2309                           ;newmain.c: 67:     if (!PORTBbits.RB5) return '5';
  2310   000E04  BA81               	btfsc	129,5,c	;volatile
  2311   000E06  EF07  F007         	goto	u961
  2312   000E0A  EF09  F007         	goto	u960
  2313   000E0E                     u961:
  2314   000E0E  EF0C  F007         	goto	l74
  2315   000E12                     u960:
  2316   000E12  0E35               	movlw	53
  2317   000E14  EF75  F007         	goto	l69
  2318   000E18                     l74:
  2319                           
  2320                           ;newmain.c: 68:     if (!PORTBbits.RB6) return '8';
  2321   000E18  BC81               	btfsc	129,6,c	;volatile
  2322   000E1A  EF11  F007         	goto	u971
  2323   000E1E  EF13  F007         	goto	u970
  2324   000E22                     u971:
  2325   000E22  EF16  F007         	goto	l75
  2326   000E26                     u970:
  2327   000E26  0E38               	movlw	56
  2328   000E28  EF75  F007         	goto	l69
  2329   000E2C                     l75:
  2330                           
  2331                           ;newmain.c: 69:     if (!PORTBbits.RB7) return '0';
  2332   000E2C  BE81               	btfsc	129,7,c	;volatile
  2333   000E2E  EF1B  F007         	goto	u981
  2334   000E32  EF1D  F007         	goto	u980
  2335   000E36                     u981:
  2336   000E36  EF20  F007         	goto	l1793
  2337   000E3A                     u980:
  2338   000E3A  0E30               	movlw	48
  2339   000E3C  EF75  F007         	goto	l69
  2340   000E40                     l1793:
  2341                           
  2342                           ;newmain.c: 71:     PORTB = 0b11111101;
  2343   000E40  0EFD               	movlw	253
  2344   000E42  6E81               	movwf	129,c	;volatile
  2345   000E44                     
  2346                           ;newmain.c: 72:     if (!PORTBbits.RB4) return '3';
  2347   000E44  B881               	btfsc	129,4,c	;volatile
  2348   000E46  EF27  F007         	goto	u991
  2349   000E4A  EF29  F007         	goto	u990
  2350   000E4E                     u991:
  2351   000E4E  EF2C  F007         	goto	l77
  2352   000E52                     u990:
  2353   000E52  0E33               	movlw	51
  2354   000E54  EF75  F007         	goto	l69
  2355   000E58                     l77:
  2356                           
  2357                           ;newmain.c: 73:     if (!PORTBbits.RB5) return '6';
  2358   000E58  BA81               	btfsc	129,5,c	;volatile
  2359   000E5A  EF31  F007         	goto	u1001
  2360   000E5E  EF33  F007         	goto	u1000
  2361   000E62                     u1001:
  2362   000E62  EF36  F007         	goto	l78
  2363   000E66                     u1000:
  2364   000E66  0E36               	movlw	54
  2365   000E68  EF75  F007         	goto	l69
  2366   000E6C                     l78:
  2367                           
  2368                           ;newmain.c: 74:     if (!PORTBbits.RB6) return '9';
  2369   000E6C  BC81               	btfsc	129,6,c	;volatile
  2370   000E6E  EF3B  F007         	goto	u1011
  2371   000E72  EF3D  F007         	goto	u1010
  2372   000E76                     u1011:
  2373   000E76  EF40  F007         	goto	l79
  2374   000E7A                     u1010:
  2375   000E7A  0E39               	movlw	57
  2376   000E7C  EF75  F007         	goto	l69
  2377   000E80                     l79:
  2378                           
  2379                           ;newmain.c: 75:     if (!PORTBbits.RB7) return '#';
  2380   000E80  BE81               	btfsc	129,7,c	;volatile
  2381   000E82  EF45  F007         	goto	u1021
  2382   000E86  EF47  F007         	goto	u1020
  2383   000E8A                     u1021:
  2384   000E8A  EF4A  F007         	goto	l1813
  2385   000E8E                     u1020:
  2386   000E8E  0E23               	movlw	35
  2387   000E90  EF75  F007         	goto	l69
  2388   000E94                     l1813:
  2389                           
  2390                           ;newmain.c: 77:     PORTB = 0b11111110;
  2391   000E94  0EFE               	movlw	254
  2392   000E96  6E81               	movwf	129,c	;volatile
  2393   000E98                     
  2394                           ;newmain.c: 78:     if (!PORTBbits.RB4) return 'A';
  2395   000E98  B881               	btfsc	129,4,c	;volatile
  2396   000E9A  EF51  F007         	goto	u1031
  2397   000E9E  EF53  F007         	goto	u1030
  2398   000EA2                     u1031:
  2399   000EA2  EF56  F007         	goto	l81
  2400   000EA6                     u1030:
  2401   000EA6  0E41               	movlw	65
  2402   000EA8  EF75  F007         	goto	l69
  2403   000EAC                     l81:
  2404                           
  2405                           ;newmain.c: 79:     if (!PORTBbits.RB5) return 'B';
  2406   000EAC  BA81               	btfsc	129,5,c	;volatile
  2407   000EAE  EF5B  F007         	goto	u1041
  2408   000EB2  EF5D  F007         	goto	u1040
  2409   000EB6                     u1041:
  2410   000EB6  EF60  F007         	goto	l82
  2411   000EBA                     u1040:
  2412   000EBA  0E42               	movlw	66
  2413   000EBC  EF75  F007         	goto	l69
  2414   000EC0                     l82:
  2415                           
  2416                           ;newmain.c: 80:     if (!PORTBbits.RB6) return 'C';
  2417   000EC0  BC81               	btfsc	129,6,c	;volatile
  2418   000EC2  EF65  F007         	goto	u1051
  2419   000EC6  EF67  F007         	goto	u1050
  2420   000ECA                     u1051:
  2421   000ECA  EF6A  F007         	goto	l83
  2422   000ECE                     u1050:
  2423   000ECE  0E43               	movlw	67
  2424   000ED0  EF75  F007         	goto	l69
  2425   000ED4                     l83:
  2426                           
  2427                           ;newmain.c: 81:     if (!PORTBbits.RB7) return 'D';
  2428   000ED4  BE81               	btfsc	129,7,c	;volatile
  2429   000ED6  EF6F  F007         	goto	u1061
  2430   000EDA  EF71  F007         	goto	u1060
  2431   000EDE                     u1061:
  2432   000EDE  EF74  F007         	goto	l1833
  2433   000EE2                     u1060:
  2434   000EE2  0E44               	movlw	68
  2435   000EE4  EF75  F007         	goto	l69
  2436   000EE8                     l1833:
  2437                           
  2438                           ;newmain.c: 83:     return '\0';
  2439   000EE8  0E00               	movlw	0
  2440   000EEA                     l69:
  2441   000EEA  0012               	return		;funcret
  2442   000EEC                     __end_of_Keypad:
  2443                           	callstack 0
  2444                           
  2445 ;; *************** function _putsXLCD *****************
  2446 ;; Defined at:
  2447 ;;		line 510 in file "nxlcd.c"
  2448 ;; Parameters:    Size  Location     Type
  2449 ;;  buffer          2    1[COMRAM] PTR unsigned char 
  2450 ;;		 -> STR_12(4), STR_11(2), STR_10(4), STR_9(2), 
  2451 ;;		 -> STR_8(4), main@tempStr(16), main@phStr(16), main@umidadeStr(16), 
  2452 ;;		 -> STR_4(11), STR_3(7), STR_2(15), STR_1(11), 
  2453 ;; Auto vars:     Size  Location     Type
  2454 ;;		None
  2455 ;; Return value:  Size  Location     Type
  2456 ;;                  1    wreg      void 
  2457 ;; Registers used:
  2458 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2459 ;; Tracked objects:
  2460 ;;		On entry : 0/0
  2461 ;;		On exit  : 0/0
  2462 ;;		Unchanged: 0/0
  2463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2464 ;;      Params:         2       0       0       0       0       0       0       0       0
  2465 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2466 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2467 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2468 ;;Total ram usage:        2 bytes
  2469 ;; Hardware stack levels used: 1
  2470 ;; Hardware stack levels required when called: 2
  2471 ;; This function calls:
  2472 ;;		_BusyXLCD
  2473 ;;		_WriteDataXLCD
  2474 ;; This function is called by:
  2475 ;;		_limitante
  2476 ;;		_main
  2477 ;; This function uses a non-reentrant model
  2478 ;;
  2479                           
  2480                           	psect	text13
  2481   001288                     __ptext13:
  2482                           	callstack 0
  2483   001288                     _putsXLCD:
  2484                           	callstack 28
  2485   001288                     
  2486                           ;nxlcd.c: 510: void putsXLCD(char *buffer);nxlcd.c: 511: {;nxlcd.c: 512:         while(*
      +                          buffer)
  2487   001288  EF64  F009         	goto	l2001
  2488   00128C                     l1995:
  2489   00128C  EC7D  F009         	call	_BusyXLCD	;wreg free
  2490   001290  0900               	iorlw	0
  2491   001292  A4D8               	btfss	status,2,c
  2492   001294  EF4E  F009         	goto	u1211
  2493   001298  EF50  F009         	goto	u1210
  2494   00129C                     u1211:
  2495   00129C  EF46  F009         	goto	l1995
  2496   0012A0                     u1210:
  2497   0012A0                     
  2498                           ;nxlcd.c: 515:                 WriteDataXLCD(*buffer);
  2499   0012A0  C002  FFF6         	movff	putsXLCD@buffer,tblptrl
  2500   0012A4  C003  FFF7         	movff	putsXLCD@buffer+1,tblptrh
  2501   0012A8  6AF8               	clrf	tblptru,c
  2502   0012AA  0E07               	movlw	(high __ramtop+-1)
  2503   0012AC  64F7               	cpfsgt	tblptrh,c
  2504   0012AE  D003               	bra	u1227
  2505   0012B0  0008               	tblrd		*
  2506   0012B2  50F5               	movf	tablat,w,c
  2507   0012B4  D005               	bra	u1220
  2508   0012B6                     u1227:
  2509   0012B6  CFF6 FFE1          	movff	tblptrl,fsr1l
  2510   0012BA  CFF7 FFE2          	movff	tblptrh,fsr1h
  2511   0012BE  50E7               	movf	indf1,w,c
  2512   0012C0                     u1220:
  2513   0012C0  EC23  F00A         	call	_WriteDataXLCD
  2514   0012C4                     
  2515                           ;nxlcd.c: 516:                 buffer++;
  2516   0012C4  4A02               	infsnz	putsXLCD@buffer^0,f,c
  2517   0012C6  2A03               	incf	(putsXLCD@buffer+1)^0,f,c
  2518   0012C8                     l2001:
  2519                           
  2520                           ;nxlcd.c: 512:         while(*buffer)
  2521   0012C8  C002  FFF6         	movff	putsXLCD@buffer,tblptrl
  2522   0012CC  C003  FFF7         	movff	putsXLCD@buffer+1,tblptrh
  2523   0012D0  6AF8               	clrf	tblptru,c
  2524   0012D2  0E07               	movlw	(high __ramtop+-1)
  2525   0012D4  64F7               	cpfsgt	tblptrh,c
  2526   0012D6  D003               	bra	u1237
  2527   0012D8  0008               	tblrd		*
  2528   0012DA  50F5               	movf	tablat,w,c
  2529   0012DC  D005               	bra	u1230
  2530   0012DE                     u1237:
  2531   0012DE  CFF6 FFE1          	movff	tblptrl,fsr1l
  2532   0012E2  CFF7 FFE2          	movff	tblptrh,fsr1h
  2533   0012E6  50E7               	movf	indf1,w,c
  2534   0012E8                     u1230:
  2535   0012E8  0900               	iorlw	0
  2536   0012EA  A4D8               	btfss	status,2,c
  2537   0012EC  EF7A  F009         	goto	u1241
  2538   0012F0  EF7C  F009         	goto	u1240
  2539   0012F4                     u1241:
  2540   0012F4  EF46  F009         	goto	l1995
  2541   0012F8                     u1240:
  2542   0012F8  0012               	return		;funcret
  2543   0012FA                     __end_of_putsXLCD:
  2544                           	callstack 0
  2545                           
  2546 ;; *************** function _WriteDataXLCD *****************
  2547 ;; Defined at:
  2548 ;;		line 449 in file "nxlcd.c"
  2549 ;; Parameters:    Size  Location     Type
  2550 ;;  data            1    wreg     unsigned char 
  2551 ;; Auto vars:     Size  Location     Type
  2552 ;;  data            1    0[COMRAM] unsigned char 
  2553 ;; Return value:  Size  Location     Type
  2554 ;;                  1    wreg      void 
  2555 ;; Registers used:
  2556 ;;		wreg, status,2, status,0, cstack
  2557 ;; Tracked objects:
  2558 ;;		On entry : 0/0
  2559 ;;		On exit  : 0/0
  2560 ;;		Unchanged: 0/0
  2561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2562 ;;      Params:         0       0       0       0       0       0       0       0       0
  2563 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2564 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2565 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2566 ;;Total ram usage:        1 bytes
  2567 ;; Hardware stack levels used: 1
  2568 ;; Hardware stack levels required when called: 1
  2569 ;; This function calls:
  2570 ;;		_DelayFor18TCY
  2571 ;; This function is called by:
  2572 ;;		_putsXLCD
  2573 ;;		_putrsXLCD
  2574 ;; This function uses a non-reentrant model
  2575 ;;
  2576                           
  2577                           	psect	text14
  2578   001446                     __ptext14:
  2579                           	callstack 0
  2580   001446                     _WriteDataXLCD:
  2581                           	callstack 28
  2582                           
  2583                           ;incstack = 0
  2584                           ;WriteDataXLCD@data stored from wreg
  2585   001446  6E01               	movwf	WriteDataXLCD@data^0,c
  2586   001448                     
  2587                           ;nxlcd.c: 449: void WriteDataXLCD(char data);nxlcd.c: 450: {;nxlcd.c: 464:         TRISD
      +                           &= 0x0f;
  2588   001448  0E0F               	movlw	15
  2589   00144A  1695               	andwf	149,f,c	;volatile
  2590                           
  2591                           ;nxlcd.c: 465:         PORTD &= 0x0f;
  2592   00144C  0E0F               	movlw	15
  2593   00144E  1683               	andwf	131,f,c	;volatile
  2594                           
  2595                           ;nxlcd.c: 466:         PORTD |= data&0xf0;
  2596   001450  5001               	movf	WriteDataXLCD@data^0,w,c
  2597   001452  0BF0               	andlw	240
  2598   001454  1283               	iorwf	131,f,c	;volatile
  2599   001456                     
  2600                           ;nxlcd.c: 472:         LATEbits.LATE0 = 1;
  2601   001456  808D               	bsf	141,0,c	;volatile
  2602   001458                     
  2603                           ;nxlcd.c: 473:         LATEbits.LATE2 = 0;
  2604   001458  948D               	bcf	141,2,c	;volatile
  2605   00145A                     
  2606                           ;nxlcd.c: 474:         DelayFor18TCY();
  2607   00145A  ECF5  F00A         	call	_DelayFor18TCY	;wreg free
  2608   00145E                     
  2609                           ;nxlcd.c: 475:         LATEbits.LATE1 = 1;
  2610   00145E  828D               	bsf	141,1,c	;volatile
  2611   001460                     
  2612                           ;nxlcd.c: 476:         DelayFor18TCY();
  2613   001460  ECF5  F00A         	call	_DelayFor18TCY	;wreg free
  2614   001464                     
  2615                           ;nxlcd.c: 477:         LATEbits.LATE1 = 0;
  2616   001464  928D               	bcf	141,1,c	;volatile
  2617                           
  2618                           ;nxlcd.c: 479:         PORTD &= 0x0f;
  2619   001466  0E0F               	movlw	15
  2620   001468  1683               	andwf	131,f,c	;volatile
  2621                           
  2622                           ;nxlcd.c: 480:         PORTD |= ((data<<4)&0xf0);
  2623   00146A  3801               	swapf	WriteDataXLCD@data^0,w,c
  2624   00146C  0BF0               	andlw	240
  2625   00146E  0BF0               	andlw	240
  2626   001470  1283               	iorwf	131,f,c	;volatile
  2627   001472                     
  2628                           ;nxlcd.c: 485:         DelayFor18TCY();
  2629   001472  ECF5  F00A         	call	_DelayFor18TCY	;wreg free
  2630   001476                     
  2631                           ;nxlcd.c: 486:         LATEbits.LATE1 = 1;
  2632   001476  828D               	bsf	141,1,c	;volatile
  2633   001478                     
  2634                           ;nxlcd.c: 487:         DelayFor18TCY();
  2635   001478  ECF5  F00A         	call	_DelayFor18TCY	;wreg free
  2636   00147C                     
  2637                           ;nxlcd.c: 488:         LATEbits.LATE1 = 0;
  2638   00147C  928D               	bcf	141,1,c	;volatile
  2639                           
  2640                           ;nxlcd.c: 490:         TRISD |= 0xf0;
  2641   00147E  0EF0               	movlw	240
  2642   001480  1295               	iorwf	149,f,c	;volatile
  2643   001482  0012               	return		;funcret
  2644   001484                     __end_of_WriteDataXLCD:
  2645                           	callstack 0
  2646                           
  2647 ;; *************** function _controleTc *****************
  2648 ;; Defined at:
  2649 ;;		line 48 in file "newmain.c"
  2650 ;; Parameters:    Size  Location     Type
  2651 ;;  Tc              2    0[COMRAM] int 
  2652 ;; Auto vars:     Size  Location     Type
  2653 ;;		None
  2654 ;; Return value:  Size  Location     Type
  2655 ;;                  1    wreg      void 
  2656 ;; Registers used:
  2657 ;;		wreg, status,2, status,0
  2658 ;; Tracked objects:
  2659 ;;		On entry : 0/0
  2660 ;;		On exit  : 0/0
  2661 ;;		Unchanged: 0/0
  2662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2663 ;;      Params:         2       0       0       0       0       0       0       0       0
  2664 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2665 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2666 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2667 ;;Total ram usage:        3 bytes
  2668 ;; Hardware stack levels used: 1
  2669 ;; This function calls:
  2670 ;;		Nothing
  2671 ;; This function is called by:
  2672 ;;		_main
  2673 ;; This function uses a non-reentrant model
  2674 ;;
  2675                           
  2676                           	psect	text15
  2677   00152A                     __ptext15:
  2678                           	callstack 0
  2679   00152A                     _controleTc:
  2680                           	callstack 30
  2681   00152A                     
  2682                           ;newmain.c: 49:     if (Tc > limite_Tc) {
  2683   00152A  5001               	movf	controleTc@Tc^0,w,c
  2684   00152C  5C58               	subwf	_limite_Tc^0,w,c
  2685   00152E  5059               	movf	(_limite_Tc+1)^0,w,c
  2686   001530  0A80               	xorlw	128
  2687   001532  6E03               	movwf	??_controleTc^0,c
  2688   001534  5002               	movf	(controleTc@Tc+1)^0,w,c
  2689   001536  0A80               	xorlw	128
  2690   001538  5803               	subwfb	??_controleTc^0,w,c
  2691   00153A  B0D8               	btfsc	status,0,c
  2692   00153C  EFA2  F00A         	goto	u1291
  2693   001540  EFA4  F00A         	goto	u1290
  2694   001544                     u1291:
  2695   001544  EFA7  F00A         	goto	l63
  2696   001548                     u1290:
  2697   001548                     
  2698                           ;newmain.c: 50:         PORTCbits.RC2 = 1;
  2699   001548  8482               	bsf	130,2,c	;volatile
  2700                           
  2701                           ;newmain.c: 51:     } else {
  2702   00154A  EFA8  F00A         	goto	l65
  2703   00154E                     l63:
  2704                           
  2705                           ;newmain.c: 52:         PORTCbits.RC2 = 0;
  2706   00154E  9482               	bcf	130,2,c	;volatile
  2707   001550                     l65:
  2708   001550  0012               	return		;funcret
  2709   001552                     __end_of_controleTc:
  2710                           	callstack 0
  2711                           
  2712 ;; *************** function _controlePh *****************
  2713 ;; Defined at:
  2714 ;;		line 40 in file "newmain.c"
  2715 ;; Parameters:    Size  Location     Type
  2716 ;;  Ph              2    0[COMRAM] int 
  2717 ;; Auto vars:     Size  Location     Type
  2718 ;;		None
  2719 ;; Return value:  Size  Location     Type
  2720 ;;                  1    wreg      void 
  2721 ;; Registers used:
  2722 ;;		wreg, status,2, status,0
  2723 ;; Tracked objects:
  2724 ;;		On entry : 0/0
  2725 ;;		On exit  : 0/0
  2726 ;;		Unchanged: 0/0
  2727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2728 ;;      Params:         2       0       0       0       0       0       0       0       0
  2729 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2730 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2731 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2732 ;;Total ram usage:        3 bytes
  2733 ;; Hardware stack levels used: 1
  2734 ;; This function calls:
  2735 ;;		Nothing
  2736 ;; This function is called by:
  2737 ;;		_main
  2738 ;; This function uses a non-reentrant model
  2739 ;;
  2740                           
  2741                           	psect	text16
  2742   001552                     __ptext16:
  2743                           	callstack 0
  2744   001552                     _controlePh:
  2745                           	callstack 30
  2746   001552                     
  2747                           ;newmain.c: 41:     if (Ph > limite_Ph) {
  2748   001552  5001               	movf	controlePh@Ph^0,w,c
  2749   001554  5C56               	subwf	_limite_Ph^0,w,c
  2750   001556  5057               	movf	(_limite_Ph+1)^0,w,c
  2751   001558  0A80               	xorlw	128
  2752   00155A  6E03               	movwf	??_controlePh^0,c
  2753   00155C  5002               	movf	(controlePh@Ph+1)^0,w,c
  2754   00155E  0A80               	xorlw	128
  2755   001560  5803               	subwfb	??_controlePh^0,w,c
  2756   001562  B0D8               	btfsc	status,0,c
  2757   001564  EFB6  F00A         	goto	u1281
  2758   001568  EFB8  F00A         	goto	u1280
  2759   00156C                     u1281:
  2760   00156C  EFBB  F00A         	goto	l58
  2761   001570                     u1280:
  2762   001570                     
  2763                           ;newmain.c: 42:         PORTCbits.RC1 = 1;
  2764   001570  8282               	bsf	130,1,c	;volatile
  2765                           
  2766                           ;newmain.c: 43:     } else {
  2767   001572  EFBC  F00A         	goto	l60
  2768   001576                     l58:
  2769                           
  2770                           ;newmain.c: 44:         PORTCbits.RC1 = 0;
  2771   001576  9282               	bcf	130,1,c	;volatile
  2772   001578                     l60:
  2773   001578  0012               	return		;funcret
  2774   00157A                     __end_of_controlePh:
  2775                           	callstack 0
  2776                           
  2777 ;; *************** function _controleAgua *****************
  2778 ;; Defined at:
  2779 ;;		line 32 in file "newmain.c"
  2780 ;; Parameters:    Size  Location     Type
  2781 ;;  UR              2    0[COMRAM] int 
  2782 ;; Auto vars:     Size  Location     Type
  2783 ;;		None
  2784 ;; Return value:  Size  Location     Type
  2785 ;;                  1    wreg      void 
  2786 ;; Registers used:
  2787 ;;		wreg, status,2, status,0
  2788 ;; Tracked objects:
  2789 ;;		On entry : 0/0
  2790 ;;		On exit  : 0/0
  2791 ;;		Unchanged: 0/0
  2792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2793 ;;      Params:         2       0       0       0       0       0       0       0       0
  2794 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2795 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2796 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2797 ;;Total ram usage:        3 bytes
  2798 ;; Hardware stack levels used: 1
  2799 ;; This function calls:
  2800 ;;		Nothing
  2801 ;; This function is called by:
  2802 ;;		_main
  2803 ;; This function uses a non-reentrant model
  2804 ;;
  2805                           
  2806                           	psect	text17
  2807   00157A                     __ptext17:
  2808                           	callstack 0
  2809   00157A                     _controleAgua:
  2810                           	callstack 30
  2811   00157A                     
  2812                           ;newmain.c: 33:     if (UR < limite_UR){
  2813   00157A  505A               	movf	_limite_UR^0,w,c
  2814   00157C  5C01               	subwf	controleAgua@UR^0,w,c
  2815   00157E  5002               	movf	(controleAgua@UR+1)^0,w,c
  2816   001580  0A80               	xorlw	128
  2817   001582  6E03               	movwf	??_controleAgua^0,c
  2818   001584  505B               	movf	(_limite_UR+1)^0,w,c
  2819   001586  0A80               	xorlw	128
  2820   001588  5803               	subwfb	??_controleAgua^0,w,c
  2821   00158A  B0D8               	btfsc	status,0,c
  2822   00158C  EFCA  F00A         	goto	u1271
  2823   001590  EFCC  F00A         	goto	u1270
  2824   001594                     u1271:
  2825   001594  EFCF  F00A         	goto	l53
  2826   001598                     u1270:
  2827   001598                     
  2828                           ;newmain.c: 34:         PORTCbits.RC0 = 1;
  2829   001598  8082               	bsf	130,0,c	;volatile
  2830                           
  2831                           ;newmain.c: 35:     } else {
  2832   00159A  EFD0  F00A         	goto	l55
  2833   00159E                     l53:
  2834                           
  2835                           ;newmain.c: 36:         PORTCbits.RC0 = 0;
  2836   00159E  9082               	bcf	130,0,c	;volatile
  2837   0015A0                     l55:
  2838   0015A0  0012               	return		;funcret
  2839   0015A2                     __end_of_controleAgua:
  2840                           	callstack 0
  2841                           
  2842 ;; *************** function _OpenXLCD *****************
  2843 ;; Defined at:
  2844 ;;		line 41 in file "nxlcd.c"
  2845 ;; Parameters:    Size  Location     Type
  2846 ;;  lcdtype         1    wreg     unsigned char 
  2847 ;; Auto vars:     Size  Location     Type
  2848 ;;  lcdtype         1    1[COMRAM] unsigned char 
  2849 ;; Return value:  Size  Location     Type
  2850 ;;                  1    wreg      void 
  2851 ;; Registers used:
  2852 ;;		wreg, status,2, status,0, cstack
  2853 ;; Tracked objects:
  2854 ;;		On entry : 0/0
  2855 ;;		On exit  : 0/0
  2856 ;;		Unchanged: 0/0
  2857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2858 ;;      Params:         0       0       0       0       0       0       0       0       0
  2859 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2860 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2861 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2862 ;;Total ram usage:        1 bytes
  2863 ;; Hardware stack levels used: 1
  2864 ;; Hardware stack levels required when called: 2
  2865 ;; This function calls:
  2866 ;;		_BusyXLCD
  2867 ;;		_DelayPORXLCD
  2868 ;;		_DelayXLCD
  2869 ;;		_SetDDRamAddr
  2870 ;;		_WriteCmdXLCD
  2871 ;; This function is called by:
  2872 ;;		_main
  2873 ;; This function uses a non-reentrant model
  2874 ;;
  2875                           
  2876                           	psect	text18
  2877   000EEC                     __ptext18:
  2878                           	callstack 0
  2879   000EEC                     _OpenXLCD:
  2880                           	callstack 28
  2881                           
  2882                           ;incstack = 0
  2883                           ;OpenXLCD@lcdtype stored from wreg
  2884   000EEC  6E02               	movwf	OpenXLCD@lcdtype^0,c
  2885   000EEE                     
  2886                           ;nxlcd.c: 41: void OpenXLCD(unsigned char lcdtype);nxlcd.c: 42: {;nxlcd.c: 50:         P
      +                          ORTD &= 0x0f;
  2887   000EEE  0E0F               	movlw	15
  2888   000EF0  1683               	andwf	131,f,c	;volatile
  2889                           
  2890                           ;nxlcd.c: 51:         TRISD &= 0x0F;
  2891   000EF2  0E0F               	movlw	15
  2892   000EF4  1695               	andwf	149,f,c	;volatile
  2893   000EF6                     
  2894                           ;nxlcd.c: 57:         TRISEbits.TRISE2 = 0;
  2895   000EF6  9496               	bcf	150,2,c	;volatile
  2896   000EF8                     
  2897                           ;nxlcd.c: 58:         TRISEbits.TRISE0 = 0;
  2898   000EF8  9096               	bcf	150,0,c	;volatile
  2899   000EFA                     
  2900                           ;nxlcd.c: 59:         TRISEbits.TRISE1 = 0;
  2901   000EFA  9296               	bcf	150,1,c	;volatile
  2902   000EFC                     
  2903                           ;nxlcd.c: 60:         LATEbits.LATE2 = 0;
  2904   000EFC  948D               	bcf	141,2,c	;volatile
  2905   000EFE                     
  2906                           ;nxlcd.c: 61:         LATEbits.LATE0 = 0;
  2907   000EFE  908D               	bcf	141,0,c	;volatile
  2908   000F00                     
  2909                           ;nxlcd.c: 62:         LATEbits.LATE1 = 0;
  2910   000F00  928D               	bcf	141,1,c	;volatile
  2911   000F02                     
  2912                           ;nxlcd.c: 65:         DelayPORXLCD();
  2913   000F02  ECED  F00A         	call	_DelayPORXLCD	;wreg free
  2914   000F06                     
  2915                           ;nxlcd.c: 67:    WriteCmdXLCD(0x30);
  2916   000F06  0E30               	movlw	48
  2917   000F08  EC42  F00A         	call	_WriteCmdXLCD
  2918   000F0C                     
  2919                           ;nxlcd.c: 68:    DelayXLCD();
  2920   000F0C  ECE4  F00A         	call	_DelayXLCD	;wreg free
  2921   000F10                     
  2922                           ;nxlcd.c: 69:    DelayXLCD();
  2923   000F10  ECE4  F00A         	call	_DelayXLCD	;wreg free
  2924   000F14                     
  2925                           ;nxlcd.c: 70:    WriteCmdXLCD(0x30);
  2926   000F14  0E30               	movlw	48
  2927   000F16  EC42  F00A         	call	_WriteCmdXLCD
  2928   000F1A                     
  2929                           ;nxlcd.c: 71:    DelayXLCD();
  2930   000F1A  ECE4  F00A         	call	_DelayXLCD	;wreg free
  2931   000F1E                     
  2932                           ;nxlcd.c: 72:    DelayXLCD();
  2933   000F1E  ECE4  F00A         	call	_DelayXLCD	;wreg free
  2934   000F22                     
  2935                           ;nxlcd.c: 73:    WriteCmdXLCD(0x32);
  2936   000F22  0E32               	movlw	50
  2937   000F24  EC42  F00A         	call	_WriteCmdXLCD
  2938   000F28                     l2141:
  2939   000F28  EC7D  F009         	call	_BusyXLCD	;wreg free
  2940   000F2C  0900               	iorlw	0
  2941   000F2E  A4D8               	btfss	status,2,c
  2942   000F30  EF9C  F007         	goto	u1371
  2943   000F34  EF9E  F007         	goto	u1370
  2944   000F38                     u1371:
  2945   000F38  EF94  F007         	goto	l2141
  2946   000F3C                     u1370:
  2947   000F3C                     l2143:
  2948   000F3C  EC7D  F009         	call	_BusyXLCD	;wreg free
  2949   000F40  0900               	iorlw	0
  2950   000F42  A4D8               	btfss	status,2,c
  2951   000F44  EFA6  F007         	goto	u1381
  2952   000F48  EFA8  F007         	goto	u1380
  2953   000F4C                     u1381:
  2954   000F4C  EF9E  F007         	goto	l2143
  2955   000F50                     u1380:
  2956   000F50                     
  2957                           ;nxlcd.c: 80:         WriteCmdXLCD(lcdtype);
  2958   000F50  5002               	movf	OpenXLCD@lcdtype^0,w,c
  2959   000F52  EC42  F00A         	call	_WriteCmdXLCD
  2960   000F56                     l2147:
  2961   000F56  EC7D  F009         	call	_BusyXLCD	;wreg free
  2962   000F5A  0900               	iorlw	0
  2963   000F5C  A4D8               	btfss	status,2,c
  2964   000F5E  EFB3  F007         	goto	u1391
  2965   000F62  EFB5  F007         	goto	u1390
  2966   000F66                     u1391:
  2967   000F66  EFAB  F007         	goto	l2147
  2968   000F6A                     u1390:
  2969   000F6A                     
  2970                           ;nxlcd.c: 84:         WriteCmdXLCD(0b00001011&0b00001101&0b00001110);
  2971   000F6A  0E08               	movlw	8
  2972   000F6C  EC42  F00A         	call	_WriteCmdXLCD
  2973   000F70                     l2151:
  2974   000F70  EC7D  F009         	call	_BusyXLCD	;wreg free
  2975   000F74  0900               	iorlw	0
  2976   000F76  A4D8               	btfss	status,2,c
  2977   000F78  EFC0  F007         	goto	u1401
  2978   000F7C  EFC2  F007         	goto	u1400
  2979   000F80                     u1401:
  2980   000F80  EFB8  F007         	goto	l2151
  2981   000F84                     u1400:
  2982   000F84                     
  2983                           ;nxlcd.c: 86:         WriteCmdXLCD(0b00001111&0b00001111&0b00001111);
  2984   000F84  0E0F               	movlw	15
  2985   000F86  EC42  F00A         	call	_WriteCmdXLCD
  2986   000F8A                     l2155:
  2987   000F8A  EC7D  F009         	call	_BusyXLCD	;wreg free
  2988   000F8E  0900               	iorlw	0
  2989   000F90  A4D8               	btfss	status,2,c
  2990   000F92  EFCD  F007         	goto	u1411
  2991   000F96  EFCF  F007         	goto	u1410
  2992   000F9A                     u1411:
  2993   000F9A  EFC5  F007         	goto	l2155
  2994   000F9E                     u1410:
  2995   000F9E                     
  2996                           ;nxlcd.c: 90:         WriteCmdXLCD(0x01);
  2997   000F9E  0E01               	movlw	1
  2998   000FA0  EC42  F00A         	call	_WriteCmdXLCD
  2999   000FA4                     l2159:
  3000   000FA4  EC7D  F009         	call	_BusyXLCD	;wreg free
  3001   000FA8  0900               	iorlw	0
  3002   000FAA  A4D8               	btfss	status,2,c
  3003   000FAC  EFDA  F007         	goto	u1421
  3004   000FB0  EFDC  F007         	goto	u1420
  3005   000FB4                     u1421:
  3006   000FB4  EFD2  F007         	goto	l2159
  3007   000FB8                     u1420:
  3008   000FB8                     
  3009                           ;nxlcd.c: 94:         WriteCmdXLCD(0b00000100);
  3010   000FB8  0E04               	movlw	4
  3011   000FBA  EC42  F00A         	call	_WriteCmdXLCD
  3012   000FBE                     l2163:
  3013   000FBE  EC7D  F009         	call	_BusyXLCD	;wreg free
  3014   000FC2  0900               	iorlw	0
  3015   000FC4  A4D8               	btfss	status,2,c
  3016   000FC6  EFE7  F007         	goto	u1431
  3017   000FCA  EFE9  F007         	goto	u1430
  3018   000FCE                     u1431:
  3019   000FCE  EFDF  F007         	goto	l2163
  3020   000FD2                     u1430:
  3021   000FD2                     
  3022                           ;nxlcd.c: 98:         SetDDRamAddr(0x80);
  3023   000FD2  0E80               	movlw	128
  3024   000FD4  ECE4  F009         	call	_SetDDRamAddr
  3025   000FD8  0012               	return		;funcret
  3026   000FDA                     __end_of_OpenXLCD:
  3027                           	callstack 0
  3028                           
  3029 ;; *************** function _WriteCmdXLCD *****************
  3030 ;; Defined at:
  3031 ;;		line 388 in file "nxlcd.c"
  3032 ;; Parameters:    Size  Location     Type
  3033 ;;  cmd             1    wreg     unsigned char 
  3034 ;; Auto vars:     Size  Location     Type
  3035 ;;  cmd             1    0[COMRAM] unsigned char 
  3036 ;; Return value:  Size  Location     Type
  3037 ;;                  1    wreg      void 
  3038 ;; Registers used:
  3039 ;;		wreg, status,2, status,0, cstack
  3040 ;; Tracked objects:
  3041 ;;		On entry : 0/0
  3042 ;;		On exit  : 0/0
  3043 ;;		Unchanged: 0/0
  3044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3045 ;;      Params:         0       0       0       0       0       0       0       0       0
  3046 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3047 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3048 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3049 ;;Total ram usage:        1 bytes
  3050 ;; Hardware stack levels used: 1
  3051 ;; Hardware stack levels required when called: 1
  3052 ;; This function calls:
  3053 ;;		_DelayFor18TCY
  3054 ;; This function is called by:
  3055 ;;		_limitante
  3056 ;;		_main
  3057 ;;		_OpenXLCD
  3058 ;; This function uses a non-reentrant model
  3059 ;;
  3060                           
  3061                           	psect	text19
  3062   001484                     __ptext19:
  3063                           	callstack 0
  3064   001484                     _WriteCmdXLCD:
  3065                           	callstack 28
  3066                           
  3067                           ;incstack = 0
  3068                           ;WriteCmdXLCD@cmd stored from wreg
  3069   001484  6E01               	movwf	WriteCmdXLCD@cmd^0,c
  3070   001486                     
  3071                           ;nxlcd.c: 388: void WriteCmdXLCD(unsigned char cmd);nxlcd.c: 389: {;nxlcd.c: 403:       
      +                            TRISD &= 0x0f;
  3072   001486  0E0F               	movlw	15
  3073   001488  1695               	andwf	149,f,c	;volatile
  3074                           
  3075                           ;nxlcd.c: 404:         PORTD &= 0x0f;
  3076   00148A  0E0F               	movlw	15
  3077   00148C  1683               	andwf	131,f,c	;volatile
  3078                           
  3079                           ;nxlcd.c: 405:         PORTD |= cmd&0xf0;
  3080   00148E  5001               	movf	WriteCmdXLCD@cmd^0,w,c
  3081   001490  0BF0               	andlw	240
  3082   001492  1283               	iorwf	131,f,c	;volatile
  3083   001494                     
  3084                           ;nxlcd.c: 411:         LATEbits.LATE2 = 0;
  3085   001494  948D               	bcf	141,2,c	;volatile
  3086   001496                     
  3087                           ;nxlcd.c: 412:         LATEbits.LATE0 = 0;
  3088   001496  908D               	bcf	141,0,c	;volatile
  3089   001498                     
  3090                           ;nxlcd.c: 413:         DelayFor18TCY();
  3091   001498  ECF5  F00A         	call	_DelayFor18TCY	;wreg free
  3092   00149C                     
  3093                           ;nxlcd.c: 414:         LATEbits.LATE1 = 1;
  3094   00149C  828D               	bsf	141,1,c	;volatile
  3095   00149E                     
  3096                           ;nxlcd.c: 415:         DelayFor18TCY();
  3097   00149E  ECF5  F00A         	call	_DelayFor18TCY	;wreg free
  3098   0014A2                     
  3099                           ;nxlcd.c: 416:         LATEbits.LATE1 = 0;
  3100   0014A2  928D               	bcf	141,1,c	;volatile
  3101                           
  3102                           ;nxlcd.c: 418:         PORTD &= 0x0f;
  3103   0014A4  0E0F               	movlw	15
  3104   0014A6  1683               	andwf	131,f,c	;volatile
  3105                           
  3106                           ;nxlcd.c: 419:         PORTD |= (cmd<<4)&0xf0;
  3107   0014A8  3801               	swapf	WriteCmdXLCD@cmd^0,w,c
  3108   0014AA  0BF0               	andlw	240
  3109   0014AC  0BF0               	andlw	240
  3110   0014AE  1283               	iorwf	131,f,c	;volatile
  3111   0014B0                     
  3112                           ;nxlcd.c: 424:         DelayFor18TCY();
  3113   0014B0  ECF5  F00A         	call	_DelayFor18TCY	;wreg free
  3114   0014B4                     
  3115                           ;nxlcd.c: 425:         LATEbits.LATE1 = 1;
  3116   0014B4  828D               	bsf	141,1,c	;volatile
  3117   0014B6                     
  3118                           ;nxlcd.c: 426:         DelayFor18TCY();
  3119   0014B6  ECF5  F00A         	call	_DelayFor18TCY	;wreg free
  3120   0014BA                     
  3121                           ;nxlcd.c: 427:         LATEbits.LATE1 = 0;
  3122   0014BA  928D               	bcf	141,1,c	;volatile
  3123                           
  3124                           ;nxlcd.c: 429:         TRISD |= 0xf0;
  3125   0014BC  0EF0               	movlw	240
  3126   0014BE  1295               	iorwf	149,f,c	;volatile
  3127   0014C0  0012               	return		;funcret
  3128   0014C2                     __end_of_WriteCmdXLCD:
  3129                           	callstack 0
  3130                           
  3131 ;; *************** function _SetDDRamAddr *****************
  3132 ;; Defined at:
  3133 ;;		line 171 in file "nxlcd.c"
  3134 ;; Parameters:    Size  Location     Type
  3135 ;;  DDaddr          1    wreg     unsigned char 
  3136 ;; Auto vars:     Size  Location     Type
  3137 ;;  DDaddr          1    0[COMRAM] unsigned char 
  3138 ;; Return value:  Size  Location     Type
  3139 ;;                  1    wreg      void 
  3140 ;; Registers used:
  3141 ;;		wreg, status,2, status,0, cstack
  3142 ;; Tracked objects:
  3143 ;;		On entry : 0/0
  3144 ;;		On exit  : 0/0
  3145 ;;		Unchanged: 0/0
  3146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3147 ;;      Params:         0       0       0       0       0       0       0       0       0
  3148 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3149 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3150 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3151 ;;Total ram usage:        1 bytes
  3152 ;; Hardware stack levels used: 1
  3153 ;; Hardware stack levels required when called: 1
  3154 ;; This function calls:
  3155 ;;		_DelayFor18TCY
  3156 ;; This function is called by:
  3157 ;;		_OpenXLCD
  3158 ;; This function uses a non-reentrant model
  3159 ;;
  3160                           
  3161                           	psect	text20
  3162   0013C8                     __ptext20:
  3163                           	callstack 0
  3164   0013C8                     _SetDDRamAddr:
  3165                           	callstack 28
  3166                           
  3167                           ;incstack = 0
  3168                           ;SetDDRamAddr@DDaddr stored from wreg
  3169   0013C8  6E01               	movwf	SetDDRamAddr@DDaddr^0,c
  3170   0013CA                     
  3171                           ;nxlcd.c: 171: void SetDDRamAddr(unsigned char DDaddr);nxlcd.c: 172: {;nxlcd.c: 186:    
      +                               TRISD &= 0x0f;
  3172   0013CA  0E0F               	movlw	15
  3173   0013CC  1695               	andwf	149,f,c	;volatile
  3174                           
  3175                           ;nxlcd.c: 187:         PORTD &= 0x0f;
  3176   0013CE  0E0F               	movlw	15
  3177   0013D0  1683               	andwf	131,f,c	;volatile
  3178                           
  3179                           ;nxlcd.c: 188:         PORTD |= ((DDaddr | 0b10000000) & 0xf0);
  3180   0013D2  5001               	movf	SetDDRamAddr@DDaddr^0,w,c
  3181   0013D4  0980               	iorlw	128
  3182   0013D6  0BF0               	andlw	240
  3183   0013D8  1283               	iorwf	131,f,c	;volatile
  3184   0013DA                     
  3185                           ;nxlcd.c: 194:         LATEbits.LATE2 = 0;
  3186   0013DA  948D               	bcf	141,2,c	;volatile
  3187   0013DC                     
  3188                           ;nxlcd.c: 195:         LATEbits.LATE0 = 0;
  3189   0013DC  908D               	bcf	141,0,c	;volatile
  3190   0013DE                     
  3191                           ;nxlcd.c: 196:         DelayFor18TCY();
  3192   0013DE  ECF5  F00A         	call	_DelayFor18TCY	;wreg free
  3193   0013E2                     
  3194                           ;nxlcd.c: 197:         LATEbits.LATE1 = 1;
  3195   0013E2  828D               	bsf	141,1,c	;volatile
  3196   0013E4                     
  3197                           ;nxlcd.c: 198:         DelayFor18TCY();
  3198   0013E4  ECF5  F00A         	call	_DelayFor18TCY	;wreg free
  3199   0013E8                     
  3200                           ;nxlcd.c: 199:         LATEbits.LATE1 = 0;
  3201   0013E8  928D               	bcf	141,1,c	;volatile
  3202                           
  3203                           ;nxlcd.c: 201:         PORTD &= 0x0f;
  3204   0013EA  0E0F               	movlw	15
  3205   0013EC  1683               	andwf	131,f,c	;volatile
  3206                           
  3207                           ;nxlcd.c: 202:         PORTD |= ((DDaddr<<4)&0xf0);
  3208   0013EE  3801               	swapf	SetDDRamAddr@DDaddr^0,w,c
  3209   0013F0  0BF0               	andlw	240
  3210   0013F2  0BF0               	andlw	240
  3211   0013F4  1283               	iorwf	131,f,c	;volatile
  3212   0013F6                     
  3213                           ;nxlcd.c: 207:         DelayFor18TCY();
  3214   0013F6  ECF5  F00A         	call	_DelayFor18TCY	;wreg free
  3215   0013FA                     
  3216                           ;nxlcd.c: 208:         LATEbits.LATE1 = 1;
  3217   0013FA  828D               	bsf	141,1,c	;volatile
  3218   0013FC                     
  3219                           ;nxlcd.c: 209:         DelayFor18TCY();
  3220   0013FC  ECF5  F00A         	call	_DelayFor18TCY	;wreg free
  3221   001400                     
  3222                           ;nxlcd.c: 210:         LATEbits.LATE1 = 0;
  3223   001400  928D               	bcf	141,1,c	;volatile
  3224                           
  3225                           ;nxlcd.c: 212:         TRISD |= 0xf0;
  3226   001402  0EF0               	movlw	240
  3227   001404  1295               	iorwf	149,f,c	;volatile
  3228   001406  0012               	return		;funcret
  3229   001408                     __end_of_SetDDRamAddr:
  3230                           	callstack 0
  3231                           
  3232 ;; *************** function _DelayXLCD *****************
  3233 ;; Defined at:
  3234 ;;		line 22 in file "nxlcd.c"
  3235 ;; Parameters:    Size  Location     Type
  3236 ;;		None
  3237 ;; Auto vars:     Size  Location     Type
  3238 ;;		None
  3239 ;; Return value:  Size  Location     Type
  3240 ;;                  1    wreg      void 
  3241 ;; Registers used:
  3242 ;;		wreg
  3243 ;; Tracked objects:
  3244 ;;		On entry : 0/0
  3245 ;;		On exit  : 0/0
  3246 ;;		Unchanged: 0/0
  3247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3248 ;;      Params:         0       0       0       0       0       0       0       0       0
  3249 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3250 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3251 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3252 ;;Total ram usage:        1 bytes
  3253 ;; Hardware stack levels used: 1
  3254 ;; This function calls:
  3255 ;;		Nothing
  3256 ;; This function is called by:
  3257 ;;		_OpenXLCD
  3258 ;; This function uses a non-reentrant model
  3259 ;;
  3260                           
  3261                           	psect	text21
  3262   0015C8                     __ptext21:
  3263                           	callstack 0
  3264   0015C8                     _DelayXLCD:
  3265                           	callstack 29
  3266   0015C8                     
  3267                           ;nxlcd.c: 24:     _delay((unsigned long)((5)*(20000000/4000.0)));
  3268   0015C8  0E21               	movlw	33
  3269   0015CA  6E01               	movwf	??_DelayXLCD^0,c
  3270   0015CC  0E76               	movlw	118
  3271   0015CE                     u1547:
  3272   0015CE  2EE8               	decfsz	wreg,f,c
  3273   0015D0  D7FE               	bra	u1547
  3274   0015D2  2E01               	decfsz	??_DelayXLCD^0,f,c
  3275   0015D4  D7FC               	bra	u1547
  3276   0015D6  D000               	nop2	
  3277   0015D8  0012               	return		;funcret
  3278   0015DA                     __end_of_DelayXLCD:
  3279                           	callstack 0
  3280                           
  3281 ;; *************** function _DelayPORXLCD *****************
  3282 ;; Defined at:
  3283 ;;		line 17 in file "nxlcd.c"
  3284 ;; Parameters:    Size  Location     Type
  3285 ;;		None
  3286 ;; Auto vars:     Size  Location     Type
  3287 ;;		None
  3288 ;; Return value:  Size  Location     Type
  3289 ;;                  1    wreg      void 
  3290 ;; Registers used:
  3291 ;;		wreg
  3292 ;; Tracked objects:
  3293 ;;		On entry : 0/0
  3294 ;;		On exit  : 0/0
  3295 ;;		Unchanged: 0/0
  3296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3297 ;;      Params:         0       0       0       0       0       0       0       0       0
  3298 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3299 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3300 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3301 ;;Total ram usage:        1 bytes
  3302 ;; Hardware stack levels used: 1
  3303 ;; This function calls:
  3304 ;;		Nothing
  3305 ;; This function is called by:
  3306 ;;		_OpenXLCD
  3307 ;; This function uses a non-reentrant model
  3308 ;;
  3309                           
  3310                           	psect	text22
  3311   0015DA                     __ptext22:
  3312                           	callstack 0
  3313   0015DA                     _DelayPORXLCD:
  3314                           	callstack 29
  3315   0015DA                     
  3316                           ;nxlcd.c: 19:     _delay((unsigned long)((15)*(20000000/4000.0)));
  3317   0015DA  0E62               	movlw	98
  3318   0015DC  6E01               	movwf	??_DelayPORXLCD^0,c
  3319   0015DE  0E66               	movlw	102
  3320   0015E0                     u1557:
  3321   0015E0  2EE8               	decfsz	wreg,f,c
  3322   0015E2  D7FE               	bra	u1557
  3323   0015E4  2E01               	decfsz	??_DelayPORXLCD^0,f,c
  3324   0015E6  D7FC               	bra	u1557
  3325   0015E8  0012               	return		;funcret
  3326   0015EA                     __end_of_DelayPORXLCD:
  3327                           	callstack 0
  3328                           
  3329 ;; *************** function _BusyXLCD *****************
  3330 ;; Defined at:
  3331 ;;		line 227 in file "nxlcd.c"
  3332 ;; Parameters:    Size  Location     Type
  3333 ;;		None
  3334 ;; Auto vars:     Size  Location     Type
  3335 ;;		None
  3336 ;; Return value:  Size  Location     Type
  3337 ;;                  1    wreg      unsigned char 
  3338 ;; Registers used:
  3339 ;;		wreg, cstack
  3340 ;; Tracked objects:
  3341 ;;		On entry : 0/0
  3342 ;;		On exit  : 0/0
  3343 ;;		Unchanged: 0/0
  3344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3345 ;;      Params:         0       0       0       0       0       0       0       0       0
  3346 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3347 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3348 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3349 ;;Total ram usage:        0 bytes
  3350 ;; Hardware stack levels used: 1
  3351 ;; Hardware stack levels required when called: 1
  3352 ;; This function calls:
  3353 ;;		_DelayFor18TCY
  3354 ;; This function is called by:
  3355 ;;		_OpenXLCD
  3356 ;;		_putsXLCD
  3357 ;;		_putrsXLCD
  3358 ;; This function uses a non-reentrant model
  3359 ;;
  3360                           
  3361                           	psect	text23
  3362   0012FA                     __ptext23:
  3363                           	callstack 0
  3364   0012FA                     _BusyXLCD:
  3365                           	callstack 28
  3366   0012FA                     
  3367                           ;nxlcd.c: 229:         LATEbits.LATE2 = 1;
  3368   0012FA  848D               	bsf	141,2,c	;volatile
  3369                           
  3370                           ;nxlcd.c: 230:         LATEbits.LATE0 = 0;
  3371   0012FC  908D               	bcf	141,0,c	;volatile
  3372   0012FE                     
  3373                           ;nxlcd.c: 231:         DelayFor18TCY();
  3374   0012FE  ECF5  F00A         	call	_DelayFor18TCY	;wreg free
  3375   001302                     
  3376                           ;nxlcd.c: 232:         LATEbits.LATE1 = 1;
  3377   001302  828D               	bsf	141,1,c	;volatile
  3378                           
  3379                           ;nxlcd.c: 233:         DelayFor18TCY();
  3380   001304  ECF5  F00A         	call	_DelayFor18TCY	;wreg free
  3381   001308                     
  3382                           ;nxlcd.c: 249:         if(PORTD&0x80)
  3383   001308  AE83               	btfss	131,7,c	;volatile
  3384   00130A  EF89  F009         	goto	u1071
  3385   00130E  EF8B  F009         	goto	u1070
  3386   001312                     u1071:
  3387   001312  EF96  F009         	goto	l172
  3388   001316                     u1070:
  3389   001316                     
  3390                           ;nxlcd.c: 253:         {;nxlcd.c: 254:                 LATEbits.LATE1 = 0;
  3391   001316  928D               	bcf	141,1,c	;volatile
  3392   001318                     
  3393                           ;nxlcd.c: 255:                 DelayFor18TCY();
  3394   001318  ECF5  F00A         	call	_DelayFor18TCY	;wreg free
  3395   00131C                     
  3396                           ;nxlcd.c: 256:                 LATEbits.LATE1 = 1;
  3397   00131C  828D               	bsf	141,1,c	;volatile
  3398                           
  3399                           ;nxlcd.c: 257:                 DelayFor18TCY();
  3400   00131E  ECF5  F00A         	call	_DelayFor18TCY	;wreg free
  3401   001322                     
  3402                           ;nxlcd.c: 258:                 LATEbits.LATE1 = 0;
  3403   001322  928D               	bcf	141,1,c	;volatile
  3404   001324                     
  3405                           ;nxlcd.c: 259:                 LATEbits.LATE2 = 0;
  3406   001324  948D               	bcf	141,2,c	;volatile
  3407   001326                     
  3408                           ;nxlcd.c: 260:                 return 1;
  3409   001326  0E01               	movlw	1
  3410   001328  EF9F  F009         	goto	l173
  3411   00132C                     l172:
  3412                           
  3413                           ;nxlcd.c: 263:         {;nxlcd.c: 264:                 LATEbits.LATE1 = 0;
  3414   00132C  928D               	bcf	141,1,c	;volatile
  3415   00132E                     
  3416                           ;nxlcd.c: 265:                 DelayFor18TCY();
  3417   00132E  ECF5  F00A         	call	_DelayFor18TCY	;wreg free
  3418   001332                     
  3419                           ;nxlcd.c: 266:                 LATEbits.LATE1 = 1;
  3420   001332  828D               	bsf	141,1,c	;volatile
  3421                           
  3422                           ;nxlcd.c: 267:                 DelayFor18TCY();
  3423   001334  ECF5  F00A         	call	_DelayFor18TCY	;wreg free
  3424   001338                     
  3425                           ;nxlcd.c: 268:                 LATEbits.LATE1 = 0;
  3426   001338  928D               	bcf	141,1,c	;volatile
  3427   00133A                     
  3428                           ;nxlcd.c: 269:                 LATEbits.LATE2 = 0;
  3429   00133A  948D               	bcf	141,2,c	;volatile
  3430   00133C                     
  3431                           ;nxlcd.c: 270:                 return 0;
  3432   00133C  0E00               	movlw	0
  3433   00133E                     l173:
  3434   00133E  0012               	return		;funcret
  3435   001340                     __end_of_BusyXLCD:
  3436                           	callstack 0
  3437                           
  3438 ;; *************** function _DelayFor18TCY *****************
  3439 ;; Defined at:
  3440 ;;		line 12 in file "nxlcd.c"
  3441 ;; Parameters:    Size  Location     Type
  3442 ;;		None
  3443 ;; Auto vars:     Size  Location     Type
  3444 ;;		None
  3445 ;; Return value:  Size  Location     Type
  3446 ;;                  1    wreg      void 
  3447 ;; Registers used:
  3448 ;;		wreg
  3449 ;; Tracked objects:
  3450 ;;		On entry : 0/0
  3451 ;;		On exit  : 0/0
  3452 ;;		Unchanged: 0/0
  3453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3454 ;;      Params:         0       0       0       0       0       0       0       0       0
  3455 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3456 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3457 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3458 ;;Total ram usage:        0 bytes
  3459 ;; Hardware stack levels used: 1
  3460 ;; This function calls:
  3461 ;;		Nothing
  3462 ;; This function is called by:
  3463 ;;		_SetDDRamAddr
  3464 ;;		_BusyXLCD
  3465 ;;		_WriteCmdXLCD
  3466 ;;		_WriteDataXLCD
  3467 ;;		_SetCGRamAddr
  3468 ;;		_ReadAddrXLCD
  3469 ;;		_ReadDataXLCD
  3470 ;; This function uses a non-reentrant model
  3471 ;;
  3472                           
  3473                           	psect	text24
  3474   0015EA                     __ptext24:
  3475                           	callstack 0
  3476   0015EA                     _DelayFor18TCY:
  3477                           	callstack 28
  3478   0015EA                     
  3479                           ;nxlcd.c: 14:     _delay((unsigned long)((20)*(20000000/4000000.0)));
  3480   0015EA  0E21               	movlw	33
  3481   0015EC                     u1567:
  3482   0015EC  2EE8               	decfsz	wreg,f,c
  3483   0015EE  D7FE               	bra	u1567
  3484   0015F0  0000               	nop	
  3485   0015F2  0012               	return		;funcret
  3486   0015F4                     __end_of_DelayFor18TCY:
  3487                           	callstack 0
  3488                           
  3489 ;; *************** function _LEADC *****************
  3490 ;; Defined at:
  3491 ;;		line 24 in file "newmain.c"
  3492 ;; Parameters:    Size  Location     Type
  3493 ;;  channel         2    0[COMRAM] int 
  3494 ;; Auto vars:     Size  Location     Type
  3495 ;;		None
  3496 ;; Return value:  Size  Location     Type
  3497 ;;                  2    0[COMRAM] int 
  3498 ;; Registers used:
  3499 ;;		wreg, status,2, status,0
  3500 ;; Tracked objects:
  3501 ;;		On entry : 0/0
  3502 ;;		On exit  : 0/0
  3503 ;;		Unchanged: 0/0
  3504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3505 ;;      Params:         2       0       0       0       0       0       0       0       0
  3506 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3507 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3508 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3509 ;;Total ram usage:        4 bytes
  3510 ;; Hardware stack levels used: 1
  3511 ;; This function calls:
  3512 ;;		Nothing
  3513 ;; This function is called by:
  3514 ;;		_main
  3515 ;; This function uses a non-reentrant model
  3516 ;;
  3517                           
  3518                           	psect	text25
  3519   001384                     __ptext25:
  3520                           	callstack 0
  3521   001384                     _LEADC:
  3522                           	callstack 30
  3523   001384                     
  3524                           ;newmain.c: 25:     ADCON0bits.CHS = channel;
  3525   001384  C001  F003         	movff	LEADC@channel,??_LEADC
  3526   001388  4603               	rlncf	??_LEADC^0,f,c
  3527   00138A  4603               	rlncf	??_LEADC^0,f,c
  3528   00138C  50C2               	movf	194,w,c	;volatile
  3529   00138E  1803               	xorwf	??_LEADC^0,w,c
  3530   001390  0BC3               	andlw	-61
  3531   001392  1803               	xorwf	??_LEADC^0,w,c
  3532   001394  6EC2               	movwf	194,c	;volatile
  3533   001396                     
  3534                           ;newmain.c: 26:     _delay((unsigned long)((2)*(20000000/4000.0)));
  3535   001396  0E0D               	movlw	13
  3536   001398  6E03               	movwf	??_LEADC^0,c
  3537   00139A  0EFC               	movlw	252
  3538   00139C                     u1577:
  3539   00139C  2EE8               	decfsz	wreg,f,c
  3540   00139E  D7FE               	bra	u1577
  3541   0013A0  2E03               	decfsz	??_LEADC^0,f,c
  3542   0013A2  D7FC               	bra	u1577
  3543   0013A4                     
  3544                           ;newmain.c: 27:     ADCON0bits.GO = 1;
  3545   0013A4  82C2               	bsf	194,1,c	;volatile
  3546   0013A6                     l47:
  3547   0013A6  B2C2               	btfsc	194,1,c	;volatile
  3548   0013A8  EFD8  F009         	goto	u1261
  3549   0013AC  EFDA  F009         	goto	u1260
  3550   0013B0                     u1261:
  3551   0013B0  EFD3  F009         	goto	l47
  3552   0013B4                     u1260:
  3553   0013B4                     
  3554                           ;newmain.c: 29:     return (ADRESH << 8) + ADRESL;
  3555   0013B4  50C4               	movf	196,w,c	;volatile
  3556   0013B6  6E04               	movwf	(??_LEADC+1)^0,c
  3557   0013B8  6A03               	clrf	??_LEADC^0,c
  3558   0013BA  50C3               	movf	195,w,c	;volatile
  3559   0013BC  2403               	addwf	??_LEADC^0,w,c
  3560   0013BE  6E01               	movwf	?_LEADC^0,c
  3561   0013C0  0E00               	movlw	0
  3562   0013C2  2004               	addwfc	(??_LEADC+1)^0,w,c
  3563   0013C4  6E02               	movwf	(?_LEADC+1)^0,c
  3564   0013C6  0012               	return		;funcret
  3565   0013C8                     __end_of_LEADC:
  3566                           	callstack 0
  3567                           
  3568                           	psect	rparam
  3569   000000                     
  3570                           	psect	idloc
  3571                           
  3572                           ;Config register IDLOC0 @ 0x200000
  3573                           ;	unspecified, using default values
  3574   200000                     	org	2097152
  3575   200000  FF                 	db	255
  3576                           
  3577                           ;Config register IDLOC1 @ 0x200001
  3578                           ;	unspecified, using default values
  3579   200001                     	org	2097153
  3580   200001  FF                 	db	255
  3581                           
  3582                           ;Config register IDLOC2 @ 0x200002
  3583                           ;	unspecified, using default values
  3584   200002                     	org	2097154
  3585   200002  FF                 	db	255
  3586                           
  3587                           ;Config register IDLOC3 @ 0x200003
  3588                           ;	unspecified, using default values
  3589   200003                     	org	2097155
  3590   200003  FF                 	db	255
  3591                           
  3592                           ;Config register IDLOC4 @ 0x200004
  3593                           ;	unspecified, using default values
  3594   200004                     	org	2097156
  3595   200004  FF                 	db	255
  3596                           
  3597                           ;Config register IDLOC5 @ 0x200005
  3598                           ;	unspecified, using default values
  3599   200005                     	org	2097157
  3600   200005  FF                 	db	255
  3601                           
  3602                           ;Config register IDLOC6 @ 0x200006
  3603                           ;	unspecified, using default values
  3604   200006                     	org	2097158
  3605   200006  FF                 	db	255
  3606                           
  3607                           ;Config register IDLOC7 @ 0x200007
  3608                           ;	unspecified, using default values
  3609   200007                     	org	2097159
  3610   200007  FF                 	db	255
  3611                           
  3612                           	psect	config
  3613                           
  3614                           ;Config register CONFIG1L @ 0x300000
  3615                           ;	unspecified, using default values
  3616                           ;	PLL Prescaler Selection bits
  3617                           ;	PLLDIV = 0x0, unprogrammed default
  3618                           ;	System Clock Postscaler Selection bits
  3619                           ;	CPUDIV = 0x0, unprogrammed default
  3620                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  3621                           ;	USBDIV = 0x0, unprogrammed default
  3622   300000                     	org	3145728
  3623   300000  00                 	db	0
  3624                           
  3625                           ;Config register CONFIG1H @ 0x300001
  3626                           ;	Oscillator Selection bits
  3627                           ;	FOSC = HS, HS oscillator (HS)
  3628                           ;	Fail-Safe Clock Monitor Enable bit
  3629                           ;	FCMEN = 0x0, unprogrammed default
  3630                           ;	Internal/External Oscillator Switchover bit
  3631                           ;	IESO = 0x0, unprogrammed default
  3632   300001                     	org	3145729
  3633   300001  0C                 	db	12
  3634                           
  3635                           ;Config register CONFIG2L @ 0x300002
  3636                           ;	unspecified, using default values
  3637                           ;	Power-up Timer Enable bit
  3638                           ;	PWRT = 0x1, unprogrammed default
  3639                           ;	Brown-out Reset Enable bits
  3640                           ;	BOR = 0x3, unprogrammed default
  3641                           ;	Brown-out Reset Voltage bits
  3642                           ;	BORV = 0x3, unprogrammed default
  3643                           ;	USB Voltage Regulator Enable bit
  3644                           ;	VREGEN = 0x0, unprogrammed default
  3645   300002                     	org	3145730
  3646   300002  1F                 	db	31
  3647                           
  3648                           ;Config register CONFIG2H @ 0x300003
  3649                           ;	Watchdog Timer Enable bit
  3650                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3651                           ;	Watchdog Timer Postscale Select bits
  3652                           ;	WDTPS = 0xF, unprogrammed default
  3653   300003                     	org	3145731
  3654   300003  1E                 	db	30
  3655                           
  3656                           ; Padding undefined space
  3657   300004                     	org	3145732
  3658   300004  FF                 	db	255
  3659                           
  3660                           ;Config register CONFIG3H @ 0x300005
  3661                           ;	CCP2 MUX bit
  3662                           ;	CCP2MX = 0x1, unprogrammed default
  3663                           ;	PORTB A/D Enable bit
  3664                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3665                           ;	Low-Power Timer 1 Oscillator Enable bit
  3666                           ;	LPT1OSC = 0x0, unprogrammed default
  3667                           ;	MCLR Pin Enable bit
  3668                           ;	MCLRE = 0x1, unprogrammed default
  3669   300005                     	org	3145733
  3670   300005  81                 	db	129
  3671                           
  3672                           ;Config register CONFIG4L @ 0x300006
  3673                           ;	Stack Full/Underflow Reset Enable bit
  3674                           ;	STVREN = 0x1, unprogrammed default
  3675                           ;	Single-Supply ICSP Enable bit
  3676                           ;	LVP = OFF, Single-Supply ICSP disabled
  3677                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  3678                           ;	ICPRT = 0x0, unprogrammed default
  3679                           ;	Extended Instruction Set Enable bit
  3680                           ;	XINST = 0x0, unprogrammed default
  3681                           ;	Background Debugger Enable bit
  3682                           ;	DEBUG = 0x1, unprogrammed default
  3683   300006                     	org	3145734
  3684   300006  81                 	db	129
  3685                           
  3686                           ; Padding undefined space
  3687   300007                     	org	3145735
  3688   300007  FF                 	db	255
  3689                           
  3690                           ;Config register CONFIG5L @ 0x300008
  3691                           ;	unspecified, using default values
  3692                           ;	Code Protection bit
  3693                           ;	CP0 = 0x1, unprogrammed default
  3694                           ;	Code Protection bit
  3695                           ;	CP1 = 0x1, unprogrammed default
  3696                           ;	Code Protection bit
  3697                           ;	CP2 = 0x1, unprogrammed default
  3698                           ;	Code Protection bit
  3699                           ;	CP3 = 0x1, unprogrammed default
  3700   300008                     	org	3145736
  3701   300008  0F                 	db	15
  3702                           
  3703                           ;Config register CONFIG5H @ 0x300009
  3704                           ;	unspecified, using default values
  3705                           ;	Boot Block Code Protection bit
  3706                           ;	CPB = 0x1, unprogrammed default
  3707                           ;	Data EEPROM Code Protection bit
  3708                           ;	CPD = 0x1, unprogrammed default
  3709   300009                     	org	3145737
  3710   300009  C0                 	db	192
  3711                           
  3712                           ;Config register CONFIG6L @ 0x30000A
  3713                           ;	unspecified, using default values
  3714                           ;	Write Protection bit
  3715                           ;	WRT0 = 0x1, unprogrammed default
  3716                           ;	Write Protection bit
  3717                           ;	WRT1 = 0x1, unprogrammed default
  3718                           ;	Write Protection bit
  3719                           ;	WRT2 = 0x1, unprogrammed default
  3720                           ;	Write Protection bit
  3721                           ;	WRT3 = 0x1, unprogrammed default
  3722   30000A                     	org	3145738
  3723   30000A  0F                 	db	15
  3724                           
  3725                           ;Config register CONFIG6H @ 0x30000B
  3726                           ;	unspecified, using default values
  3727                           ;	Configuration Register Write Protection bit
  3728                           ;	WRTC = 0x1, unprogrammed default
  3729                           ;	Boot Block Write Protection bit
  3730                           ;	WRTB = 0x1, unprogrammed default
  3731                           ;	Data EEPROM Write Protection bit
  3732                           ;	WRTD = 0x1, unprogrammed default
  3733   30000B                     	org	3145739
  3734   30000B  E0                 	db	224
  3735                           
  3736                           ;Config register CONFIG7L @ 0x30000C
  3737                           ;	unspecified, using default values
  3738                           ;	Table Read Protection bit
  3739                           ;	EBTR0 = 0x1, unprogrammed default
  3740                           ;	Table Read Protection bit
  3741                           ;	EBTR1 = 0x1, unprogrammed default
  3742                           ;	Table Read Protection bit
  3743                           ;	EBTR2 = 0x1, unprogrammed default
  3744                           ;	Table Read Protection bit
  3745                           ;	EBTR3 = 0x1, unprogrammed default
  3746   30000C                     	org	3145740
  3747   30000C  0F                 	db	15
  3748                           
  3749                           ;Config register CONFIG7H @ 0x30000D
  3750                           ;	unspecified, using default values
  3751                           ;	Boot Block Table Read Protection bit
  3752                           ;	EBTRB = 0x1, unprogrammed default
  3753   30000D                     	org	3145741
  3754   30000D  40                 	db	64
  3755                           tosu	equ	0xFFF
  3756                           tosh	equ	0xFFE
  3757                           tosl	equ	0xFFD
  3758                           stkptr	equ	0xFFC
  3759                           pclatu	equ	0xFFB
  3760                           pclath	equ	0xFFA
  3761                           pcl	equ	0xFF9
  3762                           tblptru	equ	0xFF8
  3763                           tblptrh	equ	0xFF7
  3764                           tblptrl	equ	0xFF6
  3765                           tablat	equ	0xFF5
  3766                           prodh	equ	0xFF4
  3767                           prodl	equ	0xFF3
  3768                           indf0	equ	0xFEF
  3769                           postinc0	equ	0xFEE
  3770                           postdec0	equ	0xFED
  3771                           preinc0	equ	0xFEC
  3772                           plusw0	equ	0xFEB
  3773                           fsr0h	equ	0xFEA
  3774                           fsr0l	equ	0xFE9
  3775                           wreg	equ	0xFE8
  3776                           indf1	equ	0xFE7
  3777                           postinc1	equ	0xFE6
  3778                           postdec1	equ	0xFE5
  3779                           preinc1	equ	0xFE4
  3780                           plusw1	equ	0xFE3
  3781                           fsr1h	equ	0xFE2
  3782                           fsr1l	equ	0xFE1
  3783                           bsr	equ	0xFE0
  3784                           indf2	equ	0xFDF
  3785                           postinc2	equ	0xFDE
  3786                           postdec2	equ	0xFDD
  3787                           preinc2	equ	0xFDC
  3788                           plusw2	equ	0xFDB
  3789                           fsr2h	equ	0xFDA
  3790                           fsr2l	equ	0xFD9
  3791                           status	equ	0xFD8

Data Sizes:
    Strings     63
    Constant    0
    Data        6
    BSS         43
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     48      91
    BANK0           160     48      54
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    putsXLCD@buffer	PTR unsigned char  size(2) Largest target is 16
		 -> main@phStr(BANK0[16]), main@tempStr(BANK0[16]), main@umidadeStr(BANK0[16]), STR_1(CODE[11]), 
		 -> STR_10(CODE[4]), STR_11(CODE[2]), STR_12(CODE[4]), STR_2(CODE[15]), 
		 -> STR_3(CODE[7]), STR_4(CODE[11]), STR_8(CODE[4]), STR_9(CODE[2]), 

    S832$buffer	PTR unsigned char  size(2) Largest target is 0

    S832$source	PTR const unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_5(CODE[3]), STR_6(CODE[3]), STR_7(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 16
		 -> main@phStr(BANK0[16]), main@tempStr(BANK0[16]), main@umidadeStr(BANK0[16]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 3
		 -> STR_5(CODE[3]), STR_6(CODE[3]), STR_7(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 3
		 -> STR_5(CODE[3]), STR_6(CODE[3]), STR_7(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_5(CODE[3]), STR_6(CODE[3]), STR_7(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->___awdiv
    _abs->___awmod
    ___awdiv->___wmul
    _limitante->_readNumber
    _readNumber->___wmul
    _putsXLCD->_WriteDataXLCD
    _OpenXLCD->_DelayPORXLCD
    _OpenXLCD->_DelayXLCD
    _OpenXLCD->_SetDDRamAddr
    _OpenXLCD->_WriteCmdXLCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                50    50      0    9741
                                             46 COMRAM     2     2      0
                                              0 BANK0     48    48      0
                             _Keypad
                              _LEADC
                           _OpenXLCD
                       _WriteCmdXLCD
                            ___awdiv
                             ___wmul
                       _controleAgua
                         _controlePh
                         _controleTc
                          _limitante
                           _putsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             19    15      4    4047
                                             29 COMRAM    17    13      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3    3392
                                             25 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           11     8      3    3042
                                             14 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     782
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     908
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _limitante                                            5     5      0    2170
                                             13 COMRAM     5     5      0
                             _Keypad
                       _WriteCmdXLCD
                           _putsXLCD
                         _readNumber
 ---------------------------------------------------------------------------------
 (2) _readNumber                                           7     5      2     903
                                              6 COMRAM     7     5      2
                             _Keypad
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     767
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _Keypad                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _putsXLCD                                             2     0      2    1001
                                              1 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteDataXLCD                                        1     1      0      44
                                              0 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (1) _controleTc                                           3     1      2      98
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _controlePh                                           3     1      2      98
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _controleAgua                                         3     1      2      98
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _OpenXLCD                                             1     1      0     110
                                              1 COMRAM     1     1      0
                           _BusyXLCD
                       _DelayPORXLCD
                          _DelayXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteCmdXLCD                                         1     1      0      44
                                              0 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _SetDDRamAddr                                         1     1      0      44
                                              0 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _DelayXLCD                                            1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _DelayPORXLCD                                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _BusyXLCD                                             0     0      0       0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayFor18TCY                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEADC                                                4     2      2     250
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Keypad
   _LEADC
   _OpenXLCD
     _BusyXLCD
       _DelayFor18TCY
     _DelayPORXLCD
     _DelayXLCD
     _SetDDRamAddr
       _DelayFor18TCY
     _WriteCmdXLCD
       _DelayFor18TCY
   _WriteCmdXLCD
   ___awdiv
     ___wmul (ARG)
   ___wmul
   _controleAgua
   _controlePh
   _controleTc
   _limitante
     _Keypad
     _WriteCmdXLCD
     _putsXLCD
       _BusyXLCD
       _WriteDataXLCD
         _DelayFor18TCY
     _readNumber
       _Keypad
       ___wmul
   _putsXLCD
   _sprintf
     _vfprintf
       _vfpfcnvrt
         ___awdiv
         ___awmod
         _abs
           ___awmod (ARG)
         _fputc
           _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      26        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0     30      36       6       33.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     30      5B       1       95.8%
BITBIGSFRhh         3B      0       0      21        0.0%
BITBIGSFRlhhh       29      0       0      22        0.0%
BITBIGSFRll         21      0       0      25        0.0%
BITBIGSFRlhll        9      0       0      24        0.0%
BITBIGSFRlhlh        4      0       0      23        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      91       3        0.0%
DATA                 0      0      91       4        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Jun 25 15:28:56 2024

                     l50 13C6                       l60 1578                       l53 159E  
                     l70 0DC4                       l47 13A6                       l55 15A0  
                     l63 154E                       l71 0DD8                       l65 1550  
                     l81 0EAC                       l73 0E04                       l58 1576  
                     l82 0EC0                       l74 0E18                       l83 0ED4  
                     l75 0E2C                       l68 0DB0                       l92 1286  
                     l77 0E58                       l69 0EEA                       l78 0E6C  
                     l79 0E80                       l89 127E             ___awdiv@sign 000C  
                     _ph 0092      ___wmul@multiplicand 0003                      l105 0D96  
                    l133 15F2                      l207 15C6                      l136 15E8  
                    l139 15D8                      l163 0FD8                      l172 132C  
                    l173 133E                      l183 14C0                      l169 1406  
                    l186 1482                      l195 12F8                      l451 114C  
                    l438 109C                      l923 0C3E                      l933 1510  
                    l936 1528                      l929 1444                      l948 11F6  
                    l885 14F4                      l959 15FA                      u800 10B0  
                    u801 10AC                      u810 10CA                      u811 10C6  
                    u740 0FEC                      u820 10E4                      u900 1504  
                    u741 0FE8                      u821 10E0                      u901 1500  
                    u910 0DAA                      u750 1006                      u830 1102  
                    u911 0DA6                      u751 1002                      u831 10FE  
                    u920 0DBE                      u760 102C                      u840 1118  
                    u921 0DBA                      u761 1028                      u841 1114  
                    u930 0DD2                      u770 104A                      u850 113C  
                    u931 0DCE                      u771 1046                      u851 1138  
                    u940 0DE6                      u780 1066                      u860 115E  
                    u941 0DE2                      u781 1062                      u861 115A  
                    u950 0DFE                      u790 108C                      u870 116E  
                    u951 0DFA                      u791 1088                      u871 116A  
                    u960 0E12                      u880 1194                      u961 0E0E  
                    u881 1190                      u970 0E26                      u890 11C6  
                    u971 0E22                      u891 11C2                      u980 0E3A  
                    u981 0E36                      u990 0E52                      u991 0E4E  
                    _abs 14F6             ___awmod@sign 0006                      wreg 0FE8  
                   l2001 12C8                     l2003 15DA                     l2011 13DC  
                   ?_abs 0007                     l2005 15C8                     l2021 13F6  
                   l2013 13DE                     l2101 0D3C                     l2023 13FA  
                   l2015 13E2                     l2007 13CA                     l2111 0EEE  
                   l2103 0D4C                     l2031 1408                     l2041 1384  
                   l2025 13FC                     l2017 13E4                     l2009 13DA  
                   l2121 0EFE                     l2113 0EF6                     l2105 0D66  
                   l2033 1410                     l2201 08B4                     l2043 1396  
                   l2027 1400                     l2019 13E8                     l2131 0F10  
                   l2123 0F00                     l2115 0EF8                     l2051 157A  
                   l2035 1420                     l2211 0960                     l2203 08E2  
                   l2045 13A4                     l2141 0F28                     l2133 0F14  
                   l2125 0F02                     l2117 0EFA                     l2053 1598  
                   l2061 1548                     l2109 0D7C                     l2037 143C  
                   l2221 09A4                     l2213 0974                     l2205 0910  
                   l2047 13B4                     l2151 0F70                     l2143 0F3C  
                   l2135 0F1A                     l2127 0F06                     l2119 0EFC  
                   l2055 1552                     l2071 0C7A                     l2063 0C40  
                   l2231 09DA                     l2223 09AE                     l2215 0988  
                   l2207 093E                     l2161 0FB8                     l2153 0F84  
                   l2145 0F50                     l2137 0F1E                     l2129 0F0C  
                   l2057 1570                     l2081 0CBA                     l2073 0C80  
                   l2065 0C4C                     l2241 0A06                     l2233 09E0  
                   l2225 09B4                     l2217 098E                     l2209 094C  
                   l2163 0FBE                     l2155 0F8A                     l2147 0F56  
                   l2139 0F22                     l2059 152A                     l2091 0D00  
                   l2083 0CCC                     l2075 0C90                     l2067 0C5C  
                   l2171 14CA                     l2251 0A38                     l2243 0A16  
                   l2235 09EA                     l2227 09C4                     l2219 099E  
                   l2165 0FD2                     l2157 0F9E                     l2149 0F6A  
                   l2093 0D08                     l2085 0CD2                     l2077 0C96  
                   l2069 0C74                     l1701 10A2                     l2173 14D2  
                   l2253 0A44                     l2245 0A1C                     l2237 09F0  
                   l2229 09CA                     l2181 0842                     l2159 0FA4  
                   l2095 0D1A                     l2087 0CE2                     l2079 0CA8  
                   l1711 10D2                     l1703 10B0                     l2175 14DA  
                   l2255 0A50                     l2247 0A26                     l2239 0A00  
                   l2191 0862                     l2183 0844                     l1801 0E66  
                   l2097 0D22                     l2089 0CEE                     l1721 1118  
                   l1713 10E4                     l1705 10B8                     l2177 14EA  
                   l2169 14C2                     l2257 0A64                     l2249 0A2C  
                   l2193 0872                     l2185 0848                     l2099 0D34  
                   l1731 1144                     l1723 1120                     l1715 10EC  
                   l1707 10BC                     l2259 0A68                     l2195 0878  
                   l2187 0856                     l1653 15EA                     l1821 0EBA  
                   l1813 0E94                     l1805 0E7A                     l1661 0FF4  
                   l1725 1126                     l1717 10F4                     l1709 10CA  
                   l1741 1178                     l2197 088C                     l2189 085C  
                   l1815 0E98                     l1671 101A                     l1663 0FF8  
                   l1655 0FDA                     l1719 1102                     l1727 112C  
                   l1751 1504                     l1743 1194                     l1735 114E  
                   l1911 0AC2                     l1903 0A88                     l2199 08A0  
                   l1841 1302                     l1833 0EE8                     l1825 0ECE  
                   l1817 0EA6                     l1809 0E8E                     l1761 0DBE  
                   l1753 0D98                     l1681 1050                     l1673 102C  
                   l1665 1006                     l1657 0FDE                     l1729 113C  
                   l1745 11C6                     l1737 115E                     l1921 0B26  
                   l1913 0ACC                     l1905 0AAA                     l1851 1322  
                   l1843 1308                     l1755 0D9C                     l1683 1066  
                   l1675 1034                     l1691 107C                     l1667 100E  
                   l1659 0FEC                     l1739 116E                     l1931 0BAC  
                   l1923 0B3E                     l1915 0AE8                     l1907 0AB2  
                   l1861 132E                     l1853 1324                     l1845 1316  
                   l1837 12FA                     l1829 0EE2                     l1781 0E12  
                   l1773 0DEC                     l1765 0DD2                     l1757 0DAA  
                   l1693 108C                     l1685 106E                     l1677 103C  
                   l1669 1012                     l1749 14F6                     l1933 0BBC  
                   l1941 0BFA                     l1925 0B6E                     l1917 0B04  
                   l1909 0ABE                     l1863 1332                     l1855 1326  
                   l1847 1318                     l1839 12FE                     l1775 0DF0  
                   l1695 1094                     l1687 1070                     l1679 104A  
                   l1935 0BCC                     l1927 0B8A                     l1919 0B1C  
                   l1943 0C10                     l1865 1338                     l1849 131C  
                   l1881 145E                     l1873 1448                     l1793 0E40  
                   l1785 0E26                     l1777 0DFE                     l1769 0DE6  
                   l1961 121C                     l1953 11F8                     l1689 1076  
                   l1937 0BDE                     l1929 0B9C                     l1867 133A  
                   l1971 1494                     l1891 1478                     l1883 1460  
                   l1875 1456                     l1795 0E44                     l1963 122C  
                   l1955 1200                     l1699 109E                     l1939 0BF8  
                   l1947 0C1C                     l1869 133C                     l1981 14A2  
                   l1973 1496                     l1893 147C                     l1885 1464  
                   l1877 1458                     l1797 0E52                     l1789 0E3A  
                   l1965 123C                     l1957 1206                     l1983 14B0  
                   l1975 1498                     l1887 1472                     l1879 145A  
                   l1967 1264                     l1985 14B4                     l1977 149C  
                   l1969 1486                     l1889 1476                     l1993 1288  
                   l1897 15A2                     l1987 14B6                     l1979 149E  
                   l1995 128C                     l1899 15BE                     l1989 14BA  
                   l1997 12A0                     l1999 12C4                     STR_1 081B  
                   STR_2 0801                     STR_3 0826                     STR_4 0810  
                   STR_5 0839                     STR_6 0839                     STR_7 0839  
                   STR_8 082D                     STR_9 083C                     u1000 0E66  
                   u1001 0E62                     u1010 0E7A                     u1011 0E76  
                   u1020 0E8E                     u1100 0B04                     u1021 0E8A  
                   u1101 0B00                     u1030 0EA6                     u1110 0B3A  
                   u1031 0EA2                     u1111 0B34                     u1040 0EBA  
                   u1200 123C                     u1120 0B3C                     u1041 0EB6  
                   u1201 1238                     u1210 12A0                     u1050 0ECE  
                   u1130 0B9C                     u1211 129C                     u1051 0ECA  
                   u1131 0B98                     u1220 12C0                     u1060 0EE2  
                   u1300 0CA8                     u1140 0BAC                     u1061 0EDE  
                   u1301 0CA4                     u1141 0BA8                     u1070 1316  
                   u1230 12E8                     u1310 0CBA                     u1150 0BBC  
                   u1071 1312                     u1311 0CB6                     u1151 0BB8  
                   u1400 0F84                     u1240 12F8                     u1320 0CCC  
                   u1160 0BCC                     u1080 0AAA                     u1401 0F80  
                   u1241 12F4                     u1321 0CC8                     u1161 0BC8  
                   u1081 0AA6                     u1410 0F9E                     u1330 0D00  
                   u1170 0C0C                     u1090 0AE8                     u1250 143C  
                   u1411 0F9A                     u1227 12B6                     u1331 0CFC  
                   u1171 0C08                     u1091 0AE4                     u1251 1438  
                   u1260 13B4                     u1420 0FB8                     u1180 1218  
                   u1340 0D1A                     u1261 13B0                     u1421 0FB4  
                   u1237 12DE                     u1181 1214                     u1341 0D16  
                   u1430 0FD2                     u1270 1598                     u1190 122C  
                   u1350 0D34                     u1431 0FCE                     u1271 1594  
                   u1191 1228                     u1351 0D30                     u1280 1570  
                   u1360 0D78                     u1440 0A64                     u1281 156C  
                   u1361 0D74                     u1441 0A60                     u1370 0F3C  
                   u1290 1548                     u1371 0F38                     u1291 1544  
                   u1507 0C66                     u1380 0F50                     u1381 0F4C  
                   u1517 0D56                     u1390 0F6A                     u1391 0F66  
                   u1527 0D86                     u1537 126E                     u1547 15CE  
                   u1557 15E0                     u1477 0868                     u1567 15EC  
                   u1487 0944                     u1577 139C                     u1497 0A72  
                   abs@a 0007                     _dbuf 0031                     _main 0842  
                   _prec 0053                     _temp 0090              main@tempStr 0080  
                   fsr1h 0FE2                     fsr2h 0FDA                     indf1 0FE7  
                   indf2 0FDF                     fsr1l 0FE1                     fsr2l 0FD9  
                   prodh 0FF4                     prodl 0FF3                     start 0000  
           ___param_bank 0000                    ??_abs 0009             _WriteCmdXLCD 1484  
          ?_controleAgua 0001            ?_SetDDRamAddr 0001                    ?_main 0001  
        __end_of___awdiv 109E                    STR_10 0831                    STR_11 083E  
                  STR_12 0835          __end_of___awmod 114E                    _LEADC 1384  
        ___awdiv@divisor 0009          ___awdiv@counter 000B             vfpfcnvrt@fmt 0010  
                  _PORTB 0F81                    _PORTD 0F83                    _TRISA 0F92  
                  _TRISB 0F93                    _TRISC 0F94                    _TRISD 0F95  
         limitante@valor 0010                    _flags 0055                    _fputc 114E  
                  _width 0051                    _putch 15FA                    tablat 0FF5  
                  status 0FD8          __end_of_sprintf 14F6          __initialization 1340  
           __end_of_main 0A88         __end_of_BusyXLCD 1340           ??_controleAgua 0003  
         ??_SetDDRamAddr 0001         __end_of_OpenXLCD 0FDA                   ??_main 002F  
                 ?_LEADC 0001            __activetblptr 0002            _WriteDataXLCD 1446  
                 _ADCON1 0FC1                   _ADCON2 0FC0                   ?_fputc 0001  
                 _ADRESH 0FC4                   _ADRESL 0FC3         ___awdiv@dividend 0007  
                 ?_putch 0001            vfpfcnvrt@done 0013             _DelayPORXLCD 15DA  
                 _Keypad 0D98             vfprintf@cfmt 001D                   ___wmul 15A2  
              ??___awdiv 000B                ??___awmod 0005                   clear_0 1374  
       ___awdiv@quotient 000D          ___awmod@divisor 0003                   isa$std 0001  
        ___awmod@counter 0005           ?_WriteDataXLCD 0001                   fputc@c 0001  
           __pdataCOMRAM 0056             __mediumconst 0000                   tblptrh 0FF7  
                 tblptrl 0FF6                   tblptru 0FF8             controlePh@Ph 0001  
           controleTc@Tc 0001                   putch@c 0001         __end_of_putsXLCD 12FA  
       __end_of_vfprintf 1446                ??_sprintf 0022        __end_of_DelayXLCD 15DA  
             __accesstop 0060  __end_of__initialization 137A            ___rparam_used 0001  
          __end_of_LEADC 13C8              limitante@op 0012           __pcstackCOMRAM 0001  
          __end_of_fputc 11F8            __end_of_putch 15FC                  ??_LEADC 0003  
                ??_fputc 0004                  ??_putch 0001               __pbssBANK0 0090  
              ?_BusyXLCD 0001     __end_of_controleAgua 15A2          WriteCmdXLCD@cmd 0001  
   __end_of_SetDDRamAddr 1408                ?_OpenXLCD 0001                  ?_Keypad 0001  
      WriteDataXLCD@data 0001                  ?___wmul 0001          ??_WriteDataXLCD 0001  
             ??_BusyXLCD 0001               _controlePh 1552               _controleTc 152A  
             ??_OpenXLCD 0002                  __Hparam 0000                  __Lparam 0000  
                ___awdiv 0FDA            _DelayFor18TCY 15EA                  ___awmod 109E  
              ?_putsXLCD 0002                ?_vfprintf 001A             __psmallconst 0800  
             _readNumber 11F8                  __pcinit 1340                  __ramtop 0800  
                __ptext0 0842                  __ptext1 14C2                  __ptext2 1408  
                __ptext3 0A88                  __ptext4 114E                  __ptext5 15FA  
                __ptext6 14F6                  __ptext7 109E                  __ptext8 0FDA  
                __ptext9 0C40         ___awmod@dividend 0001        __end_of_limitante 0D98  
                _umidade 0094                  _sprintf 14C2     end_of_initialization 137A  
                fputc@fp 0003            __Lmediumconst 0000           main@umidadeStr 0060  
      __end_of_vfpfcnvrt 0C40           ?_DelayFor18TCY 0001                  postdec1 0FE5  
                postdec2 0FDD                  postinc0 0FEE                  postinc1 0FE6  
                postinc2 0FDE         vfpfcnvrt@convarg 0015               ??_putsXLCD 0004  
             ??_vfprintf 001D                _PORTBbits 0F81                _PORTCbits 0F82  
              _TRISEbits 0F96              ?_controlePh 0001              ?_controleTc 0001  
              _DelayXLCD 15C8           __end_of_Keypad 0EEC              ?_readNumber 0007  
            vfpfcnvrt@ap 0011              vfpfcnvrt@cp 0014              vfpfcnvrt@fp 000F  
         __end_of___wmul 15C8            __pidataCOMRAM 15F4             _controleAgua 157A  
           _SetDDRamAddr 13C8       SetDDRamAddr@DDaddr 0001      start_initialization 1340  
            __end_of_abs 152A               ?_DelayXLCD 0001          ??_DelayFor18TCY 0001  
               ??_Keypad 0001              vfprintf@fmt 001B                 ??___wmul 0005  
          ?_WriteCmdXLCD 0001              __pbssCOMRAM 0031            __pcstackBANK0 0060  
         putsXLCD@buffer 0002           ??_WriteCmdXLCD 0001                 ?___awdiv 0007  
               ?___awmod 0001    __end_of_WriteDataXLCD 1484              __smallconst 0800  
               ?_sprintf 001E                _limite_UR 005A                _limite_Ph 0056  
              _limite_Tc 0058                _limitante 0C40           ___wmul@product 0005  
               _LATEbits 0F8D              ??_DelayXLCD 0001            ?_DelayPORXLCD 0001  
        OpenXLCD@lcdtype 0002                _vfpfcnvrt 0A88               _ADCON0bits 0FC2  
      ___wmul@multiplier 0001                main@phStr 0070               vfpfcnvrt@c 0019  
              copy_data0 1354               ?_limitante 0001                 _BusyXLCD 12FA  
           ??_controlePh 0003             ??_controleTc 0003           ??_DelayPORXLCD 0001  
           LEADC@channel 0001                 _OpenXLCD 0EEC                 __Hrparam 0000  
             vfprintf@ap 001C                 __Lrparam 0000               vfprintf@fp 001A  
           ??_readNumber 0009               ?_vfpfcnvrt 000F               sprintf@fmt 001F  
     __end_of_controlePh 157A       __end_of_controleTc 1552                 __ptext10 11F8  
               __ptext11 15A2                 __ptext20 13C8                 __ptext12 0D98  
               __ptext21 15C8                 __ptext13 1288                 __ptext22 15DA  
               __ptext14 1446                 __ptext23 12FA                 __ptext15 152A  
               __ptext24 15EA                 __ptext16 1552                 __ptext25 1384  
               __ptext17 157A                 __ptext18 0EEC                 __ptext19 1484  
   __end_of_WriteCmdXLCD 14C2            readNumber@key 000D            readNumber@num 000B  
     __end_of_readNumber 1288                 isa$xinst 0000                 _putsXLCD 1288  
               _vfprintf 1408              ??_limitante 000E                sprintf@ap 0022  
  __end_of_DelayFor18TCY 15F4           controleAgua@UR 0001              ??_vfpfcnvrt 0012  
               sprintf@f 0023                 sprintf@s 001E     __end_of_DelayPORXLCD 15EA  
