

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Jun 11 17:09:01 2024

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1  0000                     
     2                           ; Version 1.45
     3                           ; Generated 16/11/2017 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC18F4550 Definitions
    37                           ; 
    38  0000                     fsr0 equ 0FE9h
    39  0000                     fsr0h equ 0FEAh
    40  0000                     fsr0l equ 0FE9h
    41  0000                     fsr1 equ 0FE1h
    42  0000                     fsr1h equ 0FE2h
    43  0000                     fsr1l equ 0FE1h
    44  0000                     fsr2 equ 0FD9h
    45  0000                     fsr2h equ 0FDAh
    46  0000                     fsr2l equ 0FD9h
    47  0000                     indf0 equ 0FEFh
    48  0000                     indf1 equ 0FE7h
    49  0000                     indf2 equ 0FDFh
    50  0000                     intcon equ 0FF2h
    51  0000                     nvmcon equ 00h
    52  0000                     pcl equ 0FF9h
    53  0000                     pclath equ 0FFAh
    54  0000                     pclatu equ 0FFBh
    55  0000                     plusw0 equ 0FEBh
    56  0000                     plusw1 equ 0FE3h
    57  0000                     plusw2 equ 0FDBh
    58  0000                     postdec0 equ 0FEDh
    59  0000                     postdec1 equ 0FE5h
    60  0000                     postdec2 equ 0FDDh
    61  0000                     postinc0 equ 0FEEh
    62  0000                     postinc1 equ 0FE6h
    63  0000                     postinc2 equ 0FDEh
    64  0000                     preinc0 equ 0FECh
    65  0000                     preinc1 equ 0FE4h
    66  0000                     preinc2 equ 0FDCh
    67  0000                     prod equ 0FF3h
    68  0000                     prodh equ 0FF4h
    69  0000                     prodl equ 0FF3h
    70  0000                     status equ 0FD8h
    71  0000                     tablat equ 0FF5h
    72  0000                     tblptr equ 0FF6h
    73  0000                     tblptrh equ 0FF7h
    74  0000                     tblptrl equ 0FF6h
    75  0000                     tblptru equ 0FF8h
    76  0000                     tosl equ 0FFDh
    77  0000                     wreg equ 0FE8h
    78  0000                     
     2                           opt pagewidth 120
     3  0000                     setc   macro
     4                           	bsf	status,0
     5                           endm
     6  0000                     clrz   macro
     7                           	bcf	status,2
     8                           endm
     9  0000                     setz   macro
    10                           	bsf	status,2
    11                           endm
    12  0000                     skipnz macro
    13                           	btfsc	status,2
    14                           endm
    15  0000                     skipz  macro
    16                           	btfss	status,2
    17                           endm
    18  0000                     skipnc macro
    19                           	btfsc	status,0
    20                           endm
    21  0000                     skipc  macro
    22                           	btfss	status,0
    23                           endm
    24  0000                     pushw macro
    25                           	movwf postinc1
    26                           endm
    27  0000                     pushf macro arg1
    28                           	movff arg1, postinc1
    29                           endm
    30  0000                     popw macro
    31                           	movf postdec1,f
    32                           	movf indf1,w
    33                           endm
    34  0000                     popf macro arg1
    35                           	movf postdec1,f
    36                           	movff indf1,arg1
    37                           endm
    38  0000                     popfc macro arg1
    39                           	movff plusw1,arg1
    40                           	decfsz fsr1,f
    41                           endm
    42  0000                     	global	__ramtop
    43                           	global	__accesstop
    44                           # 52 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
    45                           SPPDATA equ 0F62h ;# 
    46  0000                     # 72 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
    47                           SPPCFG equ 0F63h ;# 
    48  0000                     # 149 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
    49                           SPPEPS equ 0F64h ;# 
    50  0000                     # 223 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
    51                           SPPCON equ 0F65h ;# 
    52  0000                     # 249 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
    53                           UFRM equ 0F66h ;# 
    54  0000                     # 256 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
    55                           UFRML equ 0F66h ;# 
    56  0000                     # 334 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
    57                           UFRMH equ 0F67h ;# 
    58  0000                     # 374 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
    59                           UIR equ 0F68h ;# 
    60  0000                     # 430 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
    61                           UIE equ 0F69h ;# 
    62  0000                     # 486 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
    63                           UEIR equ 0F6Ah ;# 
    64  0000                     # 537 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
    65                           UEIE equ 0F6Bh ;# 
    66  0000                     # 588 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
    67                           USTAT equ 0F6Ch ;# 
    68  0000                     # 648 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
    69                           UCON equ 0F6Dh ;# 
    70  0000                     # 699 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
    71                           UADDR equ 0F6Eh ;# 
    72  0000                     # 763 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
    73                           UCFG equ 0F6Fh ;# 
    74  0000                     # 842 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
    75                           UEP0 equ 0F70h ;# 
    76  0000                     # 950 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
    77                           UEP1 equ 0F71h ;# 
    78  0000                     # 1058 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
    79                           UEP2 equ 0F72h ;# 
    80  0000                     # 1166 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
    81                           UEP3 equ 0F73h ;# 
    82  0000                     # 1274 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
    83                           UEP4 equ 0F74h ;# 
    84  0000                     # 1382 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
    85                           UEP5 equ 0F75h ;# 
    86  0000                     # 1490 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
    87                           UEP6 equ 0F76h ;# 
    88  0000                     # 1598 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
    89                           UEP7 equ 0F77h ;# 
    90  0000                     # 1706 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
    91                           UEP8 equ 0F78h ;# 
    92  0000                     # 1782 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
    93                           UEP9 equ 0F79h ;# 
    94  0000                     # 1858 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
    95                           UEP10 equ 0F7Ah ;# 
    96  0000                     # 1934 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
    97                           UEP11 equ 0F7Bh ;# 
    98  0000                     # 2010 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
    99                           UEP12 equ 0F7Ch ;# 
   100  0000                     # 2086 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   101                           UEP13 equ 0F7Dh ;# 
   102  0000                     # 2162 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   103                           UEP14 equ 0F7Eh ;# 
   104  0000                     # 2238 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   105                           UEP15 equ 0F7Fh ;# 
   106  0000                     # 2314 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   107                           PORTA equ 0F80h ;# 
   108  0000                     # 2453 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   109                           PORTB equ 0F81h ;# 
   110  0000                     # 2563 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   111                           PORTC equ 0F82h ;# 
   112  0000                     # 2705 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   113                           PORTD equ 0F83h ;# 
   114  0000                     # 2826 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   115                           PORTE equ 0F84h ;# 
   116  0000                     # 2973 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   117                           LATA equ 0F89h ;# 
   118  0000                     # 3073 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   119                           LATB equ 0F8Ah ;# 
   120  0000                     # 3185 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   121                           LATC equ 0F8Bh ;# 
   122  0000                     # 3263 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   123                           LATD equ 0F8Ch ;# 
   124  0000                     # 3375 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   125                           LATE equ 0F8Dh ;# 
   126  0000                     # 3427 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   127                           TRISA equ 0F92h ;# 
   128  0000                     # 3432 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   129                           DDRA equ 0F92h ;# 
   130  0000                     # 3625 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   131                           TRISB equ 0F93h ;# 
   132  0000                     # 3630 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   133                           DDRB equ 0F93h ;# 
   134  0000                     # 3847 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   135                           TRISC equ 0F94h ;# 
   136  0000                     # 3852 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   137                           DDRC equ 0F94h ;# 
   138  0000                     # 4001 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   139                           TRISD equ 0F95h ;# 
   140  0000                     # 4006 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   141                           DDRD equ 0F95h ;# 
   142  0000                     # 4223 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   143                           TRISE equ 0F96h ;# 
   144  0000                     # 4228 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   145                           DDRE equ 0F96h ;# 
   146  0000                     # 4325 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   147                           OSCTUNE equ 0F9Bh ;# 
   148  0000                     # 4384 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   149                           PIE1 equ 0F9Dh ;# 
   150  0000                     # 4468 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   151                           PIR1 equ 0F9Eh ;# 
   152  0000                     # 4552 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   153                           IPR1 equ 0F9Fh ;# 
   154  0000                     # 4636 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   155                           PIE2 equ 0FA0h ;# 
   156  0000                     # 4707 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   157                           PIR2 equ 0FA1h ;# 
   158  0000                     # 4778 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   159                           IPR2 equ 0FA2h ;# 
   160  0000                     # 4849 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   161                           EECON1 equ 0FA6h ;# 
   162  0000                     # 4915 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   163                           EECON2 equ 0FA7h ;# 
   164  0000                     # 4922 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   165                           EEDATA equ 0FA8h ;# 
   166  0000                     # 4929 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   167                           EEADR equ 0FA9h ;# 
   168  0000                     # 4936 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   169                           RCSTA equ 0FABh ;# 
   170  0000                     # 4941 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   171                           RCSTA1 equ 0FABh ;# 
   172  0000                     # 5146 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   173                           TXSTA equ 0FACh ;# 
   174  0000                     # 5151 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   175                           TXSTA1 equ 0FACh ;# 
   176  0000                     # 5402 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   177                           TXREG equ 0FADh ;# 
   178  0000                     # 5407 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   179                           TXREG1 equ 0FADh ;# 
   180  0000                     # 5414 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   181                           RCREG equ 0FAEh ;# 
   182  0000                     # 5419 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   183                           RCREG1 equ 0FAEh ;# 
   184  0000                     # 5426 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   185                           SPBRG equ 0FAFh ;# 
   186  0000                     # 5431 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   187                           SPBRG1 equ 0FAFh ;# 
   188  0000                     # 5438 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   189                           SPBRGH equ 0FB0h ;# 
   190  0000                     # 5445 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   191                           T3CON equ 0FB1h ;# 
   192  0000                     # 5566 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   193                           TMR3 equ 0FB2h ;# 
   194  0000                     # 5573 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   195                           TMR3L equ 0FB2h ;# 
   196  0000                     # 5580 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   197                           TMR3H equ 0FB3h ;# 
   198  0000                     # 5587 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   199                           CMCON equ 0FB4h ;# 
   200  0000                     # 5677 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   201                           CVRCON equ 0FB5h ;# 
   202  0000                     # 5762 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   203                           ECCP1AS equ 0FB6h ;# 
   204  0000                     # 5767 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   205                           CCP1AS equ 0FB6h ;# 
   206  0000                     # 5924 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   207                           ECCP1DEL equ 0FB7h ;# 
   208  0000                     # 5929 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   209                           CCP1DEL equ 0FB7h ;# 
   210  0000                     # 6062 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   211                           BAUDCON equ 0FB8h ;# 
   212  0000                     # 6067 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   213                           BAUDCTL equ 0FB8h ;# 
   214  0000                     # 6242 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   215                           CCP2CON equ 0FBAh ;# 
   216  0000                     # 6306 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   217                           CCPR2 equ 0FBBh ;# 
   218  0000                     # 6313 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   219                           CCPR2L equ 0FBBh ;# 
   220  0000                     # 6320 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   221                           CCPR2H equ 0FBCh ;# 
   222  0000                     # 6327 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   223                           CCP1CON equ 0FBDh ;# 
   224  0000                     # 6332 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   225                           ECCP1CON equ 0FBDh ;# 
   226  0000                     # 6489 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   227                           CCPR1 equ 0FBEh ;# 
   228  0000                     # 6496 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   229                           CCPR1L equ 0FBEh ;# 
   230  0000                     # 6503 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   231                           CCPR1H equ 0FBFh ;# 
   232  0000                     # 6510 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   233                           ADCON2 equ 0FC0h ;# 
   234  0000                     # 6581 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   235                           ADCON1 equ 0FC1h ;# 
   236  0000                     # 6666 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   237                           ADCON0 equ 0FC2h ;# 
   238  0000                     # 6785 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   239                           ADRES equ 0FC3h ;# 
   240  0000                     # 6792 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   241                           ADRESL equ 0FC3h ;# 
   242  0000                     # 6799 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   243                           ADRESH equ 0FC4h ;# 
   244  0000                     # 6806 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   245                           SSPCON2 equ 0FC5h ;# 
   246  0000                     # 6868 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   247                           SSPCON1 equ 0FC6h ;# 
   248  0000                     # 6938 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   249                           SSPSTAT equ 0FC7h ;# 
   250  0000                     # 7186 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   251                           SSPADD equ 0FC8h ;# 
   252  0000                     # 7193 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   253                           SSPBUF equ 0FC9h ;# 
   254  0000                     # 7200 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   255                           T2CON equ 0FCAh ;# 
   256  0000                     # 7298 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   257                           PR2 equ 0FCBh ;# 
   258  0000                     # 7303 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   259                           MEMCON equ 0FCBh ;# 
   260  0000                     # 7408 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   261                           TMR2 equ 0FCCh ;# 
   262  0000                     # 7415 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   263                           T1CON equ 0FCDh ;# 
   264  0000                     # 7518 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   265                           TMR1 equ 0FCEh ;# 
   266  0000                     # 7525 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   267                           TMR1L equ 0FCEh ;# 
   268  0000                     # 7532 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   269                           TMR1H equ 0FCFh ;# 
   270  0000                     # 7539 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   271                           RCON equ 0FD0h ;# 
   272  0000                     # 7688 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   273                           WDTCON equ 0FD1h ;# 
   274  0000                     # 7716 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   275                           HLVDCON equ 0FD2h ;# 
   276  0000                     # 7721 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   277                           LVDCON equ 0FD2h ;# 
   278  0000                     # 7986 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   279                           OSCCON equ 0FD3h ;# 
   280  0000                     # 8069 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   281                           T0CON equ 0FD5h ;# 
   282  0000                     # 8139 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   283                           TMR0 equ 0FD6h ;# 
   284  0000                     # 8146 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   285                           TMR0L equ 0FD6h ;# 
   286  0000                     # 8153 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   287                           TMR0H equ 0FD7h ;# 
   288  0000                     # 8160 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   289                           STATUS equ 0FD8h ;# 
   290  0000                     # 8231 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   291                           FSR2 equ 0FD9h ;# 
   292  0000                     # 8238 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   293                           FSR2L equ 0FD9h ;# 
   294  0000                     # 8245 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   295                           FSR2H equ 0FDAh ;# 
   296  0000                     # 8252 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   297                           PLUSW2 equ 0FDBh ;# 
   298  0000                     # 8259 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   299                           PREINC2 equ 0FDCh ;# 
   300  0000                     # 8266 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   301                           POSTDEC2 equ 0FDDh ;# 
   302  0000                     # 8273 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   303                           POSTINC2 equ 0FDEh ;# 
   304  0000                     # 8280 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   305                           INDF2 equ 0FDFh ;# 
   306  0000                     # 8287 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   307                           BSR equ 0FE0h ;# 
   308  0000                     # 8294 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   309                           FSR1 equ 0FE1h ;# 
   310  0000                     # 8301 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   311                           FSR1L equ 0FE1h ;# 
   312  0000                     # 8308 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   313                           FSR1H equ 0FE2h ;# 
   314  0000                     # 8315 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   315                           PLUSW1 equ 0FE3h ;# 
   316  0000                     # 8322 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   317                           PREINC1 equ 0FE4h ;# 
   318  0000                     # 8329 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   319                           POSTDEC1 equ 0FE5h ;# 
   320  0000                     # 8336 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   321                           POSTINC1 equ 0FE6h ;# 
   322  0000                     # 8343 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   323                           INDF1 equ 0FE7h ;# 
   324  0000                     # 8350 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   325                           WREG equ 0FE8h ;# 
   326  0000                     # 8357 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   327                           FSR0 equ 0FE9h ;# 
   328  0000                     # 8364 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   329                           FSR0L equ 0FE9h ;# 
   330  0000                     # 8371 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   331                           FSR0H equ 0FEAh ;# 
   332  0000                     # 8378 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   333                           PLUSW0 equ 0FEBh ;# 
   334  0000                     # 8385 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   335                           PREINC0 equ 0FECh ;# 
   336  0000                     # 8392 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   337                           POSTDEC0 equ 0FEDh ;# 
   338  0000                     # 8399 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   339                           POSTINC0 equ 0FEEh ;# 
   340  0000                     # 8406 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   341                           INDF0 equ 0FEFh ;# 
   342  0000                     # 8413 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   343                           INTCON3 equ 0FF0h ;# 
   344  0000                     # 8505 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   345                           INTCON2 equ 0FF1h ;# 
   346  0000                     # 8582 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   347                           INTCON equ 0FF2h ;# 
   348  0000                     # 8699 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   349                           PROD equ 0FF3h ;# 
   350  0000                     # 8706 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   351                           PRODL equ 0FF3h ;# 
   352  0000                     # 8713 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   353                           PRODH equ 0FF4h ;# 
   354  0000                     # 8720 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   355                           TABLAT equ 0FF5h ;# 
   356  0000                     # 8729 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   357                           TBLPTR equ 0FF6h ;# 
   358  0000                     # 8736 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   359                           TBLPTRL equ 0FF6h ;# 
   360  0000                     # 8743 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   361                           TBLPTRH equ 0FF7h ;# 
   362  0000                     # 8750 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   363                           TBLPTRU equ 0FF8h ;# 
   364  0000                     # 8759 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   365                           PCLAT equ 0FF9h ;# 
   366  0000                     # 8766 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   367                           PC equ 0FF9h ;# 
   368  0000                     # 8773 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   369                           PCL equ 0FF9h ;# 
   370  0000                     # 8780 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   371                           PCLATH equ 0FFAh ;# 
   372  0000                     # 8787 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   373                           PCLATU equ 0FFBh ;# 
   374  0000                     # 8794 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   375                           STKPTR equ 0FFCh ;# 
   376  0000                     # 8870 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   377                           TOS equ 0FFDh ;# 
   378  0000                     # 8877 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   379                           TOSL equ 0FFDh ;# 
   380  0000                     # 8884 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   381                           TOSH equ 0FFEh ;# 
   382  0000                     # 8891 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   383                           TOSU equ 0FFFh ;# 
   384  0000                     # 52 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   385                           SPPDATA equ 0F62h ;# 
   386  0000                     # 72 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   387                           SPPCFG equ 0F63h ;# 
   388  0000                     # 149 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   389                           SPPEPS equ 0F64h ;# 
   390  0000                     # 223 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   391                           SPPCON equ 0F65h ;# 
   392  0000                     # 249 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   393                           UFRM equ 0F66h ;# 
   394  0000                     # 256 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   395                           UFRML equ 0F66h ;# 
   396  0000                     # 334 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   397                           UFRMH equ 0F67h ;# 
   398  0000                     # 374 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   399                           UIR equ 0F68h ;# 
   400  0000                     # 430 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   401                           UIE equ 0F69h ;# 
   402  0000                     # 486 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   403                           UEIR equ 0F6Ah ;# 
   404  0000                     # 537 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   405                           UEIE equ 0F6Bh ;# 
   406  0000                     # 588 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   407                           USTAT equ 0F6Ch ;# 
   408  0000                     # 648 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   409                           UCON equ 0F6Dh ;# 
   410  0000                     # 699 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   411                           UADDR equ 0F6Eh ;# 
   412  0000                     # 763 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   413                           UCFG equ 0F6Fh ;# 
   414  0000                     # 842 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   415                           UEP0 equ 0F70h ;# 
   416  0000                     # 950 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   417                           UEP1 equ 0F71h ;# 
   418  0000                     # 1058 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   419                           UEP2 equ 0F72h ;# 
   420  0000                     # 1166 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   421                           UEP3 equ 0F73h ;# 
   422  0000                     # 1274 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   423                           UEP4 equ 0F74h ;# 
   424  0000                     # 1382 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   425                           UEP5 equ 0F75h ;# 
   426  0000                     # 1490 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   427                           UEP6 equ 0F76h ;# 
   428  0000                     # 1598 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   429                           UEP7 equ 0F77h ;# 
   430  0000                     # 1706 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   431                           UEP8 equ 0F78h ;# 
   432  0000                     # 1782 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   433                           UEP9 equ 0F79h ;# 
   434  0000                     # 1858 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   435                           UEP10 equ 0F7Ah ;# 
   436  0000                     # 1934 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   437                           UEP11 equ 0F7Bh ;# 
   438  0000                     # 2010 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   439                           UEP12 equ 0F7Ch ;# 
   440  0000                     # 2086 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   441                           UEP13 equ 0F7Dh ;# 
   442  0000                     # 2162 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   443                           UEP14 equ 0F7Eh ;# 
   444  0000                     # 2238 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   445                           UEP15 equ 0F7Fh ;# 
   446  0000                     # 2314 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   447                           PORTA equ 0F80h ;# 
   448  0000                     # 2453 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   449                           PORTB equ 0F81h ;# 
   450  0000                     # 2563 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   451                           PORTC equ 0F82h ;# 
   452  0000                     # 2705 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   453                           PORTD equ 0F83h ;# 
   454  0000                     # 2826 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   455                           PORTE equ 0F84h ;# 
   456  0000                     # 2973 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   457                           LATA equ 0F89h ;# 
   458  0000                     # 3073 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   459                           LATB equ 0F8Ah ;# 
   460  0000                     # 3185 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   461                           LATC equ 0F8Bh ;# 
   462  0000                     # 3263 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   463                           LATD equ 0F8Ch ;# 
   464  0000                     # 3375 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   465                           LATE equ 0F8Dh ;# 
   466  0000                     # 3427 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   467                           TRISA equ 0F92h ;# 
   468  0000                     # 3432 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   469                           DDRA equ 0F92h ;# 
   470  0000                     # 3625 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   471                           TRISB equ 0F93h ;# 
   472  0000                     # 3630 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   473                           DDRB equ 0F93h ;# 
   474  0000                     # 3847 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   475                           TRISC equ 0F94h ;# 
   476  0000                     # 3852 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   477                           DDRC equ 0F94h ;# 
   478  0000                     # 4001 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   479                           TRISD equ 0F95h ;# 
   480  0000                     # 4006 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   481                           DDRD equ 0F95h ;# 
   482  0000                     # 4223 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   483                           TRISE equ 0F96h ;# 
   484  0000                     # 4228 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   485                           DDRE equ 0F96h ;# 
   486  0000                     # 4325 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   487                           OSCTUNE equ 0F9Bh ;# 
   488  0000                     # 4384 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   489                           PIE1 equ 0F9Dh ;# 
   490  0000                     # 4468 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   491                           PIR1 equ 0F9Eh ;# 
   492  0000                     # 4552 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   493                           IPR1 equ 0F9Fh ;# 
   494  0000                     # 4636 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   495                           PIE2 equ 0FA0h ;# 
   496  0000                     # 4707 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   497                           PIR2 equ 0FA1h ;# 
   498  0000                     # 4778 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   499                           IPR2 equ 0FA2h ;# 
   500  0000                     # 4849 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   501                           EECON1 equ 0FA6h ;# 
   502  0000                     # 4915 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   503                           EECON2 equ 0FA7h ;# 
   504  0000                     # 4922 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   505                           EEDATA equ 0FA8h ;# 
   506  0000                     # 4929 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   507                           EEADR equ 0FA9h ;# 
   508  0000                     # 4936 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   509                           RCSTA equ 0FABh ;# 
   510  0000                     # 4941 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   511                           RCSTA1 equ 0FABh ;# 
   512  0000                     # 5146 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   513                           TXSTA equ 0FACh ;# 
   514  0000                     # 5151 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   515                           TXSTA1 equ 0FACh ;# 
   516  0000                     # 5402 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   517                           TXREG equ 0FADh ;# 
   518  0000                     # 5407 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   519                           TXREG1 equ 0FADh ;# 
   520  0000                     # 5414 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   521                           RCREG equ 0FAEh ;# 
   522  0000                     # 5419 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   523                           RCREG1 equ 0FAEh ;# 
   524  0000                     # 5426 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   525                           SPBRG equ 0FAFh ;# 
   526  0000                     # 5431 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   527                           SPBRG1 equ 0FAFh ;# 
   528  0000                     # 5438 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   529                           SPBRGH equ 0FB0h ;# 
   530  0000                     # 5445 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   531                           T3CON equ 0FB1h ;# 
   532  0000                     # 5566 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   533                           TMR3 equ 0FB2h ;# 
   534  0000                     # 5573 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   535                           TMR3L equ 0FB2h ;# 
   536  0000                     # 5580 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   537                           TMR3H equ 0FB3h ;# 
   538  0000                     # 5587 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   539                           CMCON equ 0FB4h ;# 
   540  0000                     # 5677 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   541                           CVRCON equ 0FB5h ;# 
   542  0000                     # 5762 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   543                           ECCP1AS equ 0FB6h ;# 
   544  0000                     # 5767 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   545                           CCP1AS equ 0FB6h ;# 
   546  0000                     # 5924 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   547                           ECCP1DEL equ 0FB7h ;# 
   548  0000                     # 5929 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   549                           CCP1DEL equ 0FB7h ;# 
   550  0000                     # 6062 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   551                           BAUDCON equ 0FB8h ;# 
   552  0000                     # 6067 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   553                           BAUDCTL equ 0FB8h ;# 
   554  0000                     # 6242 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   555                           CCP2CON equ 0FBAh ;# 
   556  0000                     # 6306 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   557                           CCPR2 equ 0FBBh ;# 
   558  0000                     # 6313 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   559                           CCPR2L equ 0FBBh ;# 
   560  0000                     # 6320 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   561                           CCPR2H equ 0FBCh ;# 
   562  0000                     # 6327 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   563                           CCP1CON equ 0FBDh ;# 
   564  0000                     # 6332 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   565                           ECCP1CON equ 0FBDh ;# 
   566  0000                     # 6489 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   567                           CCPR1 equ 0FBEh ;# 
   568  0000                     # 6496 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   569                           CCPR1L equ 0FBEh ;# 
   570  0000                     # 6503 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   571                           CCPR1H equ 0FBFh ;# 
   572  0000                     # 6510 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   573                           ADCON2 equ 0FC0h ;# 
   574  0000                     # 6581 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   575                           ADCON1 equ 0FC1h ;# 
   576  0000                     # 6666 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   577                           ADCON0 equ 0FC2h ;# 
   578  0000                     # 6785 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   579                           ADRES equ 0FC3h ;# 
   580  0000                     # 6792 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   581                           ADRESL equ 0FC3h ;# 
   582  0000                     # 6799 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   583                           ADRESH equ 0FC4h ;# 
   584  0000                     # 6806 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   585                           SSPCON2 equ 0FC5h ;# 
   586  0000                     # 6868 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   587                           SSPCON1 equ 0FC6h ;# 
   588  0000                     # 6938 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   589                           SSPSTAT equ 0FC7h ;# 
   590  0000                     # 7186 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   591                           SSPADD equ 0FC8h ;# 
   592  0000                     # 7193 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   593                           SSPBUF equ 0FC9h ;# 
   594  0000                     # 7200 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   595                           T2CON equ 0FCAh ;# 
   596  0000                     # 7298 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   597                           PR2 equ 0FCBh ;# 
   598  0000                     # 7303 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   599                           MEMCON equ 0FCBh ;# 
   600  0000                     # 7408 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   601                           TMR2 equ 0FCCh ;# 
   602  0000                     # 7415 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   603                           T1CON equ 0FCDh ;# 
   604  0000                     # 7518 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   605                           TMR1 equ 0FCEh ;# 
   606  0000                     # 7525 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   607                           TMR1L equ 0FCEh ;# 
   608  0000                     # 7532 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   609                           TMR1H equ 0FCFh ;# 
   610  0000                     # 7539 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   611                           RCON equ 0FD0h ;# 
   612  0000                     # 7688 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   613                           WDTCON equ 0FD1h ;# 
   614  0000                     # 7716 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   615                           HLVDCON equ 0FD2h ;# 
   616  0000                     # 7721 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   617                           LVDCON equ 0FD2h ;# 
   618  0000                     # 7986 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   619                           OSCCON equ 0FD3h ;# 
   620  0000                     # 8069 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   621                           T0CON equ 0FD5h ;# 
   622  0000                     # 8139 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   623                           TMR0 equ 0FD6h ;# 
   624  0000                     # 8146 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   625                           TMR0L equ 0FD6h ;# 
   626  0000                     # 8153 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   627                           TMR0H equ 0FD7h ;# 
   628  0000                     # 8160 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   629                           STATUS equ 0FD8h ;# 
   630  0000                     # 8231 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   631                           FSR2 equ 0FD9h ;# 
   632  0000                     # 8238 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   633                           FSR2L equ 0FD9h ;# 
   634  0000                     # 8245 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   635                           FSR2H equ 0FDAh ;# 
   636  0000                     # 8252 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   637                           PLUSW2 equ 0FDBh ;# 
   638  0000                     # 8259 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   639                           PREINC2 equ 0FDCh ;# 
   640  0000                     # 8266 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   641                           POSTDEC2 equ 0FDDh ;# 
   642  0000                     # 8273 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   643                           POSTINC2 equ 0FDEh ;# 
   644  0000                     # 8280 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   645                           INDF2 equ 0FDFh ;# 
   646  0000                     # 8287 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   647                           BSR equ 0FE0h ;# 
   648  0000                     # 8294 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   649                           FSR1 equ 0FE1h ;# 
   650  0000                     # 8301 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   651                           FSR1L equ 0FE1h ;# 
   652  0000                     # 8308 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   653                           FSR1H equ 0FE2h ;# 
   654  0000                     # 8315 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   655                           PLUSW1 equ 0FE3h ;# 
   656  0000                     # 8322 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   657                           PREINC1 equ 0FE4h ;# 
   658  0000                     # 8329 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   659                           POSTDEC1 equ 0FE5h ;# 
   660  0000                     # 8336 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   661                           POSTINC1 equ 0FE6h ;# 
   662  0000                     # 8343 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   663                           INDF1 equ 0FE7h ;# 
   664  0000                     # 8350 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   665                           WREG equ 0FE8h ;# 
   666  0000                     # 8357 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   667                           FSR0 equ 0FE9h ;# 
   668  0000                     # 8364 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   669                           FSR0L equ 0FE9h ;# 
   670  0000                     # 8371 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   671                           FSR0H equ 0FEAh ;# 
   672  0000                     # 8378 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   673                           PLUSW0 equ 0FEBh ;# 
   674  0000                     # 8385 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   675                           PREINC0 equ 0FECh ;# 
   676  0000                     # 8392 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   677                           POSTDEC0 equ 0FEDh ;# 
   678  0000                     # 8399 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   679                           POSTINC0 equ 0FEEh ;# 
   680  0000                     # 8406 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   681                           INDF0 equ 0FEFh ;# 
   682  0000                     # 8413 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   683                           INTCON3 equ 0FF0h ;# 
   684  0000                     # 8505 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   685                           INTCON2 equ 0FF1h ;# 
   686  0000                     # 8582 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   687                           INTCON equ 0FF2h ;# 
   688  0000                     # 8699 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   689                           PROD equ 0FF3h ;# 
   690  0000                     # 8706 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   691                           PRODL equ 0FF3h ;# 
   692  0000                     # 8713 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   693                           PRODH equ 0FF4h ;# 
   694  0000                     # 8720 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   695                           TABLAT equ 0FF5h ;# 
   696  0000                     # 8729 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   697                           TBLPTR equ 0FF6h ;# 
   698  0000                     # 8736 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   699                           TBLPTRL equ 0FF6h ;# 
   700  0000                     # 8743 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   701                           TBLPTRH equ 0FF7h ;# 
   702  0000                     # 8750 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   703                           TBLPTRU equ 0FF8h ;# 
   704  0000                     # 8759 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   705                           PCLAT equ 0FF9h ;# 
   706  0000                     # 8766 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   707                           PC equ 0FF9h ;# 
   708  0000                     # 8773 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   709                           PCL equ 0FF9h ;# 
   710  0000                     # 8780 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   711                           PCLATH equ 0FFAh ;# 
   712  0000                     # 8787 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   713                           PCLATU equ 0FFBh ;# 
   714  0000                     # 8794 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   715                           STKPTR equ 0FFCh ;# 
   716  0000                     # 8870 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   717                           TOS equ 0FFDh ;# 
   718  0000                     # 8877 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   719                           TOSL equ 0FFDh ;# 
   720  0000                     # 8884 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   721                           TOSH equ 0FFEh ;# 
   722  0000                     # 8891 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4550.h"
   723                           TOSU equ 0FFFh ;# 
   724  0000                     	FNCALL	_main,_LEADC
   725                           	FNCALL	_main,_OpenXLCD
   726                           	FNCALL	_main,_WriteCmdXLCD
   727                           	FNCALL	_main,___awdiv
   728                           	FNCALL	_main,___wmul
   729                           	FNCALL	_main,_controleAgua
   730                           	FNCALL	_main,_controlePh
   731                           	FNCALL	_main,_controleTc
   732                           	FNCALL	_main,_putsXLCD
   733                           	FNCALL	_main,_sprintf
   734                           	FNCALL	_sprintf,___awdiv
   735                           	FNCALL	_sprintf,___fladd
   736                           	FNCALL	_sprintf,___flge
   737                           	FNCALL	_sprintf,___flmul
   738                           	FNCALL	_sprintf,___flneg
   739                           	FNCALL	_sprintf,___flsub
   740                           	FNCALL	_sprintf,___fltol
   741                           	FNCALL	_sprintf,___lldiv
   742                           	FNCALL	_sprintf,___llmod
   743                           	FNCALL	_sprintf,___wmul
   744                           	FNCALL	_sprintf,___xxtofl
   745                           	FNCALL	_sprintf,__div_to_l_
   746                           	FNCALL	_sprintf,__tdiv_to_l_
   747                           	FNCALL	_sprintf,_fround
   748                           	FNCALL	_sprintf,_isdigit
   749                           	FNCALL	_sprintf,_scale
   750                           	FNCALL	_scale,___awdiv
   751                           	FNCALL	_scale,___awmod
   752                           	FNCALL	_scale,___flmul
   753                           	FNCALL	_fround,___awdiv
   754                           	FNCALL	_fround,___awmod
   755                           	FNCALL	_fround,___flmul
   756                           	FNCALL	___flsub,___fladd
   757                           	FNCALL	_putsXLCD,_BusyXLCD
   758                           	FNCALL	_putsXLCD,_WriteDataXLCD
   759                           	FNCALL	_WriteDataXLCD,_DelayFor18TCY
   760                           	FNCALL	_OpenXLCD,_BusyXLCD
   761                           	FNCALL	_OpenXLCD,_DelayPORXLCD
   762                           	FNCALL	_OpenXLCD,_DelayXLCD
   763                           	FNCALL	_OpenXLCD,_SetDDRamAddr
   764                           	FNCALL	_OpenXLCD,_WriteCmdXLCD
   765                           	FNCALL	_WriteCmdXLCD,_DelayFor18TCY
   766                           	FNCALL	_SetDDRamAddr,_DelayFor18TCY
   767                           	FNCALL	_BusyXLCD,_DelayFor18TCY
   768                           	FNROOT	_main
   769                           	global	_limite_Tc
   770                           	global	_limite_UR
   771                           	global	_limite_Ph
   772                           psect	idataCOMRAM,class=CODE,space=0,delta=1,noexec
   773                           global __pidataCOMRAM
   774                           __pidataCOMRAM:
   775  0036F0                     	file	"newmain.c"
   776                           	line	23
   777                           
   778                           ;initializer for _limite_Tc
   779                           	dw	(01Eh)&0ffffh
   780  0036F0  001E               	line	22
   781                           
   782                           ;initializer for _limite_UR
   783                           	dw	(032h)&0ffffh
   784  0036F2  0032               psect	idataBANK0,class=CODE,space=0,delta=1,noexec
   785                           global __pidataBANK0
   786                           __pidataBANK0:
   787  0036F4                     	line	24
   788                           
   789                           ;initializer for _limite_Ph
   790                           	dw	(07h)&0ffffh
   791  0036F4  0007               	global	__powers_
   792                           psect	smallconst,class=SMALLCONST,space=0,reloc=2,noexec
   793                           global __psmallconst
   794                           __psmallconst:
   795  000800                     	db	0
   796  000800  00                 	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\powers.c"
   797                           	line	7
   798                           __powers_:
   799  000801                     	dw	(normalize32(1.0000000000000000) & 0ffffh)
   800  000801  0000               	dw	highword (normalize32(1.0000000000000000))
   801  000803  3F80               	dw	(normalize32(10.000000000000000) & 0ffffh)
   802  000805  0000               	dw	highword (normalize32(10.000000000000000))
   803  000807  4120               	dw	(normalize32(100.00000000000000) & 0ffffh)
   804  000809  0000               	dw	highword (normalize32(100.00000000000000))
   805  00080B  42C8               	dw	(normalize32(1000.0000000000000) & 0ffffh)
   806  00080D  0000               	dw	highword (normalize32(1000.0000000000000))
   807  00080F  447A               	dw	(normalize32(10000.000000000000) & 0ffffh)
   808  000811  4000               	dw	highword (normalize32(10000.000000000000))
   809  000813  461C               	dw	(normalize32(100000.00000000000) & 0ffffh)
   810  000815  5000               	dw	highword (normalize32(100000.00000000000))
   811  000817  47C3               	dw	(normalize32(1000000.0000000000) & 0ffffh)
   812  000819  2400               	dw	highword (normalize32(1000000.0000000000))
   813  00081B  4974               	dw	(normalize32(10000000.000000000) & 0ffffh)
   814  00081D  9680               	dw	highword (normalize32(10000000.000000000))
   815  00081F  4B18               	dw	(normalize32(100000000.00000000) & 0ffffh)
   816  000821  BC20               	dw	highword (normalize32(100000000.00000000))
   817  000823  4CBE               	dw	(normalize32(1000000000.0000000) & 0ffffh)
   818  000825  6B28               	dw	highword (normalize32(1000000000.0000000))
   819  000827  4E6E               	dw	(normalize32(10000000000.000000) & 0ffffh)
   820  000829  02F9               	dw	highword (normalize32(10000000000.000000))
   821  00082B  5015               	dw	(normalize32(1.0000000000000000e+020) & 0ffffh)
   822  00082D  78EC               	dw	highword (normalize32(1.0000000000000000e+020))
   823  00082F  60AD               	dw	(normalize32(1.0000000000000000e+030) & 0ffffh)
   824  000831  F2CA               	dw	highword (normalize32(1.0000000000000000e+030))
   825  000833  7149               	global __end_of__powers_
   826                           __end_of__powers_:
   827  000835                     	global	__npowers_
   828                           psect	smallconst
   829                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\powers.c"
   830                           	line	39
   831                           __npowers_:
   832  000835                     	dw	(normalize32(1.0000000000000000) & 0ffffh)
   833  000835  0000               	dw	highword (normalize32(1.0000000000000000))
   834  000837  3F80               	dw	(normalize32(0.10000000000000001) & 0ffffh)
   835  000839  CCCD               	dw	highword (normalize32(0.10000000000000001))
   836  00083B  3DCC               	dw	(normalize32(0.010000000000000000) & 0ffffh)
   837  00083D  D70A               	dw	highword (normalize32(0.010000000000000000))
   838  00083F  3C23               	dw	(normalize32(0.0010000000000000000) & 0ffffh)
   839  000841  126F               	dw	highword (normalize32(0.0010000000000000000))
   840  000843  3A83               	dw	(normalize32(0.00010000000000000000) & 0ffffh)
   841  000845  B717               	dw	highword (normalize32(0.00010000000000000000))
   842  000847  38D1               	dw	(normalize32(1.0000000000000001e-005) & 0ffffh)
   843  000849  C5AC               	dw	highword (normalize32(1.0000000000000001e-005))
   844  00084B  3727               	dw	(normalize32(9.9999999999999995e-007) & 0ffffh)
   845  00084D  37BD               	dw	highword (normalize32(9.9999999999999995e-007))
   846  00084F  3586               	dw	(normalize32(9.9999999999999995e-008) & 0ffffh)
   847  000851  BF95               	dw	highword (normalize32(9.9999999999999995e-008))
   848  000853  33D6               	dw	(normalize32(1.0000000000000000e-008) & 0ffffh)
   849  000855  CC77               	dw	highword (normalize32(1.0000000000000000e-008))
   850  000857  322B               	dw	(normalize32(1.0000000000000001e-009) & 0ffffh)
   851  000859  705F               	dw	highword (normalize32(1.0000000000000001e-009))
   852  00085B  3089               	dw	(normalize32(1.0000000000000000e-010) & 0ffffh)
   853  00085D  E6FF               	dw	highword (normalize32(1.0000000000000000e-010))
   854  00085F  2EDB               	dw	(normalize32(9.9999999999999995e-021) & 0ffffh)
   855  000861  E508               	dw	highword (normalize32(9.9999999999999995e-021))
   856  000863  1E3C               	dw	(normalize32(1.0000000000000001e-030) & 0ffffh)
   857  000865  4260               	dw	highword (normalize32(1.0000000000000001e-030))
   858  000867  0DA2               	global __end_of__npowers_
   859                           __end_of__npowers_:
   860  000869                     	global	_dpowers
   861                           psect	smallconst
   862                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
   863                           	line	354
   864                           _dpowers:
   865  000869                     	dw	(01h) & 0xffff
   866  000869  0001               	dw	highword(01h)
   867  00086B  0000               	dw	(0Ah) & 0xffff
   868  00086D  000A               	dw	highword(0Ah)
   869  00086F  0000               	dw	(064h) & 0xffff
   870  000871  0064               	dw	highword(064h)
   871  000873  0000               	dw	(03E8h) & 0xffff
   872  000875  03E8               	dw	highword(03E8h)
   873  000877  0000               	dw	(02710h) & 0xffff
   874  000879  2710               	dw	highword(02710h)
   875  00087B  0000               	dw	(0186A0h) & 0xffff
   876  00087D  86A0               	dw	highword(0186A0h)
   877  00087F  0001               	dw	(0F4240h) & 0xffff
   878  000881  4240               	dw	highword(0F4240h)
   879  000883  000F               	dw	(0989680h) & 0xffff
   880  000885  9680               	dw	highword(0989680h)
   881  000887  0098               	dw	(05F5E100h) & 0xffff
   882  000889  E100               	dw	highword(05F5E100h)
   883  00088B  05F5               	dw	(03B9ACA00h) & 0xffff
   884  00088D  CA00               	dw	highword(03B9ACA00h)
   885  00088F  3B9A               	global __end_of_dpowers
   886                           __end_of_dpowers:
   887  000891                     	global	__powers_
   888                           	global	__npowers_
   889                           	global	_dpowers
   890                           	global	_temp
   891                           	global	_ph
   892                           	global	_umidade
   893                           	global	_LATEbits
   894                           _LATEbits	set	0xF8D
   895  0000                     	global	_TRISEbits
   896                           _TRISEbits	set	0xF96
   897  0000                     	global	_TRISD
   898                           _TRISD	set	0xF95
   899  0000                     	global	_PORTD
   900                           _PORTD	set	0xF83
   901  0000                     	global	_ADCON2
   902                           _ADCON2	set	0xFC0
   903  0000                     	global	_ADCON1
   904                           _ADCON1	set	0xFC1
   905  0000                     	global	_TRISC
   906                           _TRISC	set	0xF94
   907  0000                     	global	_TRISA
   908                           _TRISA	set	0xF92
   909  0000                     	global	_PORTCbits
   910                           _PORTCbits	set	0xF82
   911  0000                     	global	_ADRESL
   912                           _ADRESL	set	0xFC3
   913  0000                     	global	_ADRESH
   914                           _ADRESH	set	0xFC4
   915  0000                     	global	_ADCON0bits
   916                           _ADCON0bits	set	0xFC2
   917  0000                     	
   918                           STR_1:
   919  000891                     	db	37
   920  000891  25                 	db	46
   921  000892  2E                 	db	48	;'0'
   922  000893  30                 	db	102	;'f'
   923  000894  66                 	db	37
   924  000895  25                 	db	37
   925  000896  25                 	db	0
   926  000897  00                 	
   927                           STR_3:
   928  000898                     	db	37
   929  000898  25                 	db	46
   930  000899  2E                 	db	48	;'0'
   931  00089A  30                 	db	102	;'f'
   932  00089B  66                 	db	67	;'C'
   933  00089C  43                 	db	0
   934  00089D  00                 	
   935                           STR_2:
   936  00089E                     	db	37
   937  00089E  25                 	db	46
   938  00089F  2E                 	db	48	;'0'
   939  0008A0  30                 	db	102	;'f'
   940  0008A1  66                 	db	0
   941  0008A2  00                 	
   942                           STR_4:
   943  0008A3                     	db	85	;'U'
   944  0008A3  55                 	db	82	;'R'
   945  0008A4  52                 	db	58	;':'
   946  0008A5  3A                 	db	0
   947  0008A6  00                 	
   948                           STR_5:
   949  0008A7                     	db	84	;'T'
   950  0008A7  54                 	db	99	;'c'
   951  0008A8  63                 	db	58	;':'
   952  0008A9  3A                 	db	0
   953  0008AA  00                 	
   954                           STR_6:
   955  0008AB                     	db	80	;'P'
   956  0008AB  50                 	db	104	;'h'
   957  0008AC  68                 	db	58	;':'
   958  0008AD  3A                 	db	0
   959  0008AE  00                 ; #config settings
   960                           global __CFG_FOSC$HS
   961                           __CFG_FOSC$HS equ 0x0
   962  0000                     global __CFG_WDT$OFF
   963                           __CFG_WDT$OFF equ 0x0
   964  0000                     global __CFG_PBADEN$OFF
   965                           __CFG_PBADEN$OFF equ 0x0
   966  0000                     global __CFG_LVP$OFF
   967                           __CFG_LVP$OFF equ 0x0
   968  0000                     	file	"C:\Users\Aluno\AppData\Local\Temp\s2jo."
   969                           	line	#
   970                           psect	cinit,class=CODE,delta=1,reloc=2
   971                           global __pcinit
   972                           __pcinit:
   973  0034BE                     global start_initialization
   974                           start_initialization:
   975  0034BE                     
   976                           global __initialization
   977                           __initialization:
   978  0034BE                     psect	dataCOMRAM,class=COMRAM,space=1,noexec
   979                           global __pdataCOMRAM
   980                           __pdataCOMRAM:
   981  00005B                     	file	"newmain.c"
   982                           	line	23
   983                           	global	_limite_Tc
   984                           _limite_Tc:
   985  00005B                            ds      2
   986  00005B                     psect	dataCOMRAM
   987                           	file	"newmain.c"
   988                           	line	22
   989                           	global	_limite_UR
   990                           _limite_UR:
   991  00005D                            ds      2
   992  00005D                     psect	bssBANK0,class=BANK0,space=1,noexec,lowdata
   993                           global __pbssBANK0
   994                           __pbssBANK0:
   995  0000AD                     	global	_temp
   996                           _temp:
   997  0000AD                            ds      2
   998  0000AD                     	global	_ph
   999                           _ph:
  1000  0000AF                            ds      2
  1001  0000AF                     	global	_umidade
  1002                           _umidade:
  1003  0000B1                            ds      2
  1004  0000B1                     psect	dataBANK0,class=BANK0,space=1,noexec,lowdata
  1005                           global __pdataBANK0
  1006                           __pdataBANK0:
  1007  0000B3                     	file	"newmain.c"
  1008                           	line	24
  1009                           	global	_limite_Ph
  1010                           _limite_Ph:
  1011  0000B3                            ds      2
  1012  0000B3                     	file	"C:\Users\Aluno\AppData\Local\Temp\s2jo."
  1013                           	line	#
  1014                           psect	cinit
  1015                           ; Initialize objects allocated to BANK0 (2 bytes)
  1016                           	global __pidataBANK0
  1017                           	; load TBLPTR registers with __pidataBANK0
  1018                           	movlw	low (__pidataBANK0)
  1019  0034BE  0EF4               	movwf	tblptrl
  1020  0034C0  6EF6               	movlw	high(__pidataBANK0)
  1021  0034C2  0E36               	movwf	tblptrh
  1022  0034C4  6EF7               	movlw	low highword(__pidataBANK0)
  1023  0034C6  0E00               	movwf	tblptru
  1024  0034C8  6EF8               	tblrd*+ ;fetch initializer
  1025  0034CA  0009               	movff	tablat, __pdataBANK0+0		
  1026  0034CC  CFF5 F0B3          	tblrd*+ ;fetch initializer
  1027  0034D0  0009               	movff	tablat, __pdataBANK0+1		
  1028  0034D2  CFF5 F0B4          ; Initialize objects allocated to COMRAM (4 bytes)
  1029                           	global __pidataCOMRAM
  1030                           	; load TBLPTR registers with __pidataCOMRAM
  1031                           	movlw	low (__pidataCOMRAM)
  1032  0034D6  0EF0               	movwf	tblptrl
  1033  0034D8  6EF6               	movlw	high(__pidataCOMRAM)
  1034  0034DA  0E36               	movwf	tblptrh
  1035  0034DC  6EF7               	movlw	low highword(__pidataCOMRAM)
  1036  0034DE  0E00               	movwf	tblptru
  1037  0034E0  6EF8               	lfsr	0,__pdataCOMRAM
  1038  0034E2  EE00  F05B         	lfsr	1,4
  1039  0034E6  EE10 F004          	copy_data0:
  1040  0034EA                     	tblrd	*+
  1041  0034EA  0009               	movff	tablat, postinc0
  1042  0034EC  CFF5 FFEE          	movf	postdec1,w
  1043  0034F0  50E5               	movf	fsr1l,w
  1044  0034F2  50E1               	bnz	copy_data0
  1045  0034F4  E1FA               	line	#
  1046                           ; Clear objects allocated to BANK0 (6 bytes)
  1047                           	global __pbssBANK0
  1048                           movlb	0
  1049  0034F6  0100               clrf	(__pbssBANK0+5)&0xffh,b
  1050  0034F8  6BB2               clrf	(__pbssBANK0+4)&0xffh,b
  1051  0034FA  6BB1               clrf	(__pbssBANK0+3)&0xffh,b
  1052  0034FC  6BB0               clrf	(__pbssBANK0+2)&0xffh,b
  1053  0034FE  6BAF               clrf	(__pbssBANK0+1)&0xffh,b
  1054  003500  6BAE               clrf	(__pbssBANK0+0)&0xffh,b
  1055  003502  6BAD               psect cinit,class=CODE,delta=1
  1056                           global end_of_initialization,__end_of__initialization
  1057                           
  1058                           ;End of C runtime variable initialization code
  1059                           
  1060                           end_of_initialization:
  1061  003504                     __end_of__initialization:
  1062  003504                     	GLOBAL	__Lmediumconst
  1063                           	movlw	low highword(__Lmediumconst)
  1064  003504  0E00               	movwf	tblptru
  1065  003506  6EF8               movlb 0
  1066  003508  0100               goto _main	;jump to C main() function
  1067  00350A  EF1E  F012         psect	cstackBANK0,class=BANK0,space=1,noexec
  1068                           global __pcstackBANK0
  1069                           __pcstackBANK0:
  1070  000060                     	global	_sprintf$958
  1071                           _sprintf$958:	; 4 bytes @ 0x0
  1072  000060                     	ds   4
  1073  000060                     	global	sprintf@ap
  1074                           sprintf@ap:	; 2 bytes @ 0x4
  1075  000064                     	ds   2
  1076  000064                     	global	sprintf@cp
  1077                           sprintf@cp:	; 2 bytes @ 0x6
  1078  000066                     	ds   2
  1079  000066                     	global	sprintf@len
  1080                           sprintf@len:	; 2 bytes @ 0x8
  1081  000068                     	ds   2
  1082  000068                     	global	sprintf@flag
  1083                           sprintf@flag:	; 2 bytes @ 0xA
  1084  00006A                     	ds   2
  1085  00006A                     	global	sprintf@val
  1086                           sprintf@val:	; 4 bytes @ 0xC
  1087  00006C                     	ds   4
  1088  00006C                     	global	sprintf@exp
  1089                           sprintf@exp:	; 2 bytes @ 0x10
  1090  000070                     	ds   2
  1091  000070                     	global	sprintf@tmpval
  1092                           sprintf@tmpval:	; 4 bytes @ 0x12
  1093  000072                     	ds   4
  1094  000072                     	global	sprintf@fval
  1095                           sprintf@fval:	; 4 bytes @ 0x16
  1096  000076                     	ds   4
  1097  000076                     	global	sprintf@prec
  1098                           sprintf@prec:	; 2 bytes @ 0x1A
  1099  00007A                     	ds   2
  1100  00007A                     	global	sprintf@c
  1101                           sprintf@c:	; 1 bytes @ 0x1C
  1102  00007C                     	ds   1
  1103  00007C                     	global	main@umidadeStr
  1104                           main@umidadeStr:	; 16 bytes @ 0x1D
  1105  00007D                     	ds   16
  1106  00007D                     	global	main@phStr
  1107                           main@phStr:	; 16 bytes @ 0x2D
  1108  00008D                     	ds   16
  1109  00008D                     	global	main@tempStr
  1110                           main@tempStr:	; 16 bytes @ 0x3D
  1111  00009D                     	ds   16
  1112  00009D                     psect	cstackCOMRAM,class=COMRAM,space=1,noexec
  1113                           global __pcstackCOMRAM
  1114                           __pcstackCOMRAM:
  1115  000001                     ?_isdigit:	; 1 bit 
  1116  000001                     ?___flge:	; 1 bit 
  1117  000001                     ?_OpenXLCD:	; 1 bytes @ 0x0
  1118  000001                     ?_WriteCmdXLCD:	; 1 bytes @ 0x0
  1119  000001                     ??_WriteCmdXLCD:	; 1 bytes @ 0x0
  1120  000001                     ?_BusyXLCD:	; 1 bytes @ 0x0
  1121  000001                     ??_BusyXLCD:	; 1 bytes @ 0x0
  1122  000001                     ?_SetDDRamAddr:	; 1 bytes @ 0x0
  1123  000001                     ??_SetDDRamAddr:	; 1 bytes @ 0x0
  1124  000001                     ??_isdigit:	; 1 bytes @ 0x0
  1125  000001                     ?_controleAgua:	; 1 bytes @ 0x0
  1126  000001                     ?_controlePh:	; 1 bytes @ 0x0
  1127  000001                     ?_controleTc:	; 1 bytes @ 0x0
  1128  000001                     ?_main:	; 1 bytes @ 0x0
  1129  000001                     ?_DelayFor18TCY:	; 1 bytes @ 0x0
  1130  000001                     ??_DelayFor18TCY:	; 1 bytes @ 0x0
  1131  000001                     ?_DelayPORXLCD:	; 1 bytes @ 0x0
  1132  000001                     ??_DelayPORXLCD:	; 1 bytes @ 0x0
  1133  000001                     ?_DelayXLCD:	; 1 bytes @ 0x0
  1134  000001                     ??_DelayXLCD:	; 1 bytes @ 0x0
  1135  000001                     ?_WriteDataXLCD:	; 1 bytes @ 0x0
  1136  000001                     ??_WriteDataXLCD:	; 1 bytes @ 0x0
  1137  000001                     	global	?_LEADC
  1138                           ?_LEADC:	; 2 bytes @ 0x0
  1139  000001                     	global	?___wmul
  1140                           ?___wmul:	; 2 bytes @ 0x0
  1141  000001                     	global	?___awmod
  1142                           ?___awmod:	; 2 bytes @ 0x0
  1143  000001                     	global	?__tdiv_to_l_
  1144                           ?__tdiv_to_l_:	; 4 bytes @ 0x0
  1145  000001                     	global	?__div_to_l_
  1146                           ?__div_to_l_:	; 4 bytes @ 0x0
  1147  000001                     	global	?___flneg
  1148                           ?___flneg:	; 4 bytes @ 0x0
  1149  000001                     	global	?___lldiv
  1150                           ?___lldiv:	; 4 bytes @ 0x0
  1151  000001                     	global	?___llmod
  1152                           ?___llmod:	; 4 bytes @ 0x0
  1153  000001                     	global	?___xxtofl
  1154                           ?___xxtofl:	; 4 bytes @ 0x0
  1155  000001                     	global	SetDDRamAddr@DDaddr
  1156                           SetDDRamAddr@DDaddr:	; 1 bytes @ 0x0
  1157  000001                     	global	WriteCmdXLCD@cmd
  1158                           WriteCmdXLCD@cmd:	; 1 bytes @ 0x0
  1159  000001                     	global	WriteDataXLCD@data
  1160                           WriteDataXLCD@data:	; 1 bytes @ 0x0
  1161  000001                     	global	controleAgua@UR
  1162                           controleAgua@UR:	; 2 bytes @ 0x0
  1163  000001                     	global	controlePh@Ph
  1164                           controlePh@Ph:	; 2 bytes @ 0x0
  1165  000001                     	global	controleTc@Tc
  1166                           controleTc@Tc:	; 2 bytes @ 0x0
  1167  000001                     	global	___wmul@multiplier
  1168                           ___wmul@multiplier:	; 2 bytes @ 0x0
  1169  000001                     	global	___awmod@dividend
  1170                           ___awmod@dividend:	; 2 bytes @ 0x0
  1171  000001                     	global	__div_to_l_@f1
  1172                           __div_to_l_@f1:	; 4 bytes @ 0x0
  1173  000001                     	global	___flge@ff1
  1174                           ___flge@ff1:	; 4 bytes @ 0x0
  1175  000001                     	global	___flneg@f1
  1176                           ___flneg@f1:	; 4 bytes @ 0x0
  1177  000001                     	global	__tdiv_to_l_@f1
  1178                           __tdiv_to_l_@f1:	; 4 bytes @ 0x0
  1179  000001                     	global	___lldiv@dividend
  1180                           ___lldiv@dividend:	; 4 bytes @ 0x0
  1181  000001                     	global	___llmod@dividend
  1182                           ___llmod@dividend:	; 4 bytes @ 0x0
  1183  000001                     	global	___xxtofl@val
  1184                           ___xxtofl@val:	; 4 bytes @ 0x0
  1185  000001                     	ds   1
  1186  000001                     ??_OpenXLCD:	; 1 bytes @ 0x1
  1187  000002                     ?_putsXLCD:	; 1 bytes @ 0x1
  1188  000002                     	global	OpenXLCD@lcdtype
  1189                           OpenXLCD@lcdtype:	; 1 bytes @ 0x1
  1190  000002                     	global	_isdigit$600
  1191                           _isdigit$600:	; 1 bytes @ 0x1
  1192  000002                     	global	putsXLCD@buffer
  1193                           putsXLCD@buffer:	; 2 bytes @ 0x1
  1194  000002                     	ds   1
  1195  000002                     ??_LEADC:	; 1 bytes @ 0x2
  1196  000003                     ??_controleAgua:	; 1 bytes @ 0x2
  1197  000003                     ??_controlePh:	; 1 bytes @ 0x2
  1198  000003                     ??_controleTc:	; 1 bytes @ 0x2
  1199  000003                     	global	isdigit@c
  1200                           isdigit@c:	; 1 bytes @ 0x2
  1201  000003                     	global	___wmul@multiplicand
  1202                           ___wmul@multiplicand:	; 2 bytes @ 0x2
  1203  000003                     	global	___awmod@divisor
  1204                           ___awmod@divisor:	; 2 bytes @ 0x2
  1205  000003                     	ds   1
  1206  000003                     ??_putsXLCD:	; 1 bytes @ 0x3
  1207  000004                     	ds   1
  1208  000004                     ??___wmul:	; 1 bytes @ 0x4
  1209  000005                     ??___awmod:	; 1 bytes @ 0x4
  1210  000005                     ??___flneg:	; 1 bytes @ 0x4
  1211  000005                     ??___xxtofl:	; 1 bytes @ 0x4
  1212  000005                     	global	LEADC@channel
  1213                           LEADC@channel:	; 1 bytes @ 0x4
  1214  000005                     	global	___awmod@counter
  1215                           ___awmod@counter:	; 1 bytes @ 0x4
  1216  000005                     	global	___wmul@product
  1217                           ___wmul@product:	; 2 bytes @ 0x4
  1218  000005                     	global	__div_to_l_@f2
  1219                           __div_to_l_@f2:	; 4 bytes @ 0x4
  1220  000005                     	global	___flge@ff2
  1221                           ___flge@ff2:	; 4 bytes @ 0x4
  1222  000005                     	global	__tdiv_to_l_@f2
  1223                           __tdiv_to_l_@f2:	; 4 bytes @ 0x4
  1224  000005                     	global	___lldiv@divisor
  1225                           ___lldiv@divisor:	; 4 bytes @ 0x4
  1226  000005                     	global	___llmod@divisor
  1227                           ___llmod@divisor:	; 4 bytes @ 0x4
  1228  000005                     	ds   1
  1229  000005                     	global	___awmod@sign
  1230                           ___awmod@sign:	; 1 bytes @ 0x5
  1231  000006                     	ds   1
  1232  000006                     	global	?___awdiv
  1233                           ?___awdiv:	; 2 bytes @ 0x6
  1234  000007                     	global	___awdiv@dividend
  1235                           ___awdiv@dividend:	; 2 bytes @ 0x6
  1236  000007                     	ds   2
  1237  000007                     ??__tdiv_to_l_:	; 1 bytes @ 0x8
  1238  000009                     ??__div_to_l_:	; 1 bytes @ 0x8
  1239  000009                     ??___flge:	; 1 bytes @ 0x8
  1240  000009                     ??___lldiv:	; 1 bytes @ 0x8
  1241  000009                     ??___llmod:	; 1 bytes @ 0x8
  1242  000009                     	global	___llmod@counter
  1243                           ___llmod@counter:	; 1 bytes @ 0x8
  1244  000009                     	global	___xxtofl@sign
  1245                           ___xxtofl@sign:	; 1 bytes @ 0x8
  1246  000009                     	global	___awdiv@divisor
  1247                           ___awdiv@divisor:	; 2 bytes @ 0x8
  1248  000009                     	global	__div_to_l_@quot
  1249                           __div_to_l_@quot:	; 4 bytes @ 0x8
  1250  000009                     	global	___lldiv@quotient
  1251                           ___lldiv@quotient:	; 4 bytes @ 0x8
  1252  000009                     	ds   1
  1253  000009                     	global	___xxtofl@exp
  1254                           ___xxtofl@exp:	; 1 bytes @ 0x9
  1255  00000A                     	ds   1
  1256  00000A                     ??___awdiv:	; 1 bytes @ 0xA
  1257  00000B                     	global	___awdiv@counter
  1258                           ___awdiv@counter:	; 1 bytes @ 0xA
  1259  00000B                     	global	___xxtofl@arg
  1260                           ___xxtofl@arg:	; 4 bytes @ 0xA
  1261  00000B                     	ds   1
  1262  00000B                     	global	___awdiv@sign
  1263                           ___awdiv@sign:	; 1 bytes @ 0xB
  1264  00000C                     	global	__tdiv_to_l_@quot
  1265                           __tdiv_to_l_@quot:	; 4 bytes @ 0xB
  1266  00000C                     	ds   1
  1267  00000C                     	global	__div_to_l_@cntr
  1268                           __div_to_l_@cntr:	; 1 bytes @ 0xC
  1269  00000D                     	global	___lldiv@counter
  1270                           ___lldiv@counter:	; 1 bytes @ 0xC
  1271  00000D                     	global	___awdiv@quotient
  1272                           ___awdiv@quotient:	; 2 bytes @ 0xC
  1273  00000D                     	ds   1
  1274  00000D                     	global	__div_to_l_@exp1
  1275                           __div_to_l_@exp1:	; 1 bytes @ 0xD
  1276  00000E                     	ds   1
  1277  00000E                     	global	?___flmul
  1278                           ?___flmul:	; 4 bytes @ 0xE
  1279  00000F                     	global	___flmul@b
  1280                           ___flmul@b:	; 4 bytes @ 0xE
  1281  00000F                     	ds   1
  1282  00000F                     	global	__tdiv_to_l_@cntr
  1283                           __tdiv_to_l_@cntr:	; 1 bytes @ 0xF
  1284  000010                     	ds   1
  1285  000010                     	global	__tdiv_to_l_@exp1
  1286                           __tdiv_to_l_@exp1:	; 1 bytes @ 0x10
  1287  000011                     	ds   2
  1288  000011                     	global	___flmul@a
  1289                           ___flmul@a:	; 4 bytes @ 0x12
  1290  000013                     	ds   4
  1291  000013                     ??___flmul:	; 1 bytes @ 0x16
  1292  000017                     	ds   4
  1293  000017                     	global	___flmul@sign
  1294                           ___flmul@sign:	; 1 bytes @ 0x1A
  1295  00001B                     	ds   1
  1296  00001B                     	global	___flmul@grs
  1297                           ___flmul@grs:	; 4 bytes @ 0x1B
  1298  00001C                     	ds   4
  1299  00001C                     	global	___flmul@aexp
  1300                           ___flmul@aexp:	; 1 bytes @ 0x1F
  1301  000020                     	ds   1
  1302  000020                     	global	___flmul@bexp
  1303                           ___flmul@bexp:	; 1 bytes @ 0x20
  1304  000021                     	ds   1
  1305  000021                     	global	___flmul@prod
  1306                           ___flmul@prod:	; 4 bytes @ 0x21
  1307  000022                     	ds   4
  1308  000022                     	global	___flmul@temp
  1309                           ___flmul@temp:	; 2 bytes @ 0x25
  1310  000026                     	ds   2
  1311  000026                     	global	?_fround
  1312                           ?_fround:	; 4 bytes @ 0x27
  1313  000028                     	global	?_scale
  1314                           ?_scale:	; 4 bytes @ 0x27
  1315  000028                     	ds   4
  1316  000028                     ??_fround:	; 1 bytes @ 0x2B
  1317  00002C                     ??_scale:	; 1 bytes @ 0x2B
  1318  00002C                     	global	_fround$956
  1319                           _fround$956:	; 4 bytes @ 0x2B
  1320  00002C                     	global	_scale$957
  1321                           _scale$957:	; 4 bytes @ 0x2B
  1322  00002C                     	ds   4
  1323  00002C                     	global	scale@scl
  1324                           scale@scl:	; 1 bytes @ 0x2F
  1325  000030                     	global	_fround$955
  1326                           _fround$955:	; 4 bytes @ 0x2F
  1327  000030                     	ds   1
  1328  000030                     	global	?___fltol
  1329                           ?___fltol:	; 4 bytes @ 0x30
  1330  000031                     	global	___fltol@f1
  1331                           ___fltol@f1:	; 4 bytes @ 0x30
  1332  000031                     	ds   3
  1333  000031                     	global	fround@prec
  1334                           fround@prec:	; 1 bytes @ 0x33
  1335  000034                     	ds   1
  1336  000034                     ??___fltol:	; 1 bytes @ 0x34
  1337  000035                     	global	?___fladd
  1338                           ?___fladd:	; 4 bytes @ 0x34
  1339  000035                     	global	___fladd@b
  1340                           ___fladd@b:	; 4 bytes @ 0x34
  1341  000035                     	ds   4
  1342  000035                     	global	___fltol@sign1
  1343                           ___fltol@sign1:	; 1 bytes @ 0x38
  1344  000039                     	global	___fladd@a
  1345                           ___fladd@a:	; 4 bytes @ 0x38
  1346  000039                     	ds   1
  1347  000039                     	global	___fltol@exp1
  1348                           ___fltol@exp1:	; 1 bytes @ 0x39
  1349  00003A                     	ds   3
  1350  00003A                     ??___fladd:	; 1 bytes @ 0x3C
  1351  00003D                     	ds   8
  1352  00003D                     	global	___fladd@signs
  1353                           ___fladd@signs:	; 1 bytes @ 0x44
  1354  000045                     	ds   1
  1355  000045                     	global	___fladd@aexp
  1356                           ___fladd@aexp:	; 1 bytes @ 0x45
  1357  000046                     	ds   1
  1358  000046                     	global	___fladd@bexp
  1359                           ___fladd@bexp:	; 1 bytes @ 0x46
  1360  000047                     	ds   1
  1361  000047                     	global	___fladd@grs
  1362                           ___fladd@grs:	; 1 bytes @ 0x47
  1363  000048                     	ds   1
  1364  000048                     	global	?___flsub
  1365                           ?___flsub:	; 4 bytes @ 0x48
  1366  000049                     	global	___flsub@b
  1367                           ___flsub@b:	; 4 bytes @ 0x48
  1368  000049                     	ds   4
  1369  000049                     	global	___flsub@a
  1370                           ___flsub@a:	; 4 bytes @ 0x4C
  1371  00004D                     	ds   4
  1372  00004D                     ??___flsub:	; 1 bytes @ 0x50
  1373  000051                     	global	?_sprintf
  1374                           ?_sprintf:	; 2 bytes @ 0x50
  1375  000051                     	global	sprintf@sp
  1376                           sprintf@sp:	; 2 bytes @ 0x50
  1377  000051                     	ds   2
  1378  000051                     	global	sprintf@f
  1379                           sprintf@f:	; 2 bytes @ 0x52
  1380  000053                     	ds   4
  1381  000053                     ??_sprintf:	; 1 bytes @ 0x56
  1382  000057                     	ds   2
  1383  000057                     ??_main:	; 1 bytes @ 0x58
  1384  000059                     	ds   2
  1385  000059                     ;!
  1386                           ;!Data Sizes:
  1387                           ;!    Strings     30
  1388                           ;!    Constant    144
  1389                           ;!    Data        6
  1390                           ;!    BSS         6
  1391                           ;!    Persistent  0
  1392                           ;!    Stack       0
  1393                           ;!
  1394                           ;!Auto Spaces:
  1395                           ;!    Space          Size  Autos    Used
  1396                           ;!    COMRAM           95     90      94
  1397                           ;!    BANK0           160     77      85
  1398                           ;!    BANK1           256      0       0
  1399                           ;!    BANK2           256      0       0
  1400                           ;!    BANK3           256      0       0
  1401                           ;!    BANK4           256      0       0
  1402                           ;!    BANK5           256      0       0
  1403                           ;!    BANK6           256      0       0
  1404                           ;!    BANK7           256      0       0
  1405                           
  1406                           ;!
  1407                           ;!Pointer List with Targets:
  1408                           ;!
  1409                           ;!    sprintf@cp	PTR const unsigned char  size(2) Largest target is 1
  1410                           ;!		 -> sprintf@c(BANK0[1]), 
  1411                           ;!
  1412                           ;!    sprintf@f	PTR const unsigned char  size(2) Largest target is 7
  1413                           ;!		 -> STR_3(CODE[6]), STR_2(CODE[5]), STR_1(CODE[7]), 
  1414                           ;!
  1415                           ;!    sprintf@sp	PTR unsigned char  size(2) Largest target is 16
  1416                           ;!		 -> main@tempStr(BANK0[16]), main@phStr(BANK0[16]), main@umidadeStr(BANK0[16]), 
  1417                           ;!
  1418                           ;!    sprintf@ap	PTR void [1] size(2) Largest target is 2
  1419                           ;!		 -> ?_sprintf(COMRAM[2]), 
  1420                           ;!
  1421                           ;!    putsXLCD@buffer	PTR unsigned char  size(2) Largest target is 16
  1422                           ;!		 -> STR_6(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), main@tempStr(BANK0[16]), 
  1423                           ;!		 -> main@phStr(BANK0[16]), main@umidadeStr(BANK0[16]), 
  1424                           ;!
  1425                           
  1426                           
  1427                           ;!
  1428                           ;!Critical Paths under _main in COMRAM
  1429                           ;!
  1430                           ;!    _main->_sprintf
  1431                           ;!    _sprintf->___flsub
  1432                           ;!    _scale->___flmul
  1433                           ;!    _fround->___flmul
  1434                           ;!    ___flmul->___awdiv
  1435                           ;!    ___awdiv->___awmod
  1436                           ;!    ___awdiv->___wmul
  1437                           ;!    ___fltol->_scale
  1438                           ;!    ___flsub->___fladd
  1439                           ;!    ___fladd->_fround
  1440                           ;!    _putsXLCD->_WriteDataXLCD
  1441                           ;!    _OpenXLCD->_DelayPORXLCD
  1442                           ;!    _OpenXLCD->_DelayXLCD
  1443                           ;!    _OpenXLCD->_SetDDRamAddr
  1444                           ;!    _OpenXLCD->_WriteCmdXLCD
  1445                           ;!
  1446                           ;!Critical Paths under _main in BANK0
  1447                           ;!
  1448                           ;!    _main->_sprintf
  1449                           ;!
  1450                           ;!Critical Paths under _main in BANK1
  1451                           ;!
  1452                           ;!    None.
  1453                           ;!
  1454                           ;!Critical Paths under _main in BANK2
  1455                           ;!
  1456                           ;!    None.
  1457                           ;!
  1458                           ;!Critical Paths under _main in BANK3
  1459                           ;!
  1460                           ;!    None.
  1461                           ;!
  1462                           ;!Critical Paths under _main in BANK4
  1463                           ;!
  1464                           ;!    None.
  1465                           ;!
  1466                           ;!Critical Paths under _main in BANK5
  1467                           ;!
  1468                           ;!    None.
  1469                           ;!
  1470                           ;!Critical Paths under _main in BANK6
  1471                           ;!
  1472                           ;!    None.
  1473                           ;!
  1474                           ;!Critical Paths under _main in BANK7
  1475                           ;!
  1476                           ;!    None.
  1477                           
  1478 ;;
  1479 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1480 ;;
  1481                           
  1482                           ;!
  1483                           ;!Call Graph Tables:
  1484                           ;!
  1485                           ;! ---------------------------------------------------------------------------------
  1486                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1487                           ;! ---------------------------------------------------------------------------------
  1488                           ;! (0) _main                                                50    50      0   38747
  1489                           ;!                                             88 COMRAM     2     2      0
  1490                           ;!                                             29 BANK0     48    48      0
  1491                           ;!                              _LEADC
  1492                           ;!                           _OpenXLCD
  1493                           ;!                       _WriteCmdXLCD
  1494                           ;!                            ___awdiv
  1495                           ;!                             ___wmul
  1496                           ;!                       _controleAgua
  1497                           ;!                         _controlePh
  1498                           ;!                         _controleTc
  1499                           ;!                           _putsXLCD
  1500                           ;!                            _sprintf
  1501                           ;! ---------------------------------------------------------------------------------
  1502                           ;! (1) _sprintf                                             40    34      6   34273
  1503                           ;!                                             80 COMRAM     8     2      6
  1504                           ;!                                              0 BANK0     29    29      0
  1505                           ;!                            ___awdiv
  1506                           ;!                            ___fladd
  1507                           ;!                             ___flge
  1508                           ;!                            ___flmul
  1509                           ;!                            ___flneg
  1510                           ;!                            ___flsub
  1511                           ;!                            ___fltol
  1512                           ;!                            ___lldiv
  1513                           ;!                            ___llmod
  1514                           ;!                             ___wmul
  1515                           ;!                           ___xxtofl
  1516                           ;!                         __div_to_l_
  1517                           ;!                        __tdiv_to_l_
  1518                           ;!                             _fround
  1519                           ;!                            _isdigit
  1520                           ;!                              _scale
  1521                           ;! ---------------------------------------------------------------------------------
  1522                           ;! (2) _scale                                                9     5      4    8103
  1523                           ;!                                             39 COMRAM     9     5      4
  1524                           ;!                            ___awdiv
  1525                           ;!                            ___awmod
  1526                           ;!                            ___flmul
  1527                           ;! ---------------------------------------------------------------------------------
  1528                           ;! (2) _isdigit                                              3     3      0      68
  1529                           ;!                                              0 COMRAM     3     3      0
  1530                           ;! ---------------------------------------------------------------------------------
  1531                           ;! (2) _fround                                              13     9      4    7905
  1532                           ;!                                             39 COMRAM    13     9      4
  1533                           ;!                            ___awdiv
  1534                           ;!                            ___awmod
  1535                           ;!                            ___flmul
  1536                           ;! ---------------------------------------------------------------------------------
  1537                           ;! (3) ___flmul                                             25    17      8    3720
  1538                           ;!                                             14 COMRAM    25    17      8
  1539                           ;!                            ___awdiv (ARG)
  1540                           ;!                            ___awmod (ARG)
  1541                           ;! ---------------------------------------------------------------------------------
  1542                           ;! (3) ___awmod                                              6     2      4    1664
  1543                           ;!                                              0 COMRAM     6     2      4
  1544                           ;! ---------------------------------------------------------------------------------
  1545                           ;! (3) ___awdiv                                              8     4      4    2276
  1546                           ;!                                              6 COMRAM     8     4      4
  1547                           ;!                            ___awmod (ARG)
  1548                           ;!                             ___wmul (ARG)
  1549                           ;! ---------------------------------------------------------------------------------
  1550                           ;! (2) __tdiv_to_l_                                         17     9      8     455
  1551                           ;!                                              0 COMRAM    17     9      8
  1552                           ;! ---------------------------------------------------------------------------------
  1553                           ;! (2) __div_to_l_                                          14     6      8     455
  1554                           ;!                                              0 COMRAM    14     6      8
  1555                           ;! ---------------------------------------------------------------------------------
  1556                           ;! (2) ___xxtofl                                            14    10      4     398
  1557                           ;!                                              0 COMRAM    14    10      4
  1558                           ;! ---------------------------------------------------------------------------------
  1559                           ;! (2) ___wmul                                               6     2      4     919
  1560                           ;!                                              0 COMRAM     6     2      4
  1561                           ;! ---------------------------------------------------------------------------------
  1562                           ;! (2) ___llmod                                              9     1      8     615
  1563                           ;!                                              0 COMRAM     9     1      8
  1564                           ;! ---------------------------------------------------------------------------------
  1565                           ;! (2) ___lldiv                                             13     5      8     466
  1566                           ;!                                              0 COMRAM    13     5      8
  1567                           ;! ---------------------------------------------------------------------------------
  1568                           ;! (2) ___fltol                                             10     6      4     457
  1569                           ;!                                             48 COMRAM    10     6      4
  1570                           ;!                            ___flmul (ARG)
  1571                           ;!                              _scale (ARG)
  1572                           ;! ---------------------------------------------------------------------------------
  1573                           ;! (2) ___flsub                                              8     0      8    2737
  1574                           ;!                                             72 COMRAM     8     0      8
  1575                           ;!                            ___fladd
  1576                           ;!                           ___xxtofl (ARG)
  1577                           ;! ---------------------------------------------------------------------------------
  1578                           ;! (3) ___fladd                                             20    12      8    2414
  1579                           ;!                                             52 COMRAM    20    12      8
  1580                           ;!                             _fround (ARG)
  1581                           ;! ---------------------------------------------------------------------------------
  1582                           ;! (2) ___flneg                                              4     0      4     121
  1583                           ;!                                              0 COMRAM     4     0      4
  1584                           ;! ---------------------------------------------------------------------------------
  1585                           ;! (2) ___flge                                              12     4      8     638
  1586                           ;!                                              0 COMRAM    12     4      8
  1587                           ;! ---------------------------------------------------------------------------------
  1588                           ;! (1) _putsXLCD                                             2     0      2     545
  1589                           ;!                                              1 COMRAM     2     0      2
  1590                           ;!                           _BusyXLCD
  1591                           ;!                      _WriteDataXLCD
  1592                           ;! ---------------------------------------------------------------------------------
  1593                           ;! (2) _WriteDataXLCD                                        1     1      0      44
  1594                           ;!                                              0 COMRAM     1     1      0
  1595                           ;!                      _DelayFor18TCY
  1596                           ;! ---------------------------------------------------------------------------------
  1597                           ;! (1) _controleTc                                           3     1      2     120
  1598                           ;!                                              0 COMRAM     3     1      2
  1599                           ;! ---------------------------------------------------------------------------------
  1600                           ;! (1) _controlePh                                           3     1      2     120
  1601                           ;!                                              0 COMRAM     3     1      2
  1602                           ;! ---------------------------------------------------------------------------------
  1603                           ;! (1) _controleAgua                                         3     1      2     120
  1604                           ;!                                              0 COMRAM     3     1      2
  1605                           ;! ---------------------------------------------------------------------------------
  1606                           ;! (1) _OpenXLCD                                             1     1      0     110
  1607                           ;!                                              1 COMRAM     1     1      0
  1608                           ;!                           _BusyXLCD
  1609                           ;!                       _DelayPORXLCD
  1610                           ;!                          _DelayXLCD
  1611                           ;!                       _SetDDRamAddr
  1612                           ;!                       _WriteCmdXLCD
  1613                           ;! ---------------------------------------------------------------------------------
  1614                           ;! (1) _WriteCmdXLCD                                         1     1      0      44
  1615                           ;!                                              0 COMRAM     1     1      0
  1616                           ;!                      _DelayFor18TCY
  1617                           ;! ---------------------------------------------------------------------------------
  1618                           ;! (2) _SetDDRamAddr                                         1     1      0      44
  1619                           ;!                                              0 COMRAM     1     1      0
  1620                           ;!                      _DelayFor18TCY
  1621                           ;! ---------------------------------------------------------------------------------
  1622                           ;! (2) _DelayXLCD                                            1     1      0       0
  1623                           ;!                                              0 COMRAM     1     1      0
  1624                           ;! ---------------------------------------------------------------------------------
  1625                           ;! (2) _DelayPORXLCD                                         1     1      0       0
  1626                           ;!                                              0 COMRAM     1     1      0
  1627                           ;! ---------------------------------------------------------------------------------
  1628                           ;! (2) _BusyXLCD                                             0     0      0       0
  1629                           ;!                      _DelayFor18TCY
  1630                           ;! ---------------------------------------------------------------------------------
  1631                           ;! (3) _DelayFor18TCY                                        0     0      0       0
  1632                           ;! ---------------------------------------------------------------------------------
  1633                           ;! (1) _LEADC                                                5     3      2      22
  1634                           ;!                                              0 COMRAM     5     3      2
  1635                           ;! ---------------------------------------------------------------------------------
  1636                           ;! Estimated maximum stack depth 3
  1637                           ;! ---------------------------------------------------------------------------------
  1638                           ;!
  1639                           ;! Call Graph Graphs:
  1640                           ;!
  1641                           ;! _main (ROOT)
  1642                           ;!   _LEADC
  1643                           ;!   _OpenXLCD
  1644                           ;!     _BusyXLCD
  1645                           ;!       _DelayFor18TCY
  1646                           ;!     _DelayPORXLCD
  1647                           ;!     _DelayXLCD
  1648                           ;!     _SetDDRamAddr
  1649                           ;!       _DelayFor18TCY
  1650                           ;!     _WriteCmdXLCD
  1651                           ;!       _DelayFor18TCY
  1652                           ;!   _WriteCmdXLCD
  1653                           ;!     _DelayFor18TCY
  1654                           ;!   ___awdiv
  1655                           ;!     ___awmod (ARG)
  1656                           ;!     ___wmul (ARG)
  1657                           ;!   ___wmul
  1658                           ;!   _controleAgua
  1659                           ;!   _controlePh
  1660                           ;!   _controleTc
  1661                           ;!   _putsXLCD
  1662                           ;!     _BusyXLCD
  1663                           ;!       _DelayFor18TCY
  1664                           ;!     _WriteDataXLCD
  1665                           ;!       _DelayFor18TCY
  1666                           ;!   _sprintf
  1667                           ;!     ___awdiv
  1668                           ;!       ___awmod (ARG)
  1669                           ;!       ___wmul (ARG)
  1670                           ;!     ___fladd
  1671                           ;!       _fround (ARG)
  1672                           ;!         ___awdiv
  1673                           ;!           ___awmod (ARG)
  1674                           ;!           ___wmul (ARG)
  1675                           ;!         ___awmod
  1676                           ;!         ___flmul
  1677                           ;!           ___awdiv (ARG)
  1678                           ;!             ___awmod (ARG)
  1679                           ;!             ___wmul (ARG)
  1680                           ;!           ___awmod (ARG)
  1681                           ;!     ___flge
  1682                           ;!     ___flmul
  1683                           ;!       ___awdiv (ARG)
  1684                           ;!         ___awmod (ARG)
  1685                           ;!         ___wmul (ARG)
  1686                           ;!       ___awmod (ARG)
  1687                           ;!     ___flneg
  1688                           ;!     ___flsub
  1689                           ;!       ___fladd
  1690                           ;!         _fround (ARG)
  1691                           ;!           ___awdiv
  1692                           ;!             ___awmod (ARG)
  1693                           ;!             ___wmul (ARG)
  1694                           ;!           ___awmod
  1695                           ;!           ___flmul
  1696                           ;!             ___awdiv (ARG)
  1697                           ;!               ___awmod (ARG)
  1698                           ;!               ___wmul (ARG)
  1699                           ;!             ___awmod (ARG)
  1700                           ;!       ___xxtofl (ARG)
  1701                           ;!     ___fltol
  1702                           ;!       ___flmul (ARG)
  1703                           ;!         ___awdiv (ARG)
  1704                           ;!           ___awmod (ARG)
  1705                           ;!           ___wmul (ARG)
  1706                           ;!         ___awmod (ARG)
  1707                           ;!       _scale (ARG)
  1708                           ;!         ___awdiv
  1709                           ;!           ___awmod (ARG)
  1710                           ;!           ___wmul (ARG)
  1711                           ;!         ___awmod
  1712                           ;!         ___flmul
  1713                           ;!           ___awdiv (ARG)
  1714                           ;!             ___awmod (ARG)
  1715                           ;!             ___wmul (ARG)
  1716                           ;!           ___awmod (ARG)
  1717                           ;!     ___lldiv
  1718                           ;!     ___llmod
  1719                           ;!     ___wmul
  1720                           ;!     ___xxtofl
  1721                           ;!     __div_to_l_
  1722                           ;!     __tdiv_to_l_
  1723                           ;!     _fround
  1724                           ;!       ___awdiv
  1725                           ;!         ___awmod (ARG)
  1726                           ;!         ___wmul (ARG)
  1727                           ;!       ___awmod
  1728                           ;!       ___flmul
  1729                           ;!         ___awdiv (ARG)
  1730                           ;!           ___awmod (ARG)
  1731                           ;!           ___wmul (ARG)
  1732                           ;!         ___awmod (ARG)
  1733                           ;!     _isdigit
  1734                           ;!     _scale
  1735                           ;!       ___awdiv
  1736                           ;!         ___awmod (ARG)
  1737                           ;!         ___wmul (ARG)
  1738                           ;!       ___awmod
  1739                           ;!       ___flmul
  1740                           ;!         ___awdiv (ARG)
  1741                           ;!           ___awmod (ARG)
  1742                           ;!           ___wmul (ARG)
  1743                           ;!         ___awmod (ARG)
  1744                           ;!
  1745                           
  1746                           ;! Address spaces:
  1747                           
  1748                           ;!Name               Size   Autos  Total    Cost      Usage
  1749                           ;!BIGRAM             7FF      0       0      21        0.0%
  1750                           ;!EEDATA             100      0       0       0        0.0%
  1751                           ;!BITBANK7           100      0       0      18        0.0%
  1752                           ;!BANK7              100      0       0      19        0.0%
  1753                           ;!BITBANK6           100      0       0      16        0.0%
  1754                           ;!BANK6              100      0       0      17        0.0%
  1755                           ;!BITBANK5           100      0       0      14        0.0%
  1756                           ;!BANK5              100      0       0      15        0.0%
  1757                           ;!BITBANK4           100      0       0      12        0.0%
  1758                           ;!BANK4              100      0       0      13        0.0%
  1759                           ;!BITBANK3           100      0       0      10        0.0%
  1760                           ;!BANK3              100      0       0      11        0.0%
  1761                           ;!BITBANK2           100      0       0       8        0.0%
  1762                           ;!BANK2              100      0       0       9        0.0%
  1763                           ;!BITBANK1           100      0       0       6        0.0%
  1764                           ;!BANK1              100      0       0       7        0.0%
  1765                           ;!BITBANK0            A0      0       0       4        0.0%
  1766                           ;!BANK0               A0     4D      55       5       53.1%
  1767                           ;!BITCOMRAM           5F      0       0       0        0.0%
  1768                           ;!COMRAM              5F     5A      5E       1       98.9%
  1769                           ;!BITSFR               0      0       0     200        0.0%
  1770                           ;!SFR                  0      0       0     200        0.0%
  1771                           ;!STACK                0      0       0       2        0.0%
  1772                           ;!NULL                 0      0       0       0        0.0%
  1773                           ;!ABS                  0      0      B3      20        0.0%
  1774                           ;!DATA                 0      0      B3       3        0.0%
  1775                           ;!CODE                 0      0       0       0        0.0%
  1776                           
  1777                           	global	_main
  1778                           
  1779 ;; *************** function _main *****************
  1780 ;; Defined at:
  1781 ;;		line 58 in file "newmain.c"
  1782 ;; Parameters:    Size  Location     Type
  1783 ;;		None
  1784 ;; Auto vars:     Size  Location     Type
  1785 ;;  tempStr        16   61[BANK0 ] unsigned char [16]
  1786 ;;  phStr          16   45[BANK0 ] unsigned char [16]
  1787 ;;  umidadeStr     16   29[BANK0 ] unsigned char [16]
  1788 ;; Return value:  Size  Location     Type
  1789 ;;                  1    wreg      void 
  1790 ;; Registers used:
  1791 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1792 ;; Tracked objects:
  1793 ;;		On entry : 0/0
  1794 ;;		On exit  : 0/0
  1795 ;;		Unchanged: 0/0
  1796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1797 ;;      Params:         0       0       0       0       0       0       0       0       0
  1798 ;;      Locals:         0      48       0       0       0       0       0       0       0
  1799 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1800 ;;      Totals:         2      48       0       0       0       0       0       0       0
  1801 ;;Total ram usage:       50 bytes
  1802 ;; Hardware stack levels required when called:    3
  1803 ;; This function calls:
  1804 ;;		_LEADC
  1805 ;;		_OpenXLCD
  1806 ;;		_WriteCmdXLCD
  1807 ;;		___awdiv
  1808 ;;		___wmul
  1809 ;;		_controleAgua
  1810 ;;		_controlePh
  1811 ;;		_controleTc
  1812 ;;		_putsXLCD
  1813 ;;		_sprintf
  1814 ;; This function is called by:
  1815 ;;		Startup code after reset
  1816 ;; This function uses a non-reentrant model
  1817 ;;
  1818                           psect	text0,class=CODE,space=0,reloc=2,group=0
  1819                           	file	"newmain.c"
  1820                           	line	58
  1821                           global __ptext0
  1822                           __ptext0:
  1823  00243C                     psect	text0
  1824                           	file	"newmain.c"
  1825                           	line	58
  1826                           	global	__size_of_main
  1827                           	__size_of_main	equ	__end_of_main-_main
  1828  0000                     	
  1829                           _main:
  1830  00243C                     ;incstack = 0
  1831                           	opt	stack 28
  1832                           	line	60
  1833                           	
  1834                           l3491:
  1835  00243C                     ;newmain.c: 60: TRISA = 0xFF;
  1836                           	setf	((c:3986)),c	;volatile
  1837  00243C  6892               	line	61
  1838                           	
  1839                           l3493:
  1840  00243E                     ;newmain.c: 61: TRISC = 0x00;
  1841                           	movlw	low(0)
  1842  00243E  0E00               	movwf	((c:3988)),c	;volatile
  1843  002440  6E94               	line	63
  1844                           	
  1845                           l3495:
  1846  002442                     ;newmain.c: 63: ADCON0bits.ADON = 1;
  1847                           	bsf	((c:4034)),c,0	;volatile
  1848  002442  80C2               	line	64
  1849                           ;newmain.c: 64: ADCON1 = 0x0D;
  1850                           	movlw	low(0Dh)
  1851  002444  0E0D               	movwf	((c:4033)),c	;volatile
  1852  002446  6EC1               	line	65
  1853                           ;newmain.c: 65: ADCON2 = 0xA9;
  1854                           	movlw	low(0A9h)
  1855  002448  0EA9               	movwf	((c:4032)),c	;volatile
  1856  00244A  6EC0               	line	67
  1857                           	
  1858                           l3497:
  1859  00244C                     ;newmain.c: 67: OpenXLCD(0b00101100 & 0b00111000);
  1860                           	movlw	(028h)&0ffh
  1861  00244C  0E28               	
  1862                           	call	_OpenXLCD
  1863  00244E  EC11  F017         	line	68
  1864                           	
  1865                           l3499:
  1866  002452                     ;newmain.c: 68: WriteCmdXLCD(0x01);
  1867                           	movlw	(01h)&0ffh
  1868  002452  0E01               	
  1869                           	call	_WriteCmdXLCD
  1870  002454  ECEF  F01A         	line	69
  1871                           	
  1872                           l3501:
  1873  002458                     ;newmain.c: 69: _delay((unsigned long)((10)*(20000000/4000.0)));
  1874                           	opt asmopt_push
  1875                           opt asmopt_off
  1876                           movlw	65
  1877  002458  0E41               movwf	(??_main+0+0)&0ffh,c,f
  1878  00245A  6E59               	movlw	238
  1879  00245C  0EEE               u3617:
  1880  00245E                     decfsz	wreg,f
  1881  00245E  2EE8               	bra	u3617
  1882  002460  D7FE               	decfsz	(??_main+0+0)&0ffh,c,f
  1883  002462  2E59               	bra	u3617
  1884  002464  D7FC               	nop2
  1885  002466  D000               opt asmopt_pop
  1886                           
  1887                           	goto	l3503
  1888  002468  EF36  F012         	line	71
  1889                           ;newmain.c: 71: while(1){
  1890                           	
  1891                           l73:
  1892  00246C                     	line	73
  1893                           	
  1894                           l3503:
  1895  00246C                     ;newmain.c: 73: umidade = LEADC(0);
  1896                           	movlw	(0)&0ffh
  1897  00246C  0E00               	
  1898                           	call	_LEADC
  1899  00246E  EC36  F01A         	movff	0+?_LEADC,(_umidade)
  1900  002472  C001  F0B1         	movff	1+?_LEADC,(_umidade+1)
  1901  002476  C002  F0B2         	line	74
  1902                           	
  1903                           l3505:
  1904  00247A                     ;newmain.c: 74: temp = LEADC(1);
  1905                           	movlw	(01h)&0ffh
  1906  00247A  0E01               	
  1907                           	call	_LEADC
  1908  00247C  EC36  F01A         	movff	0+?_LEADC,(_temp)
  1909  002480  C001  F0AD         	movff	1+?_LEADC,(_temp+1)
  1910  002484  C002  F0AE         	line	75
  1911                           	
  1912                           l3507:
  1913  002488                     ;newmain.c: 75: ph = LEADC(2);
  1914                           	movlw	(02h)&0ffh
  1915  002488  0E02               	
  1916                           	call	_LEADC
  1917  00248A  EC36  F01A         	movff	0+?_LEADC,(_ph)
  1918  00248E  C001  F0AF         	movff	1+?_LEADC,(_ph+1)
  1919  002492  C002  F0B0         	line	76
  1920                           	
  1921                           l3509:
  1922  002496                     ;newmain.c: 76: umidade = (umidade*100)/1023;
  1923                           	movff	(_umidade),(c:___wmul@multiplier)
  1924  002496  C0B1  F001         	movff	(_umidade+1),(c:___wmul@multiplier+1)
  1925  00249A  C0B2  F002         	movlw	high(064h)
  1926  00249E  0E00               	movwf	((c:___wmul@multiplicand+1)),c
  1927  0024A0  6E04               	movlw	low(064h)
  1928  0024A2  0E64               	movwf	((c:___wmul@multiplicand)),c
  1929  0024A4  6E03               	call	___wmul	;wreg free
  1930  0024A6  EC4D  F01B         	movff	0+?___wmul,(c:___awdiv@dividend)
  1931  0024AA  C001  F007         	movff	1+?___wmul,(c:___awdiv@dividend+1)
  1932  0024AE  C002  F008         	movlw	high(03FFh)
  1933  0024B2  0E03               	movwf	((c:___awdiv@divisor+1)),c
  1934  0024B4  6E0A               	setf	((c:___awdiv@divisor)),c
  1935  0024B6  6809               	call	___awdiv	;wreg free
  1936  0024B8  ECB4  F017         	movff	0+?___awdiv,(_umidade)
  1937  0024BC  C007  F0B1         	movff	1+?___awdiv,(_umidade+1)
  1938  0024C0  C008  F0B2         	line	77
  1939                           	
  1940                           l3511:
  1941  0024C4                     ;newmain.c: 77: ph = (ph*14)/1023;
  1942                           	movff	(_ph),(c:___wmul@multiplier)
  1943  0024C4  C0AF  F001         	movff	(_ph+1),(c:___wmul@multiplier+1)
  1944  0024C8  C0B0  F002         	movlw	high(0Eh)
  1945  0024CC  0E00               	movwf	((c:___wmul@multiplicand+1)),c
  1946  0024CE  6E04               	movlw	low(0Eh)
  1947  0024D0  0E0E               	movwf	((c:___wmul@multiplicand)),c
  1948  0024D2  6E03               	call	___wmul	;wreg free
  1949  0024D4  EC4D  F01B         	movff	0+?___wmul,(c:___awdiv@dividend)
  1950  0024D8  C001  F007         	movff	1+?___wmul,(c:___awdiv@dividend+1)
  1951  0024DC  C002  F008         	movlw	high(03FFh)
  1952  0024E0  0E03               	movwf	((c:___awdiv@divisor+1)),c
  1953  0024E2  6E0A               	setf	((c:___awdiv@divisor)),c
  1954  0024E4  6809               	call	___awdiv	;wreg free
  1955  0024E6  ECB4  F017         	movff	0+?___awdiv,(_ph)
  1956  0024EA  C007  F0AF         	movff	1+?___awdiv,(_ph+1)
  1957  0024EE  C008  F0B0         	line	78
  1958                           	
  1959                           l3513:
  1960  0024F2                     ;newmain.c: 78: temp = (temp*30)/1023;
  1961                           	movff	(_temp),(c:___wmul@multiplier)
  1962  0024F2  C0AD  F001         	movff	(_temp+1),(c:___wmul@multiplier+1)
  1963  0024F6  C0AE  F002         	movlw	high(01Eh)
  1964  0024FA  0E00               	movwf	((c:___wmul@multiplicand+1)),c
  1965  0024FC  6E04               	movlw	low(01Eh)
  1966  0024FE  0E1E               	movwf	((c:___wmul@multiplicand)),c
  1967  002500  6E03               	call	___wmul	;wreg free
  1968  002502  EC4D  F01B         	movff	0+?___wmul,(c:___awdiv@dividend)
  1969  002506  C001  F007         	movff	1+?___wmul,(c:___awdiv@dividend+1)
  1970  00250A  C002  F008         	movlw	high(03FFh)
  1971  00250E  0E03               	movwf	((c:___awdiv@divisor+1)),c
  1972  002510  6E0A               	setf	((c:___awdiv@divisor)),c
  1973  002512  6809               	call	___awdiv	;wreg free
  1974  002514  ECB4  F017         	movff	0+?___awdiv,(_temp)
  1975  002518  C007  F0AD         	movff	1+?___awdiv,(_temp+1)
  1976  00251C  C008  F0AE         	line	86
  1977                           	
  1978                           l3515:
  1979  002520                     ;newmain.c: 81: char umidadeStr[16];
  1980                           ;newmain.c: 82: char phStr[16];
  1981                           ;newmain.c: 83: char tempStr[16];
  1982                           ;newmain.c: 86: sprintf(umidadeStr, "%.0f%%", umidade);
  1983                           		movlw	low(main@umidadeStr)
  1984  002520  0E7D               	movwf	((c:sprintf@sp)),c
  1985  002522  6E51               	movlw	high(main@umidadeStr)
  1986  002524  0E00               	movwf	((c:sprintf@sp+1)),c
  1987  002526  6E52               
  1988                           		movlw	low(STR_1)
  1989  002528  0E91               	movwf	((c:sprintf@f)),c
  1990  00252A  6E53               	movlw	high(STR_1)
  1991  00252C  0E08               	movwf	((c:sprintf@f+1)),c
  1992  00252E  6E54               
  1993                           	movff	(_umidade),0+((c:?_sprintf)+04h)
  1994  002530  C0B1  F055         	movff	(_umidade+1),1+((c:?_sprintf)+04h)
  1995  002534  C0B2  F056         	call	_sprintf	;wreg free
  1996  002538  EC58  F004         	line	87
  1997                           	
  1998                           l3517:
  1999  00253C                     ;newmain.c: 87: sprintf(phStr, "%.0f", ph);
  2000                           		movlw	low(main@phStr)
  2001  00253C  0E8D               	movwf	((c:sprintf@sp)),c
  2002  00253E  6E51               	movlw	high(main@phStr)
  2003  002540  0E00               	movwf	((c:sprintf@sp+1)),c
  2004  002542  6E52               
  2005                           		movlw	low(STR_2)
  2006  002544  0E9E               	movwf	((c:sprintf@f)),c
  2007  002546  6E53               	movlw	high(STR_2)
  2008  002548  0E08               	movwf	((c:sprintf@f+1)),c
  2009  00254A  6E54               
  2010                           	movff	(_ph),0+((c:?_sprintf)+04h)
  2011  00254C  C0AF  F055         	movff	(_ph+1),1+((c:?_sprintf)+04h)
  2012  002550  C0B0  F056         	call	_sprintf	;wreg free
  2013  002554  EC58  F004         	line	88
  2014                           	
  2015                           l3519:
  2016  002558                     ;newmain.c: 88: sprintf(tempStr, "%.0fC", temp);
  2017                           		movlw	low(main@tempStr)
  2018  002558  0E9D               	movwf	((c:sprintf@sp)),c
  2019  00255A  6E51               	movlw	high(main@tempStr)
  2020  00255C  0E00               	movwf	((c:sprintf@sp+1)),c
  2021  00255E  6E52               
  2022                           		movlw	low(STR_3)
  2023  002560  0E98               	movwf	((c:sprintf@f)),c
  2024  002562  6E53               	movlw	high(STR_3)
  2025  002564  0E08               	movwf	((c:sprintf@f+1)),c
  2026  002566  6E54               
  2027                           	movff	(_temp),0+((c:?_sprintf)+04h)
  2028  002568  C0AD  F055         	movff	(_temp+1),1+((c:?_sprintf)+04h)
  2029  00256C  C0AE  F056         	call	_sprintf	;wreg free
  2030  002570  EC58  F004         	line	90
  2031                           	
  2032                           l3521:
  2033  002574                     ;newmain.c: 90: WriteCmdXLCD(0x80);
  2034                           	movlw	(080h)&0ffh
  2035  002574  0E80               	
  2036                           	call	_WriteCmdXLCD
  2037  002576  ECEF  F01A         	line	91
  2038                           	
  2039                           l3523:
  2040  00257A                     ;newmain.c: 91: putsXLCD ("UR:");
  2041                           		movlw	low(STR_4)
  2042  00257A  0EA3               	movwf	((c:putsXLCD@buffer)),c
  2043  00257C  6E02               	movlw	high(STR_4)
  2044  00257E  0E08               	movwf	((c:putsXLCD@buffer+1)),c
  2045  002580  6E03               
  2046                           	call	_putsXLCD	;wreg free
  2047  002582  EC40  F019         	line	92
  2048                           	
  2049                           l3525:
  2050  002586                     ;newmain.c: 92: WriteCmdXLCD(0xC0);
  2051                           	movlw	(0C0h)&0ffh
  2052  002586  0EC0               	
  2053                           	call	_WriteCmdXLCD
  2054  002588  ECEF  F01A         	line	93
  2055                           	
  2056                           l3527:
  2057  00258C                     ;newmain.c: 93: putsXLCD(umidadeStr);
  2058                           		movlw	low(main@umidadeStr)
  2059  00258C  0E7D               	movwf	((c:putsXLCD@buffer)),c
  2060  00258E  6E02               	movlw	high(main@umidadeStr)
  2061  002590  0E00               	movwf	((c:putsXLCD@buffer+1)),c
  2062  002592  6E03               
  2063                           	call	_putsXLCD	;wreg free
  2064  002594  EC40  F019         	line	95
  2065                           	
  2066                           l3529:
  2067  002598                     ;newmain.c: 95: WriteCmdXLCD(0x86);
  2068                           	movlw	(086h)&0ffh
  2069  002598  0E86               	
  2070                           	call	_WriteCmdXLCD
  2071  00259A  ECEF  F01A         	line	96
  2072                           	
  2073                           l3531:
  2074  00259E                     ;newmain.c: 96: putsXLCD ("Tc:");
  2075                           		movlw	low(STR_5)
  2076  00259E  0EA7               	movwf	((c:putsXLCD@buffer)),c
  2077  0025A0  6E02               	movlw	high(STR_5)
  2078  0025A2  0E08               	movwf	((c:putsXLCD@buffer+1)),c
  2079  0025A4  6E03               
  2080                           	call	_putsXLCD	;wreg free
  2081  0025A6  EC40  F019         	line	97
  2082                           	
  2083                           l3533:
  2084  0025AA                     ;newmain.c: 97: WriteCmdXLCD(0xC6);
  2085                           	movlw	(0C6h)&0ffh
  2086  0025AA  0EC6               	
  2087                           	call	_WriteCmdXLCD
  2088  0025AC  ECEF  F01A         	line	98
  2089                           	
  2090                           l3535:
  2091  0025B0                     ;newmain.c: 98: putsXLCD(tempStr);
  2092                           		movlw	low(main@tempStr)
  2093  0025B0  0E9D               	movwf	((c:putsXLCD@buffer)),c
  2094  0025B2  6E02               	movlw	high(main@tempStr)
  2095  0025B4  0E00               	movwf	((c:putsXLCD@buffer+1)),c
  2096  0025B6  6E03               
  2097                           	call	_putsXLCD	;wreg free
  2098  0025B8  EC40  F019         	line	100
  2099                           	
  2100                           l3537:
  2101  0025BC                     ;newmain.c: 100: WriteCmdXLCD(0x8C);
  2102                           	movlw	(08Ch)&0ffh
  2103  0025BC  0E8C               	
  2104                           	call	_WriteCmdXLCD
  2105  0025BE  ECEF  F01A         	line	101
  2106                           	
  2107                           l3539:
  2108  0025C2                     ;newmain.c: 101: putsXLCD ("Ph:");
  2109                           		movlw	low(STR_6)
  2110  0025C2  0EAB               	movwf	((c:putsXLCD@buffer)),c
  2111  0025C4  6E02               	movlw	high(STR_6)
  2112  0025C6  0E08               	movwf	((c:putsXLCD@buffer+1)),c
  2113  0025C8  6E03               
  2114                           	call	_putsXLCD	;wreg free
  2115  0025CA  EC40  F019         	line	102
  2116                           	
  2117                           l3541:
  2118  0025CE                     ;newmain.c: 102: WriteCmdXLCD(0xCC);
  2119                           	movlw	(0CCh)&0ffh
  2120  0025CE  0ECC               	
  2121                           	call	_WriteCmdXLCD
  2122  0025D0  ECEF  F01A         	line	103
  2123                           	
  2124                           l3543:
  2125  0025D4                     ;newmain.c: 103: putsXLCD(phStr);
  2126                           		movlw	low(main@phStr)
  2127  0025D4  0E8D               	movwf	((c:putsXLCD@buffer)),c
  2128  0025D6  6E02               	movlw	high(main@phStr)
  2129  0025D8  0E00               	movwf	((c:putsXLCD@buffer+1)),c
  2130  0025DA  6E03               
  2131                           	call	_putsXLCD	;wreg free
  2132  0025DC  EC40  F019         	line	105
  2133                           	
  2134                           l3545:
  2135  0025E0                     ;newmain.c: 105: controleAgua(umidade);
  2136                           	movff	(_umidade),(c:controleAgua@UR)
  2137  0025E0  C0B1  F001         	movff	(_umidade+1),(c:controleAgua@UR+1)
  2138  0025E4  C0B2  F002         	call	_controleAgua	;wreg free
  2139  0025E8  ECDE  F019         	line	106
  2140                           	
  2141                           l3547:
  2142  0025EC                     ;newmain.c: 106: controlePh(ph);
  2143                           	movff	(_ph),(c:controlePh@Ph)
  2144  0025EC  C0AF  F001         	movff	(_ph+1),(c:controlePh@Ph+1)
  2145  0025F0  C0B0  F002         	call	_controlePh	;wreg free
  2146  0025F4  EC83  F019         	line	107
  2147                           	
  2148                           l3549:
  2149  0025F8                     ;newmain.c: 107: controleTc(temp);
  2150                           	movff	(_temp),(c:controleTc@Tc)
  2151  0025F8  C0AD  F001         	movff	(_temp+1),(c:controleTc@Tc+1)
  2152  0025FC  C0AE  F002         	call	_controleTc	;wreg free
  2153  002600  ECB1  F019         	line	109
  2154                           	
  2155                           l3551:
  2156  002604                     ;newmain.c: 109: _delay((unsigned long)((500)*(20000000/4000.0)));
  2157                           	opt asmopt_push
  2158                           opt asmopt_off
  2159                           movlw  13
  2160  002604  0E0D               movwf	(??_main+0+0+1)&0ffh,c,f
  2161  002606  6E5A               movlw	175
  2162  002608  0EAF               movwf	(??_main+0+0)&0ffh,c,f
  2163  00260A  6E59               	movlw	182
  2164  00260C  0EB6               u3627:
  2165  00260E                     decfsz	wreg,f
  2166  00260E  2EE8               	bra	u3627
  2167  002610  D7FE               	decfsz	(??_main+0+0)&0ffh,c,f
  2168  002612  2E59               	bra	u3627
  2169  002614  D7FC               	decfsz	(??_main+0+0+1)&0ffh,c,f
  2170  002616  2E5A               	bra	u3627
  2171  002618  D7FA               	nop2
  2172  00261A  D000               opt asmopt_pop
  2173                           
  2174                           	goto	l3503
  2175  00261C  EF36  F012         	line	110
  2176                           	
  2177                           l74:
  2178  002620                     	line	71
  2179                           	goto	l3503
  2180  002620  EF36  F012         	
  2181                           l75:
  2182  002624                     	line	111
  2183                           	
  2184                           l76:
  2185  002624                     	global	start
  2186                           	goto	start
  2187  002624  EF00  F000         	opt stack 0
  2188                           GLOBAL	__end_of_main
  2189                           	__end_of_main:
  2190  002628                     	signat	_main,89
  2191                           	global	_sprintf
  2192                           
  2193 ;; *************** function _sprintf *****************
  2194 ;; Defined at:
  2195 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  2196 ;; Parameters:    Size  Location     Type
  2197 ;;  sp              2   80[COMRAM] PTR unsigned char 
  2198 ;;		 -> main@tempStr(16), main@phStr(16), main@umidadeStr(16), 
  2199 ;;  f               2   82[COMRAM] PTR const unsigned char 
  2200 ;;		 -> STR_3(6), STR_2(5), STR_1(7), 
  2201 ;; Auto vars:     Size  Location     Type
  2202 ;;  fval            4   22[BANK0 ] PTR const unsigned char 
  2203 ;;  tmpval          4   18[BANK0 ] struct .
  2204 ;;  val             4   12[BANK0 ] unsigned long 
  2205 ;;  prec            2   26[BANK0 ] int 
  2206 ;;  exp             2   16[BANK0 ] int 
  2207 ;;  flag            2   10[BANK0 ] unsigned short 
  2208 ;;  len             2    8[BANK0 ] unsigned int 
  2209 ;;  cp              2    6[BANK0 ] PTR const unsigned char 
  2210 ;;		 -> sprintf@c(1), 
  2211 ;;  ap              2    4[BANK0 ] PTR void [1]
  2212 ;;		 -> ?_sprintf(2), 
  2213 ;;  width           2    0        int 
  2214 ;;  c               1   28[BANK0 ] char 
  2215 ;;  d               1    0        unsigned char 
  2216 ;; Return value:  Size  Location     Type
  2217 ;;                  2   80[COMRAM] int 
  2218 ;; Registers used:
  2219 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2220 ;; Tracked objects:
  2221 ;;		On entry : 0/0
  2222 ;;		On exit  : 0/0
  2223 ;;		Unchanged: 0/0
  2224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2225 ;;      Params:         6       0       0       0       0       0       0       0       0
  2226 ;;      Locals:         0      29       0       0       0       0       0       0       0
  2227 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2228 ;;      Totals:         8      29       0       0       0       0       0       0       0
  2229 ;;Total ram usage:       37 bytes
  2230 ;; Hardware stack levels used:    1
  2231 ;; Hardware stack levels required when called:    2
  2232 ;; This function calls:
  2233 ;;		___awdiv
  2234 ;;		___fladd
  2235 ;;		___flge
  2236 ;;		___flmul
  2237 ;;		___flneg
  2238 ;;		___flsub
  2239 ;;		___fltol
  2240 ;;		___lldiv
  2241 ;;		___llmod
  2242 ;;		___wmul
  2243 ;;		___xxtofl
  2244 ;;		__div_to_l_
  2245 ;;		__tdiv_to_l_
  2246 ;;		_fround
  2247 ;;		_isdigit
  2248 ;;		_scale
  2249 ;; This function is called by:
  2250 ;;		_main
  2251 ;; This function uses a non-reentrant model
  2252 ;;
  2253                           psect	text1,class=CODE,space=0,reloc=2,group=0
  2254                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  2255                           	line	492
  2256                           global __ptext1
  2257                           __ptext1:
  2258  0008B0                     psect	text1
  2259                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  2260                           	line	492
  2261                           	global	__size_of_sprintf
  2262                           	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  2263  0000                     	
  2264                           _sprintf:
  2265  0008B0                     ;incstack = 0
  2266                           	opt	stack 28
  2267                           	line	533
  2268                           	
  2269                           l3257:
  2270  0008B0                     ;doprnt.c: 494: va_list ap;
  2271                           ;doprnt.c: 499: signed char c;
  2272                           ;doprnt.c: 501: int width;
  2273                           ;doprnt.c: 504: int prec;
  2274                           ;doprnt.c: 508: unsigned short flag;
  2275                           ;doprnt.c: 515: char d;
  2276                           ;doprnt.c: 516: double fval;
  2277                           ;doprnt.c: 517: int exp;
  2278                           ;doprnt.c: 523: union {
  2279                           ;doprnt.c: 524: unsigned long vd;
  2280                           ;doprnt.c: 525: double integ;
  2281                           ;doprnt.c: 526: } tmpval;
  2282                           ;doprnt.c: 528: unsigned long val;
  2283                           ;doprnt.c: 529: unsigned len;
  2284                           ;doprnt.c: 530: const char * cp;
  2285                           ;doprnt.c: 533: *ap = __va_start();
  2286                           		movlw	low(?_sprintf+04h)
  2287  0008B0  0E55               	movlb	0	; () banked
  2288  0008B2  0100               	movwf	((sprintf@ap))&0ffh
  2289  0008B4  6F64               	movlw	high(?_sprintf+04h)
  2290  0008B6  0E00               	movwf	((sprintf@ap+1))&0ffh
  2291  0008B8  6F65               
  2292                           	line	536
  2293                           ;doprnt.c: 536: while(c = *f++) {
  2294                           	goto	l3475
  2295  0008BA  EF5D  F009         	
  2296                           l202:; BSR set to: 0
  2297  0008BE                     
  2298                           	line	538
  2299                           	
  2300                           l3259:; BSR set to: 0
  2301  0008BE                     
  2302                           ;doprnt.c: 538: if(c != '%')
  2303                           		movlw	37
  2304  0008BE  0E25               	xorwf	((sprintf@c))&0ffh,w
  2305  0008C0  197C               	btfsc	status,2
  2306  0008C2  B4D8               	goto	u3201
  2307  0008C4  EF66  F004         	goto	u3200
  2308  0008C8  EF68  F004         
  2309                           u3201:
  2310  0008CC                     	goto	l3265
  2311  0008CC  EF72  F004         u3200:
  2312  0008D0                     	line	541
  2313                           	
  2314                           l3261:; BSR set to: 0
  2315  0008D0                     
  2316                           ;doprnt.c: 540: {
  2317                           ;doprnt.c: 541: ((*sp++ = (c)));
  2318                           	movff	(c:sprintf@sp),fsr2l
  2319  0008D0  C051  FFD9         	movff	(c:sprintf@sp+1),fsr2h
  2320  0008D4  C052  FFDA         	movff	(sprintf@c),indf2
  2321  0008D8  C07C  FFDF         
  2322                           	
  2323                           l3263:; BSR set to: 0
  2324  0008DC                     
  2325                           	infsnz	((c:sprintf@sp)),c
  2326  0008DC  4A51               	incf	((c:sprintf@sp+1)),c
  2327  0008DE  2A52               	line	542
  2328                           ;doprnt.c: 542: continue;
  2329                           	goto	l3475
  2330  0008E0  EF5D  F009         	line	543
  2331                           	
  2332                           l203:; BSR set to: 0
  2333  0008E4                     
  2334                           	line	548
  2335                           	
  2336                           l3265:; BSR set to: 0
  2337  0008E4                     
  2338                           ;doprnt.c: 543: }
  2339                           ;doprnt.c: 548: flag = 0;
  2340                           	movlw	high(0)
  2341  0008E4  0E00               	movwf	((sprintf@flag+1))&0ffh
  2342  0008E6  6F6B               	movlw	low(0)
  2343  0008E8  0E00               	movwf	((sprintf@flag))&0ffh
  2344  0008EA  6F6A               	line	611
  2345                           	
  2346                           l3267:; BSR set to: 0
  2347  0008EC                     
  2348                           ;doprnt.c: 611: if(*f == '.') {
  2349                           	movff	(c:sprintf@f),tblptrl
  2350  0008EC  C053  FFF6         	movff	(c:sprintf@f+1),tblptrh
  2351  0008F0  C054  FFF7         	if	0	;tblptru may be non-zero
  2352  0008F4                     	clrf	tblptru
  2354  0008F4                     	if	0	;tblptru may be non-zero
  2355  0008F4                     	global __mediumconst
  2356                           movlw	low highword(__mediumconst)
  2359  0008F4                     	tblrd	*
  2360  0008F4  0008               	
  2361                           	movf	tablat,w
  2362  0008F6  50F5               	xorlw	02Eh
  2363  0008F8  0A2E               	btfss	status,2
  2364  0008FA  A4D8               	goto	u3211
  2365  0008FC  EF82  F004         	goto	u3210
  2366  000900  EF84  F004         u3211:
  2367  000904                     	goto	l3279
  2368  000904  EFBE  F004         u3210:
  2369  000908                     	line	612
  2370                           	
  2371                           l3269:; BSR set to: 0
  2372  000908                     
  2373                           ;doprnt.c: 612: flag |= 0x4000;
  2374                           	bsf	(0+(14/8)+(sprintf@flag))&0ffh,(14)&7
  2375  000908  8D6B               	line	613
  2376                           ;doprnt.c: 613: f++;
  2377                           	infsnz	((c:sprintf@f)),c
  2378  00090A  4A53               	incf	((c:sprintf@f+1)),c
  2379  00090C  2A54               	line	621
  2380                           	
  2381                           l3271:; BSR set to: 0
  2382  00090E                     
  2383                           ;doprnt.c: 620: {
  2384                           ;doprnt.c: 621: prec = 0;
  2385                           	movlw	high(0)
  2386  00090E  0E00               	movwf	((sprintf@prec+1))&0ffh
  2387  000910  6F7B               	movlw	low(0)
  2388  000912  0E00               	movwf	((sprintf@prec))&0ffh
  2389  000914  6F7A               	line	622
  2390                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  2391                           	goto	l3277
  2392  000916  EFAB  F004         	
  2393                           l206:; BSR set to: 0
  2394  00091A                     
  2395                           	line	623
  2396                           	
  2397                           l3273:
  2398  00091A                     ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  2399                           	movff	(sprintf@prec),(c:___wmul@multiplier)
  2400  00091A  C07A  F001         	movff	(sprintf@prec+1),(c:___wmul@multiplier+1)
  2401  00091E  C07B  F002         	movlw	high(0Ah)
  2402  000922  0E00               	movwf	((c:___wmul@multiplicand+1)),c
  2403  000924  6E04               	movlw	low(0Ah)
  2404  000926  0E0A               	movwf	((c:___wmul@multiplicand)),c
  2405  000928  6E03               	call	___wmul	;wreg free
  2406  00092A  EC4D  F01B         	movff	(c:sprintf@f),tblptrl
  2407  00092E  C053  FFF6         	movff	(c:sprintf@f+1),tblptrh
  2408  000932  C054  FFF7         	if	0	;tblptru may be non-zero
  2409  000936                     	clrf	tblptru
  2411  000936                     	if	0	;tblptru may be non-zero
  2412  000936                     	global __mediumconst
  2413                           movlw	low highword(__mediumconst)
  2416  000936                     	tblrd	*
  2417  000936  0008               	
  2418                           	movf	tablat,w
  2419  000938  50F5               
  2420                           	addwf	(0+?___wmul),c
  2421  00093A  2601               	movlw	0
  2422  00093C  0E00               	addwfc	(1+?___wmul),c
  2423  00093E  2202               	movlw	low(0FFD0h)
  2424  000940  0ED0               	addwf	(0+?___wmul),c,w
  2425  000942  2401               	movlb	0	; () banked
  2426  000944  0100               	movwf	((sprintf@prec))&0ffh
  2427  000946  6F7A               	movlw	high(0FFD0h)
  2428  000948  0EFF               	addwfc	(1+?___wmul),c,w
  2429  00094A  2002               	movwf	1+((sprintf@prec))&0ffh
  2430  00094C  6F7B               	
  2431                           l3275:; BSR set to: 0
  2432  00094E                     
  2433                           	infsnz	((c:sprintf@f)),c
  2434  00094E  4A53               	incf	((c:sprintf@f+1)),c
  2435  000950  2A54               	goto	l3277
  2436  000952  EFAB  F004         	
  2437                           l205:; BSR set to: 0
  2438  000956                     
  2439                           	line	622
  2440                           	
  2441                           l3277:; BSR set to: 0
  2442  000956                     
  2443                           	movff	(c:sprintf@f),tblptrl
  2444  000956  C053  FFF6         	movff	(c:sprintf@f+1),tblptrh
  2445  00095A  C054  FFF7         	if	0	;tblptru may be non-zero
  2446  00095E                     	clrf	tblptru
  2448  00095E                     	if	0	;tblptru may be non-zero
  2449  00095E                     	global __mediumconst
  2450                           movlw	low highword(__mediumconst)
  2453  00095E                     	tblrd	*
  2454  00095E  0008               	
  2455                           	movf	tablat,w
  2456  000960  50F5               	
  2457                           	call	_isdigit
  2458  000962  EC30  F01B         	btfsc	status,0
  2459  000966  B0D8               	goto	u3221
  2460  000968  EFB8  F004         	goto	u3220
  2461  00096C  EFBA  F004         u3221:
  2462  000970                     	goto	l3273
  2463  000970  EF8D  F004         u3220:
  2464  000974                     	goto	l3305
  2465  000974  EF16  F005         	
  2466                           l207:
  2467  000978                     	line	625
  2468                           ;doprnt.c: 624: }
  2469                           ;doprnt.c: 625: } else {
  2470                           	goto	l3305
  2471  000978  EF16  F005         	
  2472                           l204:
  2473  00097C                     	line	626
  2474                           	
  2475                           l3279:
  2476  00097C                     ;doprnt.c: 626: prec = 0;
  2477                           	movlw	high(0)
  2478  00097C  0E00               	movlb	0	; () banked
  2479  00097E  0100               	movwf	((sprintf@prec+1))&0ffh
  2480  000980  6F7B               	movlw	low(0)
  2481  000982  0E00               	movwf	((sprintf@prec))&0ffh
  2482  000984  6F7A               	line	628
  2483                           	
  2484                           l3281:; BSR set to: 0
  2485  000986                     
  2486                           ;doprnt.c: 628: flag |= 0x1000;
  2487                           	bsf	(0+(12/8)+(sprintf@flag))&0ffh,(12)&7
  2488  000986  896B               	goto	l3305
  2489  000988  EF16  F005         	line	630
  2490                           	
  2491                           l208:; BSR set to: 0
  2492  00098C                     
  2493                           	line	635
  2494                           ;doprnt.c: 630: }
  2495                           ;doprnt.c: 635: switch(c = *f++) {
  2496                           	goto	l3305
  2497  00098C  EF16  F005         	line	637
  2498                           ;doprnt.c: 637: case 0:
  2499                           	
  2500                           l210:; BSR set to: 0
  2501  000990                     
  2502                           	line	638
  2503                           ;doprnt.c: 638: goto alldone;
  2504                           	goto	l3477
  2505  000990  EF72  F009         	line	662
  2506                           ;doprnt.c: 662: case 'f':
  2507                           	
  2508                           l212:; BSR set to: 0
  2509  000994                     
  2510                           	line	663
  2511                           	
  2512                           l3283:; BSR set to: 0
  2513  000994                     
  2514                           ;doprnt.c: 663: flag |= 0x400;
  2515                           	bsf	(0+(10/8)+(sprintf@flag))&0ffh,(10)&7
  2516  000994  856B               	line	664
  2517                           ;doprnt.c: 664: break;
  2518                           	goto	l3307
  2519  000996  EF2B  F005         	line	750
  2520                           ;doprnt.c: 750: dostring:
  2521                           	
  2522                           l214:; BSR set to: 0
  2523  00099A                     
  2524                           	line	753
  2525                           	
  2526                           l3285:; BSR set to: 0
  2527  00099A                     
  2528                           ;doprnt.c: 753: if(prec && prec < len)
  2529                           	movf	((sprintf@prec))&0ffh,w
  2530  00099A  517A               iorwf	((sprintf@prec+1))&0ffh,w
  2531  00099C  117B               	btfsc	status,2
  2532  00099E  B4D8               	goto	u3231
  2533  0009A0  EFD4  F004         	goto	u3230
  2534  0009A4  EFD6  F004         
  2535                           u3231:
  2536  0009A8                     	goto	l3297
  2537  0009A8  EFF9  F004         u3230:
  2538  0009AC                     	
  2539                           l3287:; BSR set to: 0
  2540  0009AC                     
  2541                           		movf	((sprintf@len))&0ffh,w
  2542  0009AC  5168               	subwf	((sprintf@prec))&0ffh,w
  2543  0009AE  5D7A               	movf	((sprintf@len+1))&0ffh,w
  2544  0009B0  5169               	subwfb	((sprintf@prec+1))&0ffh,w
  2545  0009B2  597B               	btfsc	status,0
  2546  0009B4  B0D8               	goto	u3241
  2547  0009B6  EFDF  F004         	goto	u3240
  2548  0009BA  EFE1  F004         
  2549                           u3241:
  2550  0009BE                     	goto	l3297
  2551  0009BE  EFF9  F004         u3240:
  2552  0009C2                     	line	754
  2553                           	
  2554                           l3289:; BSR set to: 0
  2555  0009C2                     
  2556                           ;doprnt.c: 754: len = prec;
  2557                           	movff	(sprintf@prec),(sprintf@len)
  2558  0009C2  C07A  F068         	movff	(sprintf@prec+1),(sprintf@len+1)
  2559  0009C6  C07B  F069         	goto	l3297
  2560  0009CA  EFF9  F004         	
  2561                           l215:; BSR set to: 0
  2562  0009CE                     
  2563                           	line	767
  2564                           ;doprnt.c: 767: while(len--)
  2565                           	goto	l3297
  2566  0009CE  EFF9  F004         	
  2567                           l217:; BSR set to: 0
  2568  0009D2                     
  2569                           	line	768
  2570                           	
  2571                           l3291:; BSR set to: 0
  2572  0009D2                     
  2573                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
  2574                           	movff	(sprintf@cp),fsr2l
  2575  0009D2  C066  FFD9         	movff	(sprintf@cp+1),fsr2h
  2576  0009D6  C067  FFDA         	movff	(c:sprintf@sp),fsr1l
  2577  0009DA  C051  FFE1         	movff	(c:sprintf@sp+1),fsr1h
  2578  0009DE  C052  FFE2         	movff	indf2,indf1
  2579  0009E2  CFDF FFE7          	
  2580                           l3293:; BSR set to: 0
  2581  0009E6                     
  2582                           	infsnz	((sprintf@cp))&0ffh
  2583  0009E6  4B66               	incf	((sprintf@cp+1))&0ffh
  2584  0009E8  2B67               	
  2585                           l3295:; BSR set to: 0
  2586  0009EA                     
  2587                           	infsnz	((c:sprintf@sp)),c
  2588  0009EA  4A51               	incf	((c:sprintf@sp+1)),c
  2589  0009EC  2A52               	goto	l3297
  2590  0009EE  EFF9  F004         	
  2591                           l216:; BSR set to: 0
  2592  0009F2                     
  2593                           	line	767
  2594                           	
  2595                           l3297:; BSR set to: 0
  2596  0009F2                     
  2597                           	decf	((sprintf@len))&0ffh
  2598  0009F2  0768               	btfss	status,0
  2599  0009F4  A0D8               	decf	((sprintf@len+1))&0ffh
  2600  0009F6  0769               		incf	((sprintf@len))&0ffh,w
  2601  0009F8  2968               	bnz	u3251
  2602  0009FA  E106               	incf	((sprintf@len+1))&0ffh,w
  2603  0009FC  2969               	btfss	status,2
  2604  0009FE  A4D8               	goto	u3251
  2605  000A00  EF04  F005         	goto	u3250
  2606  000A04  EF06  F005         
  2607                           u3251:
  2608  000A08                     	goto	l3291
  2609  000A08  EFE9  F004         u3250:
  2610  000A0C                     	goto	l3475
  2611  000A0C  EF5D  F009         	
  2612                           l218:; BSR set to: 0
  2613  000A10                     
  2614                           	line	774
  2615                           ;doprnt.c: 774: continue;
  2616                           	goto	l3475
  2617  000A10  EF5D  F009         	line	802
  2618                           ;doprnt.c: 802: default:
  2619                           	
  2620                           l219:; BSR set to: 0
  2621  000A14                     
  2622                           	line	805
  2623                           	
  2624                           l3299:; BSR set to: 0
  2625  000A14                     
  2626                           ;doprnt.c: 805: cp = (char *)&c;
  2627                           		movlw	low(sprintf@c)
  2628  000A14  0E7C               	movwf	((sprintf@cp))&0ffh
  2629  000A16  6F66               	movlw	high(sprintf@c)
  2630  000A18  0E00               	movwf	((sprintf@cp+1))&0ffh
  2631  000A1A  6F67               
  2632                           	line	806
  2633                           	
  2634                           l3301:; BSR set to: 0
  2635  000A1C                     
  2636                           ;doprnt.c: 806: len = 1;
  2637                           	movlw	high(01h)
  2638  000A1C  0E00               	movwf	((sprintf@len+1))&0ffh
  2639  000A1E  6F69               	movlw	low(01h)
  2640  000A20  0E01               	movwf	((sprintf@len))&0ffh
  2641  000A22  6F68               	line	807
  2642                           ;doprnt.c: 807: goto dostring;
  2643                           	goto	l3285
  2644  000A24  EFCD  F004         	line	822
  2645                           	
  2646                           l3303:; BSR set to: 0
  2647  000A28                     
  2648                           ;doprnt.c: 822: }
  2649                           	goto	l3307
  2650  000A28  EF2B  F005         	line	635
  2651                           	
  2652                           l209:; BSR set to: 0
  2653  000A2C                     
  2654                           	
  2655                           l3305:
  2656  000A2C                     	movff	(c:sprintf@f),tblptrl
  2657  000A2C  C053  FFF6         	movff	(c:sprintf@f+1),tblptrh
  2658  000A30  C054  FFF7         	infsnz	((c:sprintf@f)),c
  2659  000A34  4A53               	incf	((c:sprintf@f+1)),c
  2660  000A36  2A54               	if	0	;tblptru may be non-zero
  2661  000A38                     	clrf	tblptru
  2663  000A38                     	if	0	;tblptru may be non-zero
  2664  000A38                     	global __mediumconst
  2665                           movlw	low highword(__mediumconst)
  2668  000A38                     	tblrd	*
  2669  000A38  0008               	
  2670                           	movff	tablat,(sprintf@c)
  2671  000A3A  CFF5 F07C          	movlb	0	; () banked
  2672  000A3E  0100               	movf	((sprintf@c))&0ffh,w
  2673  000A40  517C               	; Switch size 1, requested type "space"
  2674                           ; Number of cases is 2, Range of values is 0 to 102
  2675                           ; switch strategies available:
  2676                           ; Name         Instructions Cycles
  2677                           ; simple_byte            7     4 (average)
  2678                           ;	Chosen strategy is simple_byte
  2679                           
  2680                           	xorlw	0^0	; case 0
  2681  000A42  0A00               	skipnz
  2682  000A44  B4D8               	goto	l3477
  2683  000A46  EF72  F009         	xorlw	102^0	; case 102
  2684  000A4A  0A66               	skipnz
  2685  000A4C  B4D8               	goto	l3283
  2686  000A4E  EFCA  F004         	goto	l3299
  2687  000A52  EF0A  F005         
  2688                           	line	822
  2689                           	
  2690                           l213:; BSR set to: 0
  2691  000A56                     
  2692                           	line	825
  2693                           	
  2694                           l3307:; BSR set to: 0
  2695  000A56                     
  2696                           ;doprnt.c: 825: if(flag & (0x700)) {
  2697                           	movlw	high(0700h)
  2698  000A56  0E07               	andwf	((sprintf@flag+1))&0ffh,w
  2699  000A58  156B               
  2700                           	btfsc	status,2
  2701  000A5A  B4D8               	goto	u3261
  2702  000A5C  EF32  F005         	goto	u3260
  2703  000A60  EF34  F005         u3261:
  2704  000A64                     	goto	l3455
  2705  000A64  EFFD  F008         u3260:
  2706  000A68                     	line	827
  2707                           	
  2708                           l3309:; BSR set to: 0
  2709  000A68                     
  2710                           ;doprnt.c: 827: if(flag & 0x1000)
  2711                           	
  2712                           	btfss	((sprintf@flag+1))&0ffh,(12)&7
  2713  000A68  A96B               	goto	u3271
  2714  000A6A  EF39  F005         	goto	u3270
  2715  000A6E  EF3B  F005         u3271:
  2716  000A72                     	goto	l3313
  2717  000A72  EF41  F005         u3270:
  2718  000A76                     	line	829
  2719                           	
  2720                           l3311:; BSR set to: 0
  2721  000A76                     
  2722                           ;doprnt.c: 829: prec = 6;
  2723                           	movlw	high(06h)
  2724  000A76  0E00               	movwf	((sprintf@prec+1))&0ffh
  2725  000A78  6F7B               	movlw	low(06h)
  2726  000A7A  0E06               	movwf	((sprintf@prec))&0ffh
  2727  000A7C  6F7A               	goto	l3313
  2728  000A7E  EF41  F005         	
  2729                           l221:; BSR set to: 0
  2730  000A82                     
  2731                           	line	830
  2732                           	
  2733                           l3313:; BSR set to: 0
  2734  000A82                     
  2735                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  2736                           	movff	(sprintf@ap),fsr2l
  2737  000A82  C064  FFD9         	movff	(sprintf@ap+1),fsr2h
  2738  000A86  C065  FFDA         	movff	postinc2,(sprintf@fval)
  2739  000A8A  CFDE F076          	movff	postinc2,(sprintf@fval+1)
  2740  000A8E  CFDE F077          	movff	postinc2,(sprintf@fval+2)
  2741  000A92  CFDE F078          	movff	postinc2,(sprintf@fval+3)
  2742  000A96  CFDE F079          	
  2743                           l3315:; BSR set to: 0
  2744  000A9A                     
  2745                           	movlw	04h
  2746  000A9A  0E04               	addwf	((sprintf@ap))&0ffh
  2747  000A9C  2764               	movlw	0
  2748  000A9E  0E00               	addwfc	((sprintf@ap+1))&0ffh
  2749  000AA0  2365               	line	831
  2750                           	
  2751                           l3317:; BSR set to: 0
  2752  000AA2                     
  2753                           ;doprnt.c: 831: if(fval < 0.0) {
  2754                           	btfsc	((sprintf@fval+3))&0ffh,7
  2755  000AA2  BF79               	goto	u3280
  2756  000AA4  EF58  F005         	goto	u3281
  2757  000AA8  EF56  F005         
  2758                           u3281:
  2759  000AAC                     	goto	l3323
  2760  000AAC  EF6F  F005         u3280:
  2761  000AB0                     	line	832
  2762                           	
  2763                           l3319:; BSR set to: 0
  2764  000AB0                     
  2765                           ;doprnt.c: 832: fval = -fval;
  2766                           	movff	(sprintf@fval),(c:___flneg@f1)
  2767  000AB0  C076  F001         	movff	(sprintf@fval+1),(c:___flneg@f1+1)
  2768  000AB4  C077  F002         	movff	(sprintf@fval+2),(c:___flneg@f1+2)
  2769  000AB8  C078  F003         	movff	(sprintf@fval+3),(c:___flneg@f1+3)
  2770  000ABC  C079  F004         	call	___flneg	;wreg free
  2771  000AC0  EC10  F01B         	movff	0+?___flneg,(sprintf@fval)
  2772  000AC4  C001  F076         	movff	1+?___flneg,(sprintf@fval+1)
  2773  000AC8  C002  F077         	movff	2+?___flneg,(sprintf@fval+2)
  2774  000ACC  C003  F078         	movff	3+?___flneg,(sprintf@fval+3)
  2775  000AD0  C004  F079         	
  2776                           	line	833
  2777                           	
  2778                           l3321:
  2779  000AD4                     ;doprnt.c: 833: flag |= 0x03;
  2780                           	movlw	03h
  2781  000AD4  0E03               	movlb	0	; () banked
  2782  000AD6  0100               	iorwf	((sprintf@flag))&0ffh
  2783  000AD8  136A               	goto	l3323
  2784  000ADA  EF6F  F005         	line	834
  2785                           	
  2786                           l222:; BSR set to: 0
  2787  000ADE                     
  2788                           	line	835
  2789                           	
  2790                           l3323:; BSR set to: 0
  2791  000ADE                     
  2792                           ;doprnt.c: 834: }
  2793                           ;doprnt.c: 835: exp = 0;
  2794                           	movlw	high(0)
  2795  000ADE  0E00               	movwf	((sprintf@exp+1))&0ffh
  2796  000AE0  6F71               	movlw	low(0)
  2797  000AE2  0E00               	movwf	((sprintf@exp))&0ffh
  2798  000AE4  6F70               	line	836
  2799                           	
  2800                           l3325:; BSR set to: 0
  2801  000AE6                     
  2802                           ;doprnt.c: 836: if( fval!=0) {
  2803                           	movf	((sprintf@fval))&0ffh,w
  2804  000AE6  5176               iorwf	((sprintf@fval+1))&0ffh,w
  2805  000AE8  1177               iorwf	((sprintf@fval+2))&0ffh,w
  2806  000AEA  1178               iorwf	((sprintf@fval+3))&0ffh,w
  2807  000AEC  1179               	btfsc	status,2
  2808  000AEE  B4D8               	goto	u3291
  2809  000AF0  EF7C  F005         	goto	u3290
  2810  000AF4  EF7E  F005         
  2811                           u3291:
  2812  000AF8                     	goto	l3351
  2813  000AF8  EF18  F006         u3290:
  2814  000AFC                     	line	837
  2815                           	
  2816                           l3327:; BSR set to: 0
  2817  000AFC                     
  2818                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
                                 - 126);
  2819                           	rlcf	((sprintf@fval+2))&0ffh,w
  2820  000AFC  3578               	rlcf	((sprintf@fval+3))&0ffh,w
  2821  000AFE  3579               	addlw	low(-126)
  2822  000B00  0F82               	movwf	((sprintf@exp))&0ffh
  2823  000B02  6F70               	clrf	1+((sprintf@exp))&0ffh
  2824  000B04  6B71               	movlw	high(-126)
  2825  000B06  0EFF               	addwfc	1+((sprintf@exp))&0ffh
  2826  000B08  2371               	line	838
  2827                           	
  2828                           l3329:; BSR set to: 0
  2829  000B0A                     
  2830                           ;doprnt.c: 838: exp--;
  2831                           	decf	((sprintf@exp))&0ffh
  2832  000B0A  0770               	btfss	status,0
  2833  000B0C  A0D8               	decf	((sprintf@exp+1))&0ffh
  2834  000B0E  0771               	line	839
  2835                           	
  2836                           l3331:; BSR set to: 0
  2837  000B10                     
  2838                           ;doprnt.c: 839: exp *= 3;
  2839                           	movff	(sprintf@exp),(c:___wmul@multiplier)
  2840  000B10  C070  F001         	movff	(sprintf@exp+1),(c:___wmul@multiplier+1)
  2841  000B14  C071  F002         	movlw	high(03h)
  2842  000B18  0E00               	movwf	((c:___wmul@multiplicand+1)),c
  2843  000B1A  6E04               	movlw	low(03h)
  2844  000B1C  0E03               	movwf	((c:___wmul@multiplicand)),c
  2845  000B1E  6E03               	call	___wmul	;wreg free
  2846  000B20  EC4D  F01B         	movff	0+?___wmul,(sprintf@exp)
  2847  000B24  C001  F070         	movff	1+?___wmul,(sprintf@exp+1)
  2848  000B28  C002  F071         	line	840
  2849                           	
  2850                           l3333:
  2851  000B2C                     ;doprnt.c: 840: exp /= 10;
  2852                           	movff	(sprintf@exp),(c:___awdiv@dividend)
  2853  000B2C  C070  F007         	movff	(sprintf@exp+1),(c:___awdiv@dividend+1)
  2854  000B30  C071  F008         	movlw	high(0Ah)
  2855  000B34  0E00               	movwf	((c:___awdiv@divisor+1)),c
  2856  000B36  6E0A               	movlw	low(0Ah)
  2857  000B38  0E0A               	movwf	((c:___awdiv@divisor)),c
  2858  000B3A  6E09               	call	___awdiv	;wreg free
  2859  000B3C  ECB4  F017         	movff	0+?___awdiv,(sprintf@exp)
  2860  000B40  C007  F070         	movff	1+?___awdiv,(sprintf@exp+1)
  2861  000B44  C008  F071         	line	841
  2862                           	
  2863                           l3335:
  2864  000B48                     ;doprnt.c: 841: if(exp < 0)
  2865                           	movlb	0	; () banked
  2866  000B48  0100               	btfsc	((sprintf@exp+1))&0ffh,7
  2867  000B4A  BF71               	goto	u3300
  2868  000B4C  EFAC  F005         	goto	u3301
  2869  000B50  EFAA  F005         
  2870                           u3301:
  2871  000B54                     	goto	l3339
  2872  000B54  EFB1  F005         u3300:
  2873  000B58                     	line	842
  2874                           	
  2875                           l3337:; BSR set to: 0
  2876  000B58                     
  2877                           ;doprnt.c: 842: exp--;
  2878                           	decf	((sprintf@exp))&0ffh
  2879  000B58  0770               	btfss	status,0
  2880  000B5A  A0D8               	decf	((sprintf@exp+1))&0ffh
  2881  000B5C  0771               	goto	l3339
  2882  000B5E  EFB1  F005         	
  2883                           l224:; BSR set to: 0
  2884  000B62                     
  2885                           	line	846
  2886                           	
  2887                           l3339:; BSR set to: 0
  2888  000B62                     
  2889                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  2890                           	movf	((sprintf@exp))&0ffh,w
  2891  000B62  5170               	sublw	0
  2892  000B64  0800               	
  2893                           	call	_scale
  2894  000B66  EC3E  F00C         	movff	0+?_scale,(sprintf@tmpval)
  2895  000B6A  C028  F072         	movff	1+?_scale,(sprintf@tmpval+1)
  2896  000B6E  C029  F073         	movff	2+?_scale,(sprintf@tmpval+2)
  2897  000B72  C02A  F074         	movff	3+?_scale,(sprintf@tmpval+3)
  2898  000B76  C02B  F075         	
  2899                           	line	847
  2900                           	
  2901                           l3341:
  2902  000B7A                     ;doprnt.c: 847: tmpval.integ *= fval;
  2903                           	movff	(sprintf@tmpval),(c:___flmul@b)
  2904  000B7A  C072  F00F         	movff	(sprintf@tmpval+1),(c:___flmul@b+1)
  2905  000B7E  C073  F010         	movff	(sprintf@tmpval+2),(c:___flmul@b+2)
  2906  000B82  C074  F011         	movff	(sprintf@tmpval+3),(c:___flmul@b+3)
  2907  000B86  C075  F012         	movff	(sprintf@fval),(c:___flmul@a)
  2908  000B8A  C076  F013         	movff	(sprintf@fval+1),(c:___flmul@a+1)
  2909  000B8E  C077  F014         	movff	(sprintf@fval+2),(c:___flmul@a+2)
  2910  000B92  C078  F015         	movff	(sprintf@fval+3),(c:___flmul@a+3)
  2911  000B96  C079  F016         	call	___flmul	;wreg free
  2912  000B9A  EC8C  F00E         	movff	0+?___flmul,(sprintf@tmpval)
  2913  000B9E  C00F  F072         	movff	1+?___flmul,(sprintf@tmpval+1)
  2914  000BA2  C010  F073         	movff	2+?___flmul,(sprintf@tmpval+2)
  2915  000BA6  C011  F074         	movff	3+?___flmul,(sprintf@tmpval+3)
  2916  000BAA  C012  F075         	
  2917                           	line	848
  2918                           	
  2919                           l3343:
  2920  000BAE                     ;doprnt.c: 848: if(tmpval.integ < 1.0)
  2921                           	movff	(sprintf@tmpval),(c:___flge@ff1)
  2922  000BAE  C072  F001         	movff	(sprintf@tmpval+1),(c:___flge@ff1+1)
  2923  000BB2  C073  F002         	movff	(sprintf@tmpval+2),(c:___flge@ff1+2)
  2924  000BB6  C074  F003         	movff	(sprintf@tmpval+3),(c:___flge@ff1+3)
  2925  000BBA  C075  F004         	movlw	low(normalize32(1.0000000000000000))
  2926  000BBE  0E00               	movwf	((c:___flge@ff2)),c
  2927  000BC0  6E05               	movlw	high(normalize32(1.0000000000000000))
  2928  000BC2  0E00               	movwf	((c:___flge@ff2+1)),c
  2929  000BC4  6E06               	movlw	low highword(normalize32(1.0000000000000000))
  2930  000BC6  0E80               	movwf	((c:___flge@ff2+2)),c
  2931  000BC8  6E07               	movlw	high highword(normalize32(1.0000000000000000))
  2932  000BCA  0E3F               	movwf	((c:___flge@ff2+3)),c
  2933  000BCC  6E08               	call	___flge	;wreg free
  2934  000BCE  ECB4  F015         	btfsc	status,0
  2935  000BD2  B0D8               	goto	u3311
  2936  000BD4  EFEE  F005         	goto	u3310
  2937  000BD8  EFF0  F005         u3311:
  2938  000BDC                     	goto	l3347
  2939  000BDC  EFF6  F005         u3310:
  2940  000BE0                     	line	849
  2941                           	
  2942                           l3345:
  2943  000BE0                     ;doprnt.c: 849: exp--;
  2944                           	movlb	0	; () banked
  2945  000BE0  0100               	decf	((sprintf@exp))&0ffh
  2946  000BE2  0770               	btfss	status,0
  2947  000BE4  A0D8               	decf	((sprintf@exp+1))&0ffh
  2948  000BE6  0771               	goto	l3351
  2949  000BE8  EF18  F006         	line	850
  2950                           	
  2951                           l225:; BSR set to: 0
  2952  000BEC                     
  2953                           	
  2954                           l3347:
  2955  000BEC                     ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  2956                           	movff	(sprintf@tmpval),(c:___flge@ff1)
  2957  000BEC  C072  F001         	movff	(sprintf@tmpval+1),(c:___flge@ff1+1)
  2958  000BF0  C073  F002         	movff	(sprintf@tmpval+2),(c:___flge@ff1+2)
  2959  000BF4  C074  F003         	movff	(sprintf@tmpval+3),(c:___flge@ff1+3)
  2960  000BF8  C075  F004         	movlw	low(normalize32(10.000000000000000))
  2961  000BFC  0E00               	movwf	((c:___flge@ff2)),c
  2962  000BFE  6E05               	movlw	high(normalize32(10.000000000000000))
  2963  000C00  0E00               	movwf	((c:___flge@ff2+1)),c
  2964  000C02  6E06               	movlw	low highword(normalize32(10.000000000000000))
  2965  000C04  0E20               	movwf	((c:___flge@ff2+2)),c
  2966  000C06  6E07               	movlw	high highword(normalize32(10.000000000000000))
  2967  000C08  0E41               	movwf	((c:___flge@ff2+3)),c
  2968  000C0A  6E08               	call	___flge	;wreg free
  2969  000C0C  ECB4  F015         	btfss	status,0
  2970  000C10  A0D8               	goto	u3321
  2971  000C12  EF0D  F006         	goto	u3320
  2972  000C16  EF0F  F006         u3321:
  2973  000C1A                     	goto	l3351
  2974  000C1A  EF18  F006         u3320:
  2975  000C1E                     	line	851
  2976                           	
  2977                           l3349:
  2978  000C1E                     ;doprnt.c: 851: exp++;
  2979                           	movlb	0	; () banked
  2980  000C1E  0100               	infsnz	((sprintf@exp))&0ffh
  2981  000C20  4B70               	incf	((sprintf@exp+1))&0ffh
  2982  000C22  2B71               	goto	l3351
  2983  000C24  EF18  F006         	
  2984                           l227:; BSR set to: 0
  2985  000C28                     
  2986                           	goto	l3351
  2987  000C28  EF18  F006         	line	852
  2988                           	
  2989                           l226:; BSR set to: 0
  2990  000C2C                     
  2991                           	goto	l3351
  2992  000C2C  EF18  F006         	
  2993                           l223:; BSR set to: 0
  2994  000C30                     
  2995                           	line	1112
  2996                           	
  2997                           l3351:
  2998  000C30                     ;doprnt.c: 852: }
  2999                           ;doprnt.c: 1112: if(prec <= 12)
  3000                           	movlb	0	; () banked
  3001  000C30  0100               	btfsc	((sprintf@prec+1))&0ffh,7
  3002  000C32  BF7B               	goto	u3330
  3003  000C34  EF27  F006         	movf	((sprintf@prec+1))&0ffh,w
  3004  000C38  517B               	bnz	u3331
  3005  000C3A  E107               	movlw	13
  3006  000C3C  0E0D               	subwf	 ((sprintf@prec))&0ffh,w
  3007  000C3E  5D7A               	btfsc	status,0
  3008  000C40  B0D8               	goto	u3331
  3009  000C42  EF25  F006         	goto	u3330
  3010  000C46  EF27  F006         
  3011                           u3331:
  3012  000C4A                     	goto	l3355
  3013  000C4A  EF46  F006         u3330:
  3014  000C4E                     	line	1113
  3015                           	
  3016                           l3353:; BSR set to: 0
  3017  000C4E                     
  3018                           ;doprnt.c: 1113: fval += fround(prec);
  3019                           	movff	(sprintf@fval),(c:___fladd@b)
  3020  000C4E  C076  F035         	movff	(sprintf@fval+1),(c:___fladd@b+1)
  3021  000C52  C077  F036         	movff	(sprintf@fval+2),(c:___fladd@b+2)
  3022  000C56  C078  F037         	movff	(sprintf@fval+3),(c:___fladd@b+3)
  3023  000C5A  C079  F038         	movf	((sprintf@prec))&0ffh,w
  3024  000C5E  517A               	
  3025                           	call	_fround
  3026  000C60  ECC3  F010         	movff	0+?_fround,(c:___fladd@a)
  3027  000C64  C028  F039         	movff	1+?_fround,(c:___fladd@a+1)
  3028  000C68  C029  F03A         	movff	2+?_fround,(c:___fladd@a+2)
  3029  000C6C  C02A  F03B         	movff	3+?_fround,(c:___fladd@a+3)
  3030  000C70  C02B  F03C         	
  3031                           	call	___fladd	;wreg free
  3032  000C74  EC7B  F009         	movff	0+?___fladd,(sprintf@fval)
  3033  000C78  C035  F076         	movff	1+?___fladd,(sprintf@fval+1)
  3034  000C7C  C036  F077         	movff	2+?___fladd,(sprintf@fval+2)
  3035  000C80  C037  F078         	movff	3+?___fladd,(sprintf@fval+3)
  3036  000C84  C038  F079         	
  3037                           	goto	l3355
  3038  000C88  EF46  F006         	
  3039                           l228:
  3040  000C8C                     	line	1116
  3041                           	
  3042                           l3355:
  3043  000C8C                     ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  3044                           	movlb	0	; () banked
  3045  000C8C  0100               	btfsc	((sprintf@exp+1))&0ffh,7
  3046  000C8E  BF71               	goto	u3340
  3047  000C90  EF55  F006         	movf	((sprintf@exp+1))&0ffh,w
  3048  000C94  5171               	bnz	u3341
  3049  000C96  E107               	movlw	10
  3050  000C98  0E0A               	subwf	 ((sprintf@exp))&0ffh,w
  3051  000C9A  5D70               	btfsc	status,0
  3052  000C9C  B0D8               	goto	u3341
  3053  000C9E  EF53  F006         	goto	u3340
  3054  000CA2  EF55  F006         
  3055                           u3341:
  3056  000CA6                     	goto	l3363
  3057  000CA6  EF86  F006         u3340:
  3058  000CAA                     	
  3059                           l3357:; BSR set to: 0
  3060  000CAA                     
  3061                           	movf	((sprintf@fval))&0ffh,w
  3062  000CAA  5176               iorwf	((sprintf@fval+1))&0ffh,w
  3063  000CAC  1177               iorwf	((sprintf@fval+2))&0ffh,w
  3064  000CAE  1178               iorwf	((sprintf@fval+3))&0ffh,w
  3065  000CB0  1179               	btfsc	status,2
  3066  000CB2  B4D8               	goto	u3351
  3067  000CB4  EF5E  F006         	goto	u3350
  3068  000CB8  EF60  F006         
  3069                           u3351:
  3070  000CBC                     	goto	l3377
  3071  000CBC  EFFB  F006         u3350:
  3072  000CC0                     	
  3073                           l3359:; BSR set to: 0
  3074  000CC0                     
  3075                           	movff	(sprintf@fval),(c:___fltol@f1)
  3076  000CC0  C076  F031         	movff	(sprintf@fval+1),(c:___fltol@f1+1)
  3077  000CC4  C077  F032         	movff	(sprintf@fval+2),(c:___fltol@f1+2)
  3078  000CC8  C078  F033         	movff	(sprintf@fval+3),(c:___fltol@f1+3)
  3079  000CCC  C079  F034         	call	___fltol	;wreg free
  3080  000CD0  EC68  F016         	movf	(0+?___fltol),c,w
  3081  000CD4  5031               iorwf	(1+?___fltol),c,w
  3082  000CD6  1032               iorwf	(2+?___fltol),c,w
  3083  000CD8  1033               iorwf	(3+?___fltol),c,w
  3084  000CDA  1034               	btfss	status,2
  3085  000CDC  A4D8               	goto	u3361
  3086  000CDE  EF73  F006         	goto	u3360
  3087  000CE2  EF75  F006         
  3088                           u3361:
  3089  000CE6                     	goto	l3377
  3090  000CE6  EFFB  F006         u3360:
  3091  000CEA                     	
  3092                           l3361:
  3093  000CEA                     	movlb	0	; () banked
  3094  000CEA  0100               	btfsc	((sprintf@exp+1))&0ffh,7
  3095  000CEC  BF71               	goto	u3371
  3096  000CEE  EF82  F006         	movf	((sprintf@exp+1))&0ffh,w
  3097  000CF2  5171               	bnz	u3370
  3098  000CF4  E109               	movlw	2
  3099  000CF6  0E02               	subwf	 ((sprintf@exp))&0ffh,w
  3100  000CF8  5D70               	btfss	status,0
  3101  000CFA  A0D8               	goto	u3371
  3102  000CFC  EF82  F006         	goto	u3370
  3103  000D00  EF84  F006         
  3104                           u3371:
  3105  000D04                     	goto	l3377
  3106  000D04  EFFB  F006         u3370:
  3107  000D08                     	goto	l3363
  3108  000D08  EF86  F006         	
  3109                           l231:; BSR set to: 0
  3110  000D0C                     
  3111                           	line	1120
  3112                           	
  3113                           l3363:; BSR set to: 0
  3114  000D0C                     
  3115                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  3116                           	movff	(sprintf@tmpval),(c:___flge@ff1)
  3117  000D0C  C072  F001         	movff	(sprintf@tmpval+1),(c:___flge@ff1+1)
  3118  000D10  C073  F002         	movff	(sprintf@tmpval+2),(c:___flge@ff1+2)
  3119  000D14  C074  F003         	movff	(sprintf@tmpval+3),(c:___flge@ff1+3)
  3120  000D18  C075  F004         	movlw	low(normalize32(4.2949672960000003))
  3121  000D1C  0E5F               	movwf	((c:___flge@ff2)),c
  3122  000D1E  6E05               	movlw	high(normalize32(4.2949672960000003))
  3123  000D20  0E70               	movwf	((c:___flge@ff2+1)),c
  3124  000D22  6E06               	movlw	low highword(normalize32(4.2949672960000003))
  3125  000D24  0E89               	movwf	((c:___flge@ff2+2)),c
  3126  000D26  6E07               	movlw	high highword(normalize32(4.2949672960000003))
  3127  000D28  0E40               	movwf	((c:___flge@ff2+3)),c
  3128  000D2A  6E08               	call	___flge	;wreg free
  3129  000D2C  ECB4  F015         	btfsc	status,0
  3130  000D30  B0D8               	goto	u3381
  3131  000D32  EF9D  F006         	goto	u3380
  3132  000D36  EF9F  F006         u3381:
  3133  000D3A                     	goto	l3367
  3134  000D3A  EFA6  F006         u3380:
  3135  000D3E                     	line	1121
  3136                           	
  3137                           l3365:
  3138  000D3E                     ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  3139                           	movlb	0	; () banked
  3140  000D3E  0100               	movlw	low(-9)
  3141  000D40  0EF7               	addwf	((sprintf@exp))&0ffh
  3142  000D42  2770               	movlw	high(-9)
  3143  000D44  0EFF               	addwfc	((sprintf@exp+1))&0ffh
  3144  000D46  2371               	line	1122
  3145                           ;doprnt.c: 1122: }else{
  3146                           	goto	l3369
  3147  000D48  EFAD  F006         	
  3148                           l232:; BSR set to: 0
  3149  000D4C                     
  3150                           	line	1123
  3151                           	
  3152                           l3367:
  3153  000D4C                     ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  3154                           	movlb	0	; () banked
  3155  000D4C  0100               	movlw	low(-8)
  3156  000D4E  0EF8               	addwf	((sprintf@exp))&0ffh
  3157  000D50  2770               	movlw	high(-8)
  3158  000D52  0EFF               	addwfc	((sprintf@exp+1))&0ffh
  3159  000D54  2371               	goto	l3369
  3160  000D56  EFAD  F006         	line	1124
  3161                           	
  3162                           l233:; BSR set to: 0
  3163  000D5A                     
  3164                           	line	1125
  3165                           	
  3166                           l3369:; BSR set to: 0
  3167  000D5A                     
  3168                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
                                 l_(fval,tmpval.integ));
  3169                           	movf	((sprintf@exp))&0ffh,w
  3170  000D5A  5170               	
  3171                           	call	_scale
  3172  000D5C  EC3E  F00C         	movff	0+?_scale,(sprintf@tmpval)
  3173  000D60  C028  F072         	movff	1+?_scale,(sprintf@tmpval+1)
  3174  000D64  C029  F073         	movff	2+?_scale,(sprintf@tmpval+2)
  3175  000D68  C02A  F074         	movff	3+?_scale,(sprintf@tmpval+3)
  3176  000D6C  C02B  F075         	
  3177                           	line	1126
  3178                           	
  3179                           l3371:
  3180  000D70                     	movff	(sprintf@fval),(c:__div_to_l_@f1)
  3181  000D70  C076  F001         	movff	(sprintf@fval+1),(c:__div_to_l_@f1+1)
  3182  000D74  C077  F002         	movff	(sprintf@fval+2),(c:__div_to_l_@f1+2)
  3183  000D78  C078  F003         	movff	(sprintf@fval+3),(c:__div_to_l_@f1+3)
  3184  000D7C  C079  F004         	movff	(sprintf@tmpval),(c:__div_to_l_@f2)
  3185  000D80  C072  F005         	movff	(sprintf@tmpval+1),(c:__div_to_l_@f2+1)
  3186  000D84  C073  F006         	movff	(sprintf@tmpval+2),(c:__div_to_l_@f2+2)
  3187  000D88  C074  F007         	movff	(sprintf@tmpval+3),(c:__div_to_l_@f2+3)
  3188  000D8C  C075  F008         	call	__div_to_l_	;wreg free
  3189  000D90  ECDE  F014         	movff	0+?__div_to_l_,(sprintf@val)
  3190  000D94  C001  F06C         	movff	1+?__div_to_l_,(sprintf@val+1)
  3191  000D98  C002  F06D         	movff	2+?__div_to_l_,(sprintf@val+2)
  3192  000D9C  C003  F06E         	movff	3+?__div_to_l_,(sprintf@val+3)
  3193  000DA0  C004  F06F         	
  3194                           	goto	l3375
  3195  000DA4  EFF0  F006         	
  3196                           l235:
  3197  000DA8                     	
  3198                           l3373:
  3199  000DA8                     	movff	(sprintf@fval),(c:__tdiv_to_l_@f1)
  3200  000DA8  C076  F001         	movff	(sprintf@fval+1),(c:__tdiv_to_l_@f1+1)
  3201  000DAC  C077  F002         	movff	(sprintf@fval+2),(c:__tdiv_to_l_@f1+2)
  3202  000DB0  C078  F003         	movff	(sprintf@fval+3),(c:__tdiv_to_l_@f1+3)
  3203  000DB4  C079  F004         	movff	(sprintf@tmpval),(c:__tdiv_to_l_@f2)
  3204  000DB8  C072  F005         	movff	(sprintf@tmpval+1),(c:__tdiv_to_l_@f2+1)
  3205  000DBC  C073  F006         	movff	(sprintf@tmpval+2),(c:__tdiv_to_l_@f2+2)
  3206  000DC0  C074  F007         	movff	(sprintf@tmpval+3),(c:__tdiv_to_l_@f2+3)
  3207  000DC4  C075  F008         	call	__tdiv_to_l_	;wreg free
  3208  000DC8  EC07  F014         	movff	0+?__tdiv_to_l_,(sprintf@val)
  3209  000DCC  C001  F06C         	movff	1+?__tdiv_to_l_,(sprintf@val+1)
  3210  000DD0  C002  F06D         	movff	2+?__tdiv_to_l_,(sprintf@val+2)
  3211  000DD4  C003  F06E         	movff	3+?__tdiv_to_l_,(sprintf@val+3)
  3212  000DD8  C004  F06F         	
  3213                           	goto	l3375
  3214  000DDC  EFF0  F006         	
  3215                           l237:
  3216  000DE0                     	line	1129
  3217                           	
  3218                           l3375:
  3219  000DE0                     ;doprnt.c: 1129: fval = 0.0;
  3220                           	movlw	low(normalize32(0.0000000000000000))
  3221  000DE0  0E00               	movlb	0	; () banked
  3222  000DE2  0100               	movwf	((sprintf@fval))&0ffh
  3223  000DE4  6F76               	movlw	high(normalize32(0.0000000000000000))
  3224  000DE6  0E00               	movwf	((sprintf@fval+1))&0ffh
  3225  000DE8  6F77               	movlw	low highword(normalize32(0.0000000000000000))
  3226  000DEA  0E00               	movwf	((sprintf@fval+2))&0ffh
  3227  000DEC  6F78               	movlw	high highword(normalize32(0.0000000000000000))
  3228  000DEE  0E00               	movwf	((sprintf@fval+3))&0ffh
  3229  000DF0  6F79               	line	1130
  3230                           ;doprnt.c: 1130: } else {
  3231                           	goto	l3381
  3232  000DF2  EF39  F007         	
  3233                           l229:; BSR set to: 0
  3234  000DF6                     
  3235                           	line	1131
  3236                           	
  3237                           l3377:
  3238  000DF6                     ;doprnt.c: 1131: val = (unsigned long)fval;
  3239                           	movff	(sprintf@fval),(c:___fltol@f1)
  3240  000DF6  C076  F031         	movff	(sprintf@fval+1),(c:___fltol@f1+1)
  3241  000DFA  C077  F032         	movff	(sprintf@fval+2),(c:___fltol@f1+2)
  3242  000DFE  C078  F033         	movff	(sprintf@fval+3),(c:___fltol@f1+3)
  3243  000E02  C079  F034         	call	___fltol	;wreg free
  3244  000E06  EC68  F016         	movff	0+?___fltol,(sprintf@val)
  3245  000E0A  C031  F06C         	movff	1+?___fltol,(sprintf@val+1)
  3246  000E0E  C032  F06D         	movff	2+?___fltol,(sprintf@val+2)
  3247  000E12  C033  F06E         	movff	3+?___fltol,(sprintf@val+3)
  3248  000E16  C034  F06F         	
  3249                           	line	1132
  3250                           ;doprnt.c: 1132: fval -= (double)val;
  3251                           	movff	(sprintf@fval),(c:___flsub@b)
  3252  000E1A  C076  F049         	movff	(sprintf@fval+1),(c:___flsub@b+1)
  3253  000E1E  C077  F04A         	movff	(sprintf@fval+2),(c:___flsub@b+2)
  3254  000E22  C078  F04B         	movff	(sprintf@fval+3),(c:___flsub@b+3)
  3255  000E26  C079  F04C         	movff	(sprintf@val),(c:___xxtofl@val)
  3256  000E2A  C06C  F001         	movff	(sprintf@val+1),(c:___xxtofl@val+1)
  3257  000E2E  C06D  F002         	movff	(sprintf@val+2),(c:___xxtofl@val+2)
  3258  000E32  C06E  F003         	movff	(sprintf@val+3),(c:___xxtofl@val+3)
  3259  000E36  C06F  F004         	movlw	(0)&0ffh
  3260  000E3A  0E00               	
  3261                           	call	___xxtofl
  3262  000E3C  EC14  F013         	movff	0+?___xxtofl,(c:___flsub@a)
  3263  000E40  C001  F04D         	movff	1+?___xxtofl,(c:___flsub@a+1)
  3264  000E44  C002  F04E         	movff	2+?___xxtofl,(c:___flsub@a+2)
  3265  000E48  C003  F04F         	movff	3+?___xxtofl,(c:___flsub@a+3)
  3266  000E4C  C004  F050         	
  3267                           	call	___flsub	;wreg free
  3268  000E50  EC87  F01A         	movff	0+?___flsub,(sprintf@fval)
  3269  000E54  C049  F076         	movff	1+?___flsub,(sprintf@fval+1)
  3270  000E58  C04A  F077         	movff	2+?___flsub,(sprintf@fval+2)
  3271  000E5C  C04B  F078         	movff	3+?___flsub,(sprintf@fval+3)
  3272  000E60  C04C  F079         	
  3273                           	line	1133
  3274                           	
  3275                           l3379:
  3276  000E64                     ;doprnt.c: 1133: exp = 0;
  3277                           	movlw	high(0)
  3278  000E64  0E00               	movlb	0	; () banked
  3279  000E66  0100               	movwf	((sprintf@exp+1))&0ffh
  3280  000E68  6F71               	movlw	low(0)
  3281  000E6A  0E00               	movwf	((sprintf@exp))&0ffh
  3282  000E6C  6F70               	goto	l3381
  3283  000E6E  EF39  F007         	line	1134
  3284                           	
  3285                           l238:; BSR set to: 0
  3286  000E72                     
  3287                           	line	1136
  3288                           	
  3289                           l3381:; BSR set to: 0
  3290  000E72                     
  3291                           ;doprnt.c: 1134: }
  3292                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3293                           	movlw	low(01h)
  3294  000E72  0E01               	movwf	((sprintf@c))&0ffh
  3295  000E74  6F7C               	
  3296                           l3383:; BSR set to: 0
  3297  000E76                     
  3298                           		movlw	10
  3299  000E76  0E0A               	xorwf	((sprintf@c))&0ffh,w
  3300  000E78  197C               	btfss	status,2
  3301  000E7A  A4D8               	goto	u3391
  3302  000E7C  EF42  F007         	goto	u3390
  3303  000E80  EF44  F007         
  3304                           u3391:
  3305  000E84                     	goto	l3387
  3306  000E84  EF48  F007         u3390:
  3307  000E88                     	goto	l3395
  3308  000E88  EF73  F007         	
  3309                           l3385:; BSR set to: 0
  3310  000E8C                     
  3311                           	goto	l3395
  3312  000E8C  EF73  F007         	line	1137
  3313                           	
  3314                           l239:; BSR set to: 0
  3315  000E90                     
  3316                           	
  3317                           l3387:; BSR set to: 0
  3318  000E90                     
  3319                           ;doprnt.c: 1137: if(val < dpowers[c])
  3320                           	movf	((sprintf@c))&0ffh,w
  3321  000E90  517C               	mullw	04h
  3322  000E92  0D04               	movlw	low((_dpowers))
  3323  000E94  0E69               	addwf	(prodl),c,w
  3324  000E96  24F3               	movwf	tblptrl
  3325  000E98  6EF6               	movlw	high((_dpowers))
  3326  000E9A  0E08               	addwfc	(prodh),c,w
  3327  000E9C  20F4               	movwf	tblptrh
  3328  000E9E  6EF7               	if	0	;There are less than 3 active tblptr bytes
  3329  000EA0                     	clrf	tblptru
  3331                           	global __mediumconst
  3334  000EA0                     		tblrd	*+
  3335  000EA0  0009               	movf	tablat,w
  3336  000EA2  50F5               	subwf	((sprintf@val))&0ffh,w
  3337  000EA4  5D6C               	tblrd	*+
  3338  000EA6  0009               	movf	tablat,w
  3339  000EA8  50F5               	subwfb	((sprintf@val+1))&0ffh,w
  3340  000EAA  596D               	tblrd	*+
  3341  000EAC  0009               	movf	tablat,w
  3342  000EAE  50F5               	subwfb	((sprintf@val+2))&0ffh,w
  3343  000EB0  596E               	tblrd	*+
  3344  000EB2  0009               	movf	tablat,w
  3345  000EB4  50F5               	subwfb	((sprintf@val+3))&0ffh,w
  3346  000EB6  596F               	btfsc	status,0
  3347  000EB8  B0D8               	goto	u3401
  3348  000EBA  EF61  F007         	goto	u3400
  3349  000EBE  EF63  F007         
  3350                           u3401:
  3351  000EC2                     	goto	l3391
  3352  000EC2  EF67  F007         u3400:
  3353  000EC6                     	goto	l3395
  3354  000EC6  EF73  F007         	line	1138
  3355                           	
  3356                           l3389:; BSR set to: 0
  3357  000ECA                     
  3358                           ;doprnt.c: 1138: break;
  3359                           	goto	l3395
  3360  000ECA  EF73  F007         	
  3361                           l241:; BSR set to: 0
  3362  000ECE                     
  3363                           	line	1136
  3364                           	
  3365                           l3391:; BSR set to: 0
  3366  000ECE                     
  3367                           	incf	((sprintf@c))&0ffh
  3368  000ECE  2B7C               	
  3369                           l3393:; BSR set to: 0
  3370  000ED0                     
  3371                           		movlw	10
  3372  000ED0  0E0A               	xorwf	((sprintf@c))&0ffh,w
  3373  000ED2  197C               	btfss	status,2
  3374  000ED4  A4D8               	goto	u3411
  3375  000ED6  EF6F  F007         	goto	u3410
  3376  000EDA  EF71  F007         
  3377                           u3411:
  3378  000EDE                     	goto	l3387
  3379  000EDE  EF48  F007         u3410:
  3380  000EE2                     	goto	l3395
  3381  000EE2  EF73  F007         	
  3382                           l240:; BSR set to: 0
  3383  000EE6                     
  3384                           	line	1188
  3385                           	
  3386                           l3395:; BSR set to: 0
  3387  000EE6                     
  3388                           ;doprnt.c: 1175: {
  3389                           ;doprnt.c: 1188: if(flag & 0x03)
  3390                           	movlw	03h
  3391  000EE6  0E03               	andwf	((sprintf@flag))&0ffh,w
  3392  000EE8  156A               	movwf	(??_sprintf+0+0)&0ffh,c
  3393  000EEA  6E57               	movlw	0
  3394  000EEC  0E00               	andwf	((sprintf@flag+1))&0ffh,w
  3395  000EEE  156B               	movwf	(??_sprintf+0+0+1)&0ffh,c
  3396  000EF0  6E58               	movf	(??_sprintf+0+0),c,w
  3397  000EF2  5057               iorwf	(??_sprintf+0+1),c,w
  3398  000EF4  1058               	btfsc	status,2
  3399  000EF6  B4D8               	goto	u3421
  3400  000EF8  EF80  F007         	goto	u3420
  3401  000EFC  EF82  F007         
  3402                           u3421:
  3403  000F00                     	goto	l3409
  3404  000F00  EFDA  F007         u3420:
  3405  000F04                     	line	1190
  3406                           	
  3407                           l3397:; BSR set to: 0
  3408  000F04                     
  3409                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  3410                           	movff	(c:sprintf@sp),fsr2l
  3411  000F04  C051  FFD9         	movff	(c:sprintf@sp+1),fsr2h
  3412  000F08  C052  FFDA         	movlw	low(02Dh)
  3413  000F0C  0E2D               	movwf	indf2
  3414  000F0E  6EDF               	
  3415                           l3399:; BSR set to: 0
  3416  000F10                     
  3417                           	infsnz	((c:sprintf@sp)),c
  3418  000F10  4A51               	incf	((c:sprintf@sp+1)),c
  3419  000F12  2A52               	goto	l3409
  3420  000F14  EFDA  F007         	
  3421                           l242:; BSR set to: 0
  3422  000F18                     
  3423                           	line	1196
  3424                           ;doprnt.c: 1195: }
  3425                           ;doprnt.c: 1196: while(c--) {
  3426                           	goto	l3409
  3427  000F18  EFDA  F007         	
  3428                           l244:; BSR set to: 0
  3429  000F1C                     
  3430                           	line	1201
  3431                           	
  3432                           l3401:; BSR set to: 0
  3433  000F1C                     
  3434                           ;doprnt.c: 1200: {
  3435                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  3436                           	movff	(sprintf@val),(c:___lldiv@dividend)
  3437  000F1C  C06C  F001         	movff	(sprintf@val+1),(c:___lldiv@dividend+1)
  3438  000F20  C06D  F002         	movff	(sprintf@val+2),(c:___lldiv@dividend+2)
  3439  000F24  C06E  F003         	movff	(sprintf@val+3),(c:___lldiv@dividend+3)
  3440  000F28  C06F  F004         	movf	((sprintf@c))&0ffh,w
  3441  000F2C  517C               	mullw	04h
  3442  000F2E  0D04               	movlw	low((_dpowers))
  3443  000F30  0E69               	addwf	(prodl),c,w
  3444  000F32  24F3               	movwf	tblptrl
  3445  000F34  6EF6               	movlw	high((_dpowers))
  3446  000F36  0E08               	addwfc	(prodh),c,w
  3447  000F38  20F4               	movwf	tblptrh
  3448  000F3A  6EF7               	if	0	;There are less than 3 active tblptr bytes
  3449  000F3C                     	clrf	tblptru
  3451                           	global __mediumconst
  3454  000F3C                     	tblrd*+
  3455  000F3C  0009               	
  3456                           	movff	tablat,(c:___lldiv@divisor)
  3457  000F3E  CFF5 F005          	tblrd*+
  3458  000F42  0009               	
  3459                           	movff	tablat,(c:___lldiv@divisor+1)
  3460  000F44  CFF5 F006          	tblrd*+
  3461  000F48  0009               	
  3462                           	movff	tablat,(c:___lldiv@divisor+2)
  3463  000F4A  CFF5 F007          	tblrd*-
  3464  000F4E  000A               	
  3465                           	movff	tablat,(c:___lldiv@divisor+3)
  3466  000F50  CFF5 F008          	call	___lldiv	;wreg free
  3467  000F54  EC96  F018         	movff	0+?___lldiv,(sprintf@tmpval)
  3468  000F58  C001  F072         	movff	1+?___lldiv,(sprintf@tmpval+1)
  3469  000F5C  C002  F073         	movff	2+?___lldiv,(sprintf@tmpval+2)
  3470  000F60  C003  F074         	movff	3+?___lldiv,(sprintf@tmpval+3)
  3471  000F64  C004  F075         	
  3472                           	line	1202
  3473                           	
  3474                           l3403:
  3475  000F68                     ;doprnt.c: 1202: tmpval.vd %= 10;
  3476                           	movff	(sprintf@tmpval),(c:___llmod@dividend)
  3477  000F68  C072  F001         	movff	(sprintf@tmpval+1),(c:___llmod@dividend+1)
  3478  000F6C  C073  F002         	movff	(sprintf@tmpval+2),(c:___llmod@dividend+2)
  3479  000F70  C074  F003         	movff	(sprintf@tmpval+3),(c:___llmod@dividend+3)
  3480  000F74  C075  F004         	movlw	low(0Ah)
  3481  000F78  0E0A               	movwf	((c:___llmod@divisor)),c
  3482  000F7A  6E05               	movlw	high(0Ah)
  3483  000F7C  0E00               	movwf	((c:___llmod@divisor+1)),c
  3484  000F7E  6E06               	movlw	low highword(0Ah)
  3485  000F80  0E00               	movwf	((c:___llmod@divisor+2)),c
  3486  000F82  6E07               	movlw	high highword(0Ah)
  3487  000F84  0E00               	movwf	((c:___llmod@divisor+3)),c
  3488  000F86  6E08               	call	___llmod	;wreg free
  3489  000F88  ECF2  F018         	movff	0+?___llmod,(sprintf@tmpval)
  3490  000F8C  C001  F072         	movff	1+?___llmod,(sprintf@tmpval+1)
  3491  000F90  C002  F073         	movff	2+?___llmod,(sprintf@tmpval+2)
  3492  000F94  C003  F074         	movff	3+?___llmod,(sprintf@tmpval+3)
  3493  000F98  C004  F075         	
  3494                           	line	1203
  3495                           	
  3496                           l3405:
  3497  000F9C                     ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  3498                           	movlb	0	; () banked
  3499  000F9C  0100               	movf	((sprintf@tmpval))&0ffh,w
  3500  000F9E  5172               	addlw	low(030h)
  3501  000FA0  0F30               	movff	(c:sprintf@sp),fsr2l
  3502  000FA2  C051  FFD9         	movff	(c:sprintf@sp+1),fsr2h
  3503  000FA6  C052  FFDA         	movwf	indf2,c
  3504  000FAA  6EDF               
  3505                           	
  3506                           l3407:; BSR set to: 0
  3507  000FAC                     
  3508                           	infsnz	((c:sprintf@sp)),c
  3509  000FAC  4A51               	incf	((c:sprintf@sp+1)),c
  3510  000FAE  2A52               	goto	l3409
  3511  000FB0  EFDA  F007         	line	1206
  3512                           	
  3513                           l243:; BSR set to: 0
  3514  000FB4                     
  3515                           	line	1196
  3516                           	
  3517                           l3409:; BSR set to: 0
  3518  000FB4                     
  3519                           	decf	((sprintf@c))&0ffh
  3520  000FB4  077C               		incf	((sprintf@c))&0ffh,w
  3521  000FB6  297C               	btfss	status,2
  3522  000FB8  A4D8               	goto	u3431
  3523  000FBA  EFE1  F007         	goto	u3430
  3524  000FBE  EFE3  F007         
  3525                           u3431:
  3526  000FC2                     	goto	l3401
  3527  000FC2  EF8E  F007         u3430:
  3528  000FC6                     	goto	l3417
  3529  000FC6  EFF4  F007         	
  3530                           l245:; BSR set to: 0
  3531  000FCA                     
  3532                           	line	1207
  3533                           ;doprnt.c: 1204: }
  3534                           ;doprnt.c: 1206: }
  3535                           ;doprnt.c: 1207: while(exp > 0) {
  3536                           	goto	l3417
  3537  000FCA  EFF4  F007         	
  3538                           l247:; BSR set to: 0
  3539  000FCE                     
  3540                           	line	1208
  3541                           	
  3542                           l3411:; BSR set to: 0
  3543  000FCE                     
  3544                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  3545                           	movff	(c:sprintf@sp),fsr2l
  3546  000FCE  C051  FFD9         	movff	(c:sprintf@sp+1),fsr2h
  3547  000FD2  C052  FFDA         	movlw	low(030h)
  3548  000FD6  0E30               	movwf	indf2
  3549  000FD8  6EDF               	
  3550                           l3413:; BSR set to: 0
  3551  000FDA                     
  3552                           	infsnz	((c:sprintf@sp)),c
  3553  000FDA  4A51               	incf	((c:sprintf@sp+1)),c
  3554  000FDC  2A52               	line	1209
  3555                           	
  3556                           l3415:; BSR set to: 0
  3557  000FDE                     
  3558                           ;doprnt.c: 1209: exp--;
  3559                           	decf	((sprintf@exp))&0ffh
  3560  000FDE  0770               	btfss	status,0
  3561  000FE0  A0D8               	decf	((sprintf@exp+1))&0ffh
  3562  000FE2  0771               	goto	l3417
  3563  000FE4  EFF4  F007         	line	1210
  3564                           	
  3565                           l246:; BSR set to: 0
  3566  000FE8                     
  3567                           	line	1207
  3568                           	
  3569                           l3417:; BSR set to: 0
  3570  000FE8                     
  3571                           	btfsc	((sprintf@exp+1))&0ffh,7
  3572  000FE8  BF71               	goto	u3440
  3573  000FEA  EF01  F008         	movf	((sprintf@exp+1))&0ffh,w
  3574  000FEE  5171               	bnz	u3441
  3575  000FF0  E106               	decf	((sprintf@exp))&0ffh,w
  3576  000FF2  0570               	btfsc	status,0
  3577  000FF4  B0D8               	goto	u3441
  3578  000FF6  EFFF  F007         	goto	u3440
  3579  000FFA  EF01  F008         
  3580                           u3441:
  3581  000FFE                     	goto	l3411
  3582  000FFE  EFE7  F007         u3440:
  3583  001002                     	goto	l3419
  3584  001002  EF03  F008         	
  3585                           l248:; BSR set to: 0
  3586  001006                     
  3587                           	line	1211
  3588                           	
  3589                           l3419:; BSR set to: 0
  3590  001006                     
  3591                           ;doprnt.c: 1210: }
  3592                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3593                           	btfsc	((sprintf@prec+1))&0ffh,7
  3594  001006  BF7B               	goto	u3451
  3595  001008  EF0F  F008         	movf	((sprintf@prec+1))&0ffh,w
  3596  00100C  517B               	bnz	u3450
  3597  00100E  E109               	movlw	9
  3598  001010  0E09               	subwf	 ((sprintf@prec))&0ffh,w
  3599  001012  5D7A               	btfss	status,0
  3600  001014  A0D8               	goto	u3451
  3601  001016  EF0F  F008         	goto	u3450
  3602  00101A  EF11  F008         
  3603                           u3451:
  3604  00101E                     	goto	l249
  3605  00101E  EF15  F008         u3450:
  3606  001022                     	line	1212
  3607                           	
  3608                           l3421:; BSR set to: 0
  3609  001022                     
  3610                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  3611                           	movlw	low(08h)
  3612  001022  0E08               	movwf	((sprintf@c))&0ffh
  3613  001024  6F7C               	goto	l3423
  3614  001026  EF19  F008         	line	1213
  3615                           	
  3616                           l249:; BSR set to: 0
  3617  00102A                     
  3618                           	line	1214
  3619                           ;doprnt.c: 1213: else
  3620                           ;doprnt.c: 1214: c = prec;
  3621                           	movff	(sprintf@prec),(sprintf@c)
  3622  00102A  C07A  F07C         	goto	l3423
  3623  00102E  EF19  F008         	
  3624                           l250:; BSR set to: 0
  3625  001032                     
  3626                           	line	1215
  3627                           	
  3628                           l3423:; BSR set to: 0
  3629  001032                     
  3630                           ;doprnt.c: 1215: prec -= c;
  3631                           	movf	((sprintf@c))&0ffh,w
  3632  001032  517C               	subwf	((sprintf@prec))&0ffh
  3633  001034  5F7A               	movlw	0
  3634  001036  0E00               	btfsc	((sprintf@c))&0ffh,7
  3635  001038  BF7C               	movlw	0ffh
  3636  00103A  0EFF               	subwfb	((sprintf@prec+1))&0ffh
  3637  00103C  5B7B               
  3638                           	line	1219
  3639                           	
  3640                           l3425:; BSR set to: 0
  3641  00103E                     
  3642                           ;doprnt.c: 1219: if(c)
  3643                           	movf	((sprintf@c))&0ffh,w
  3644  00103E  517C               	btfsc	status,2
  3645  001040  B4D8               	goto	u3461
  3646  001042  EF25  F008         	goto	u3460
  3647  001046  EF27  F008         u3461:
  3648  00104A                     	goto	l3431
  3649  00104A  EF31  F008         u3460:
  3650  00104E                     	line	1221
  3651                           	
  3652                           l3427:; BSR set to: 0
  3653  00104E                     
  3654                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  3655                           	movff	(c:sprintf@sp),fsr2l
  3656  00104E  C051  FFD9         	movff	(c:sprintf@sp+1),fsr2h
  3657  001052  C052  FFDA         	movlw	low(02Eh)
  3658  001056  0E2E               	movwf	indf2
  3659  001058  6EDF               	
  3660                           l3429:; BSR set to: 0
  3661  00105A                     
  3662                           	infsnz	((c:sprintf@sp)),c
  3663  00105A  4A51               	incf	((c:sprintf@sp+1)),c
  3664  00105C  2A52               	goto	l3431
  3665  00105E  EF31  F008         	
  3666                           l251:; BSR set to: 0
  3667  001062                     
  3668                           	line	1227
  3669                           	
  3670                           l3431:; BSR set to: 0
  3671  001062                     
  3672                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3673                           	movf	((sprintf@c))&0ffh,w
  3674  001062  517C               	
  3675                           	call	_scale
  3676  001064  EC3E  F00C         	movff	0+?_scale,(_sprintf$958)
  3677  001068  C028  F060         	movff	1+?_scale,(_sprintf$958+1)
  3678  00106C  C029  F061         	movff	2+?_scale,(_sprintf$958+2)
  3679  001070  C02A  F062         	movff	3+?_scale,(_sprintf$958+3)
  3680  001074  C02B  F063         	
  3681                           	
  3682                           l3433:
  3683  001078                     ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3684                           	movff	(sprintf@fval),(c:___flmul@a)
  3685  001078  C076  F013         	movff	(sprintf@fval+1),(c:___flmul@a+1)
  3686  00107C  C077  F014         	movff	(sprintf@fval+2),(c:___flmul@a+2)
  3687  001080  C078  F015         	movff	(sprintf@fval+3),(c:___flmul@a+3)
  3688  001084  C079  F016         	movff	(_sprintf$958),(c:___flmul@b)
  3689  001088  C060  F00F         	movff	(_sprintf$958+1),(c:___flmul@b+1)
  3690  00108C  C061  F010         	movff	(_sprintf$958+2),(c:___flmul@b+2)
  3691  001090  C062  F011         	movff	(_sprintf$958+3),(c:___flmul@b+3)
  3692  001094  C063  F012         	call	___flmul	;wreg free
  3693  001098  EC8C  F00E         	movff	0+?___flmul,(c:___fltol@f1)
  3694  00109C  C00F  F031         	movff	1+?___flmul,(c:___fltol@f1+1)
  3695  0010A0  C010  F032         	movff	2+?___flmul,(c:___fltol@f1+2)
  3696  0010A4  C011  F033         	movff	3+?___flmul,(c:___fltol@f1+3)
  3697  0010A8  C012  F034         	
  3698                           	call	___fltol	;wreg free
  3699  0010AC  EC68  F016         	movff	0+?___fltol,(sprintf@val)
  3700  0010B0  C031  F06C         	movff	1+?___fltol,(sprintf@val+1)
  3701  0010B4  C032  F06D         	movff	2+?___fltol,(sprintf@val+2)
  3702  0010B8  C033  F06E         	movff	3+?___fltol,(sprintf@val+3)
  3703  0010BC  C034  F06F         	
  3704                           	line	1228
  3705                           ;doprnt.c: 1228: while(c--) {
  3706                           	goto	l3445
  3707  0010C0  EFD5  F008         	
  3708                           l253:
  3709  0010C4                     	line	1229
  3710                           	
  3711                           l3435:
  3712  0010C4                     ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  3713                           	movff	(sprintf@val),(c:___lldiv@dividend)
  3714  0010C4  C06C  F001         	movff	(sprintf@val+1),(c:___lldiv@dividend+1)
  3715  0010C8  C06D  F002         	movff	(sprintf@val+2),(c:___lldiv@dividend+2)
  3716  0010CC  C06E  F003         	movff	(sprintf@val+3),(c:___lldiv@dividend+3)
  3717  0010D0  C06F  F004         	movlb	0	; () banked
  3718  0010D4  0100               	movf	((sprintf@c))&0ffh,w
  3719  0010D6  517C               	mullw	04h
  3720  0010D8  0D04               	movlw	low((_dpowers))
  3721  0010DA  0E69               	addwf	(prodl),c,w
  3722  0010DC  24F3               	movwf	tblptrl
  3723  0010DE  6EF6               	movlw	high((_dpowers))
  3724  0010E0  0E08               	addwfc	(prodh),c,w
  3725  0010E2  20F4               	movwf	tblptrh
  3726  0010E4  6EF7               	if	0	;There are less than 3 active tblptr bytes
  3727  0010E6                     	clrf	tblptru
  3729                           	global __mediumconst
  3732  0010E6                     	tblrd*+
  3733  0010E6  0009               	
  3734                           	movff	tablat,(c:___lldiv@divisor)
  3735  0010E8  CFF5 F005          	tblrd*+
  3736  0010EC  0009               	
  3737                           	movff	tablat,(c:___lldiv@divisor+1)
  3738  0010EE  CFF5 F006          	tblrd*+
  3739  0010F2  0009               	
  3740                           	movff	tablat,(c:___lldiv@divisor+2)
  3741  0010F4  CFF5 F007          	tblrd*-
  3742  0010F8  000A               	
  3743                           	movff	tablat,(c:___lldiv@divisor+3)
  3744  0010FA  CFF5 F008          	call	___lldiv	;wreg free
  3745  0010FE  EC96  F018         	movff	0+?___lldiv,(sprintf@tmpval)
  3746  001102  C001  F072         	movff	1+?___lldiv,(sprintf@tmpval+1)
  3747  001106  C002  F073         	movff	2+?___lldiv,(sprintf@tmpval+2)
  3748  00110A  C003  F074         	movff	3+?___lldiv,(sprintf@tmpval+3)
  3749  00110E  C004  F075         	
  3750                           	line	1230
  3751                           	
  3752                           l3437:
  3753  001112                     ;doprnt.c: 1230: tmpval.vd %= 10;
  3754                           	movff	(sprintf@tmpval),(c:___llmod@dividend)
  3755  001112  C072  F001         	movff	(sprintf@tmpval+1),(c:___llmod@dividend+1)
  3756  001116  C073  F002         	movff	(sprintf@tmpval+2),(c:___llmod@dividend+2)
  3757  00111A  C074  F003         	movff	(sprintf@tmpval+3),(c:___llmod@dividend+3)
  3758  00111E  C075  F004         	movlw	low(0Ah)
  3759  001122  0E0A               	movwf	((c:___llmod@divisor)),c
  3760  001124  6E05               	movlw	high(0Ah)
  3761  001126  0E00               	movwf	((c:___llmod@divisor+1)),c
  3762  001128  6E06               	movlw	low highword(0Ah)
  3763  00112A  0E00               	movwf	((c:___llmod@divisor+2)),c
  3764  00112C  6E07               	movlw	high highword(0Ah)
  3765  00112E  0E00               	movwf	((c:___llmod@divisor+3)),c
  3766  001130  6E08               	call	___llmod	;wreg free
  3767  001132  ECF2  F018         	movff	0+?___llmod,(sprintf@tmpval)
  3768  001136  C001  F072         	movff	1+?___llmod,(sprintf@tmpval+1)
  3769  00113A  C002  F073         	movff	2+?___llmod,(sprintf@tmpval+2)
  3770  00113E  C003  F074         	movff	3+?___llmod,(sprintf@tmpval+3)
  3771  001142  C004  F075         	
  3772                           	line	1231
  3773                           	
  3774                           l3439:
  3775  001146                     ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  3776                           	movlb	0	; () banked
  3777  001146  0100               	movf	((sprintf@tmpval))&0ffh,w
  3778  001148  5172               	addlw	low(030h)
  3779  00114A  0F30               	movff	(c:sprintf@sp),fsr2l
  3780  00114C  C051  FFD9         	movff	(c:sprintf@sp+1),fsr2h
  3781  001150  C052  FFDA         	movwf	indf2,c
  3782  001154  6EDF               
  3783                           	
  3784                           l3441:; BSR set to: 0
  3785  001156                     
  3786                           	infsnz	((c:sprintf@sp)),c
  3787  001156  4A51               	incf	((c:sprintf@sp+1)),c
  3788  001158  2A52               	line	1232
  3789                           	
  3790                           l3443:; BSR set to: 0
  3791  00115A                     
  3792                           ;doprnt.c: 1232: val %= dpowers[c];
  3793                           	movff	(sprintf@val),(c:___llmod@dividend)
  3794  00115A  C06C  F001         	movff	(sprintf@val+1),(c:___llmod@dividend+1)
  3795  00115E  C06D  F002         	movff	(sprintf@val+2),(c:___llmod@dividend+2)
  3796  001162  C06E  F003         	movff	(sprintf@val+3),(c:___llmod@dividend+3)
  3797  001166  C06F  F004         	movf	((sprintf@c))&0ffh,w
  3798  00116A  517C               	mullw	04h
  3799  00116C  0D04               	movlw	low((_dpowers))
  3800  00116E  0E69               	addwf	(prodl),c,w
  3801  001170  24F3               	movwf	tblptrl
  3802  001172  6EF6               	movlw	high((_dpowers))
  3803  001174  0E08               	addwfc	(prodh),c,w
  3804  001176  20F4               	movwf	tblptrh
  3805  001178  6EF7               	if	0	;There are less than 3 active tblptr bytes
  3806  00117A                     	clrf	tblptru
  3808                           	global __mediumconst
  3811  00117A                     	tblrd*+
  3812  00117A  0009               	
  3813                           	movff	tablat,(c:___llmod@divisor)
  3814  00117C  CFF5 F005          	tblrd*+
  3815  001180  0009               	
  3816                           	movff	tablat,(c:___llmod@divisor+1)
  3817  001182  CFF5 F006          	tblrd*+
  3818  001186  0009               	
  3819                           	movff	tablat,(c:___llmod@divisor+2)
  3820  001188  CFF5 F007          	tblrd*-
  3821  00118C  000A               	
  3822                           	movff	tablat,(c:___llmod@divisor+3)
  3823  00118E  CFF5 F008          	call	___llmod	;wreg free
  3824  001192  ECF2  F018         	movff	0+?___llmod,(sprintf@val)
  3825  001196  C001  F06C         	movff	1+?___llmod,(sprintf@val+1)
  3826  00119A  C002  F06D         	movff	2+?___llmod,(sprintf@val+2)
  3827  00119E  C003  F06E         	movff	3+?___llmod,(sprintf@val+3)
  3828  0011A2  C004  F06F         	
  3829                           	goto	l3445
  3830  0011A6  EFD5  F008         	line	1233
  3831                           	
  3832                           l252:
  3833  0011AA                     	line	1228
  3834                           	
  3835                           l3445:
  3836  0011AA                     	movlb	0	; () banked
  3837  0011AA  0100               	decf	((sprintf@c))&0ffh
  3838  0011AC  077C               		incf	((sprintf@c))&0ffh,w
  3839  0011AE  297C               	btfss	status,2
  3840  0011B0  A4D8               	goto	u3471
  3841  0011B2  EFDD  F008         	goto	u3470
  3842  0011B6  EFDF  F008         
  3843                           u3471:
  3844  0011BA                     	goto	l3435
  3845  0011BA  EF62  F008         u3470:
  3846  0011BE                     	goto	l3453
  3847  0011BE  EFF0  F008         	
  3848                           l254:; BSR set to: 0
  3849  0011C2                     
  3850                           	line	1235
  3851                           ;doprnt.c: 1233: }
  3852                           ;doprnt.c: 1235: while(prec) {
  3853                           	goto	l3453
  3854  0011C2  EFF0  F008         	
  3855                           l256:; BSR set to: 0
  3856  0011C6                     
  3857                           	line	1236
  3858                           	
  3859                           l3447:; BSR set to: 0
  3860  0011C6                     
  3861                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  3862                           	movff	(c:sprintf@sp),fsr2l
  3863  0011C6  C051  FFD9         	movff	(c:sprintf@sp+1),fsr2h
  3864  0011CA  C052  FFDA         	movlw	low(030h)
  3865  0011CE  0E30               	movwf	indf2
  3866  0011D0  6EDF               	
  3867                           l3449:; BSR set to: 0
  3868  0011D2                     
  3869                           	infsnz	((c:sprintf@sp)),c
  3870  0011D2  4A51               	incf	((c:sprintf@sp+1)),c
  3871  0011D4  2A52               	line	1237
  3872                           	
  3873                           l3451:; BSR set to: 0
  3874  0011D6                     
  3875                           ;doprnt.c: 1237: prec--;
  3876                           	decf	((sprintf@prec))&0ffh
  3877  0011D6  077A               	btfss	status,0
  3878  0011D8  A0D8               	decf	((sprintf@prec+1))&0ffh
  3879  0011DA  077B               	goto	l3453
  3880  0011DC  EFF0  F008         	line	1238
  3881                           	
  3882                           l255:; BSR set to: 0
  3883  0011E0                     
  3884                           	line	1235
  3885                           	
  3886                           l3453:; BSR set to: 0
  3887  0011E0                     
  3888                           	movf	((sprintf@prec))&0ffh,w
  3889  0011E0  517A               iorwf	((sprintf@prec+1))&0ffh,w
  3890  0011E2  117B               	btfss	status,2
  3891  0011E4  A4D8               	goto	u3481
  3892  0011E6  EFF7  F008         	goto	u3480
  3893  0011EA  EFF9  F008         
  3894                           u3481:
  3895  0011EE                     	goto	l3447
  3896  0011EE  EFE3  F008         u3480:
  3897  0011F2                     	goto	l3475
  3898  0011F2  EF5D  F009         	
  3899                           l257:; BSR set to: 0
  3900  0011F6                     
  3901                           	line	1245
  3902                           ;doprnt.c: 1238: }
  3903                           ;doprnt.c: 1245: continue;
  3904                           	goto	l3475
  3905  0011F6  EF5D  F009         	line	1246
  3906                           	
  3907                           l220:; BSR set to: 0
  3908  0011FA                     
  3909                           	line	1290
  3910                           	
  3911                           l3455:; BSR set to: 0
  3912  0011FA                     
  3913                           ;doprnt.c: 1246: }
  3914                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  3915                           	movf	((sprintf@prec))&0ffh,w
  3916  0011FA  517A               iorwf	((sprintf@prec+1))&0ffh,w
  3917  0011FC  117B               	btfss	status,2
  3918  0011FE  A4D8               	goto	u3491
  3919  001200  EF04  F009         	goto	u3490
  3920  001204  EF06  F009         
  3921                           u3491:
  3922  001208                     	goto	l3461
  3923  001208  EF15  F009         u3490:
  3924  00120C                     	
  3925                           l3457:; BSR set to: 0
  3926  00120C                     
  3927                           	movf	((sprintf@val))&0ffh,w
  3928  00120C  516C               iorwf	((sprintf@val+1))&0ffh,w
  3929  00120E  116D               iorwf	((sprintf@val+2))&0ffh,w
  3930  001210  116E               iorwf	((sprintf@val+3))&0ffh,w
  3931  001212  116F               	btfss	status,2
  3932  001214  A4D8               	goto	u3501
  3933  001216  EF0F  F009         	goto	u3500
  3934  00121A  EF11  F009         
  3935                           u3501:
  3936  00121E                     	goto	l3461
  3937  00121E  EF15  F009         u3500:
  3938  001222                     	line	1291
  3939                           	
  3940                           l3459:; BSR set to: 0
  3941  001222                     
  3942                           ;doprnt.c: 1291: prec++;
  3943                           	infsnz	((sprintf@prec))&0ffh
  3944  001222  4B7A               	incf	((sprintf@prec+1))&0ffh
  3945  001224  2B7B               	goto	l3461
  3946  001226  EF15  F009         	
  3947                           l258:; BSR set to: 0
  3948  00122A                     
  3949                           	line	1339
  3950                           	
  3951                           l3461:; BSR set to: 0
  3952  00122A                     
  3953                           ;doprnt.c: 1339: if(c < prec)
  3954                           	movlw	080h
  3955  00122A  0E80               	btfsc	((sprintf@c))&0ffh,7
  3956  00122C  BF7C               	movlw	07fh
  3957  00122E  0E7F               	movwf	(??_sprintf+0+0)&0ffh,c
  3958  001230  6E57               	movf	((sprintf@prec))&0ffh,w
  3959  001232  517A               	subwf	((sprintf@c))&0ffh,w
  3960  001234  5D7C               	movf	((sprintf@prec+1))&0ffh,w
  3961  001236  517B               	xorlw	80h
  3962  001238  0A80               	subwfb	(??_sprintf+0+0)&0ffh,c,w
  3963  00123A  5857               	btfsc	status,0
  3964  00123C  B0D8               	goto	u3511
  3965  00123E  EF23  F009         	goto	u3510
  3966  001242  EF25  F009         u3511:
  3967  001246                     	goto	l3465
  3968  001246  EF29  F009         u3510:
  3969  00124A                     	line	1340
  3970                           	
  3971                           l3463:; BSR set to: 0
  3972  00124A                     
  3973                           ;doprnt.c: 1340: c = prec;
  3974                           	movff	(sprintf@prec),(sprintf@c)
  3975  00124A  C07A  F07C         	goto	l3469
  3976  00124E  EF42  F009         	line	1341
  3977                           	
  3978                           l259:; BSR set to: 0
  3979  001252                     
  3980                           	
  3981                           l3465:; BSR set to: 0
  3982  001252                     
  3983                           ;doprnt.c: 1341: else if(prec < c)
  3984                           	movf	((sprintf@prec+1))&0ffh,w
  3985  001252  517B               	xorlw	80h
  3986  001254  0A80               	movwf	(??_sprintf+0+0)&0ffh,c
  3987  001256  6E57               	movf	((sprintf@c))&0ffh,w
  3988  001258  517C               	subwf	((sprintf@prec))&0ffh,w
  3989  00125A  5D7A               	movlw	080h
  3990  00125C  0E80               	btfsc	((sprintf@c))&0ffh,7
  3991  00125E  BF7C               	movlw	07fh
  3992  001260  0E7F               	subwfb	(??_sprintf+0+0)&0ffh,c,w
  3993  001262  5857               	btfsc	status,0
  3994  001264  B0D8               	goto	u3521
  3995  001266  EF37  F009         	goto	u3520
  3996  00126A  EF39  F009         u3521:
  3997  00126E                     	goto	l3469
  3998  00126E  EF42  F009         u3520:
  3999  001272                     	line	1342
  4000                           	
  4001                           l3467:; BSR set to: 0
  4002  001272                     
  4003                           ;doprnt.c: 1342: prec = c;
  4004                           	movf	((sprintf@c))&0ffh,w
  4005  001272  517C               	movwf	((sprintf@prec))&0ffh
  4006  001274  6F7A               	clrf	((sprintf@prec+1))&0ffh
  4007  001276  6B7B               	btfsc	((sprintf@prec))&0ffh,7
  4008  001278  BF7A               	decf	((sprintf@prec+1))&0ffh
  4009  00127A  077B               	goto	l3469
  4010  00127C  EF42  F009         	
  4011                           l261:; BSR set to: 0
  4012  001280                     
  4013                           	goto	l3469
  4014  001280  EF42  F009         	line	1422
  4015                           	
  4016                           l260:; BSR set to: 0
  4017  001284                     
  4018                           	line	1438
  4019                           	
  4020                           l3469:; BSR set to: 0
  4021  001284                     
  4022                           ;doprnt.c: 1422: {
  4023                           ;doprnt.c: 1438: if(flag & 0x03)
  4024                           	movlw	03h
  4025  001284  0E03               	andwf	((sprintf@flag))&0ffh,w
  4026  001286  156A               	movwf	(??_sprintf+0+0)&0ffh,c
  4027  001288  6E57               	movlw	0
  4028  00128A  0E00               	andwf	((sprintf@flag+1))&0ffh,w
  4029  00128C  156B               	movwf	(??_sprintf+0+0+1)&0ffh,c
  4030  00128E  6E58               	movf	(??_sprintf+0+0),c,w
  4031  001290  5057               iorwf	(??_sprintf+0+1),c,w
  4032  001292  1058               	btfsc	status,2
  4033  001294  B4D8               	goto	u3531
  4034  001296  EF4F  F009         	goto	u3530
  4035  00129A  EF51  F009         
  4036                           u3531:
  4037  00129E                     	goto	l3475
  4038  00129E  EF5D  F009         u3530:
  4039  0012A2                     	line	1439
  4040                           	
  4041                           l3471:; BSR set to: 0
  4042  0012A2                     
  4043                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  4044                           	movff	(c:sprintf@sp),fsr2l
  4045  0012A2  C051  FFD9         	movff	(c:sprintf@sp+1),fsr2h
  4046  0012A6  C052  FFDA         	movlw	low(02Dh)
  4047  0012AA  0E2D               	movwf	indf2
  4048  0012AC  6EDF               	
  4049                           l3473:; BSR set to: 0
  4050  0012AE                     
  4051                           	infsnz	((c:sprintf@sp)),c
  4052  0012AE  4A51               	incf	((c:sprintf@sp+1)),c
  4053  0012B0  2A52               	goto	l3475
  4054  0012B2  EF5D  F009         	
  4055                           l262:; BSR set to: 0
  4056  0012B6                     
  4057                           	goto	l3475
  4058  0012B6  EF5D  F009         	line	1533
  4059                           	
  4060                           l201:; BSR set to: 0
  4061  0012BA                     
  4062                           	line	536
  4063                           	
  4064                           l3475:; BSR set to: 0
  4065  0012BA                     
  4066                           	movff	(c:sprintf@f),tblptrl
  4067  0012BA  C053  FFF6         	movff	(c:sprintf@f+1),tblptrh
  4068  0012BE  C054  FFF7         	infsnz	((c:sprintf@f)),c
  4069  0012C2  4A53               	incf	((c:sprintf@f+1)),c
  4070  0012C4  2A54               	if	0	;tblptru may be non-zero
  4071  0012C6                     	clrf	tblptru
  4073  0012C6                     	if	0	;tblptru may be non-zero
  4074  0012C6                     	global __mediumconst
  4075                           movlw	low highword(__mediumconst)
  4078  0012C6                     	tblrd	*
  4079  0012C6  0008               	
  4080                           	movff	tablat,(sprintf@c)
  4081  0012C8  CFF5 F07C          	movf	((sprintf@c))&0ffh,w
  4082  0012CC  517C               	btfss	status,2
  4083  0012CE  A4D8               	goto	u3541
  4084  0012D0  EF6C  F009         	goto	u3540
  4085  0012D4  EF6E  F009         u3541:
  4086  0012D8                     	goto	l3259
  4087  0012D8  EF5F  F004         u3540:
  4088  0012DC                     	goto	l3477
  4089  0012DC  EF72  F009         	
  4090                           l263:; BSR set to: 0
  4091  0012E0                     
  4092                           	goto	l3477
  4093  0012E0  EF72  F009         	line	1535
  4094                           ;doprnt.c: 1469: }
  4095                           ;doprnt.c: 1533: }
  4096                           ;doprnt.c: 1535: alldone:
  4097                           	
  4098                           l211:; BSR set to: 0
  4099  0012E4                     
  4100                           	line	1538
  4101                           	
  4102                           l3477:; BSR set to: 0
  4103  0012E4                     
  4104                           ;doprnt.c: 1538: *sp = 0;
  4105                           	movff	(c:sprintf@sp),fsr2l
  4106  0012E4  C051  FFD9         	movff	(c:sprintf@sp+1),fsr2h
  4107  0012E8  C052  FFDA         	movlw	low(0)
  4108  0012EC  0E00               	movwf	indf2
  4109  0012EE  6EDF               	goto	l264
  4110  0012F0  EF7A  F009         	line	1540
  4111                           	
  4112                           l3479:; BSR set to: 0
  4113  0012F4                     
  4114                           	line	1541
  4115                           ;doprnt.c: 1540: return 0;
  4116                           ;	Return value of _sprintf is never used
  4117                           	
  4118                           l264:; BSR set to: 0
  4119  0012F4                     
  4120                           	return	;funcret
  4121  0012F4  0012               	opt stack 0
  4122                           GLOBAL	__end_of_sprintf
  4123                           	__end_of_sprintf:
  4124  0012F6                     	signat	_sprintf,4698
  4125                           	global	_scale
  4126                           
  4127 ;; *************** function _scale *****************
  4128 ;; Defined at:
  4129 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  4130 ;; Parameters:    Size  Location     Type
  4131 ;;  scl             1    wreg     char 
  4132 ;; Auto vars:     Size  Location     Type
  4133 ;;  scl             1   47[COMRAM] char 
  4134 ;; Return value:  Size  Location     Type
  4135 ;;                  4   39[COMRAM] char 
  4136 ;; Registers used:
  4137 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4138 ;; Tracked objects:
  4139 ;;		On entry : 0/0
  4140 ;;		On exit  : 0/0
  4141 ;;		Unchanged: 0/0
  4142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4143 ;;      Params:         4       0       0       0       0       0       0       0       0
  4144 ;;      Locals:         5       0       0       0       0       0       0       0       0
  4145 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4146 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4147 ;;Total ram usage:        9 bytes
  4148 ;; Hardware stack levels used:    1
  4149 ;; Hardware stack levels required when called:    1
  4150 ;; This function calls:
  4151 ;;		___awdiv
  4152 ;;		___awmod
  4153 ;;		___flmul
  4154 ;; This function is called by:
  4155 ;;		_sprintf
  4156 ;; This function uses a non-reentrant model
  4157 ;;
  4158                           psect	text2,class=CODE,space=0,reloc=2,group=0
  4159                           	line	425
  4160                           global __ptext2
  4161                           __ptext2:
  4162  00187C                     psect	text2
  4163                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  4164                           	line	425
  4165                           	global	__size_of_scale
  4166                           	__size_of_scale	equ	__end_of_scale-_scale
  4167  0000                     	
  4168                           _scale:; BSR set to: 0
  4169  00187C                     
  4170                           ;incstack = 0
  4171                           	opt	stack 28
  4172                           ;scale@scl stored from wreg
  4173                           	movwf	((c:scale@scl)),c
  4174  00187C  6E30               	line	428
  4175                           	
  4176                           l2839:
  4177  00187E                     ;doprnt.c: 428: if(scl < 0) {
  4178                           	btfsc	((c:scale@scl)),c,7
  4179  00187E  BE30               	goto	u2540
  4180  001880  EF46  F00C         	goto	u2541
  4181  001884  EF44  F00C         
  4182                           u2541:
  4183  001888                     	goto	l2859
  4184  001888  EF6A  F00D         u2540:
  4185  00188C                     	line	429
  4186                           	
  4187                           l2841:
  4188  00188C                     ;doprnt.c: 429: scl = -scl;
  4189                           	negf	((c:scale@scl)),c
  4190  00188C  6C30               	line	430
  4191                           ;doprnt.c: 430: if(scl>=110)
  4192                           		movf	((c:scale@scl)),c,w
  4193  00188E  5030               	xorlw	80h
  4194  001890  0A80               	addlw	-(80h^06Eh)
  4195  001892  0F12               	btfss	status,0
  4196  001894  A0D8               	goto	u2551
  4197  001896  EF4F  F00C         	goto	u2550
  4198  00189A  EF51  F00C         
  4199                           u2551:
  4200  00189E                     	goto	l2849
  4201  00189E  EFEE  F00C         u2550:
  4202  0018A2                     	line	431
  4203                           	
  4204                           l2843:
  4205  0018A2                     ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
                                 %10];
  4206                           	movlw	high(0Ah)
  4207  0018A2  0E00               	movwf	((c:___awdiv@divisor+1)),c
  4208  0018A4  6E0A               	movlw	low(0Ah)
  4209  0018A6  0E0A               	movwf	((c:___awdiv@divisor)),c
  4210  0018A8  6E09               	movlw	high(064h)
  4211  0018AA  0E00               	movwf	((c:___awmod@divisor+1)),c
  4212  0018AC  6E04               	movlw	low(064h)
  4213  0018AE  0E64               	movwf	((c:___awmod@divisor)),c
  4214  0018B0  6E03               	movf	((c:scale@scl)),c,w
  4215  0018B2  5030               	movwf	((c:___awmod@dividend)),c
  4216  0018B4  6E01               	clrf	((c:___awmod@dividend+1)),c
  4217  0018B6  6A02               	btfsc	((c:___awmod@dividend)),c,7
  4218  0018B8  BE01               	decf	((c:___awmod@dividend+1)),c
  4219  0018BA  0602               	call	___awmod	;wreg free
  4220  0018BC  EC2A  F018         	movff	0+?___awmod,(c:___awdiv@dividend)
  4221  0018C0  C001  F007         	movff	1+?___awmod,(c:___awdiv@dividend+1)
  4222  0018C4  C002  F008         	call	___awdiv	;wreg free
  4223  0018C8  ECB4  F017         	bcf	status,0
  4224  0018CC  90D8               	rlcf	(0+?___awdiv),c
  4225  0018CE  3607               	rlcf	(1+?___awdiv),c
  4226  0018D0  3608               	bcf	status,0
  4227  0018D2  90D8               	rlcf	(0+?___awdiv),c
  4228  0018D4  3607               	rlcf	(1+?___awdiv),c
  4229  0018D6  3608               	movlw	024h
  4230  0018D8  0E24               	addwf	(0+?___awdiv),c
  4231  0018DA  2607               	movlw	0
  4232  0018DC  0E00               	addwfc	(1+?___awdiv),c
  4233  0018DE  2208               	movlw	low((__npowers_))
  4234  0018E0  0E35               	addwf	(0+?___awdiv),c,w
  4235  0018E2  2407               	movwf	tblptrl
  4236  0018E4  6EF6               	movlw	high((__npowers_))
  4237  0018E6  0E08               	addwfc	(1+?___awdiv),c,w
  4238  0018E8  2008               	movwf	tblptrh
  4239  0018EA  6EF7               	if	0	;There are less than 3 active tblptr bytes
  4240  0018EC                     	clrf	tblptru
  4242                           	global __mediumconst
  4245  0018EC                     	tblrd*+
  4246  0018EC  0009               	
  4247                           	movff	tablat,(c:___flmul@a)
  4248  0018EE  CFF5 F013          	tblrd*+
  4249  0018F2  0009               	
  4250                           	movff	tablat,(c:___flmul@a+1)
  4251  0018F4  CFF5 F014          	tblrd*+
  4252  0018F8  0009               	
  4253                           	movff	tablat,(c:___flmul@a+2)
  4254  0018FA  CFF5 F015          	tblrd*-
  4255  0018FE  000A               	
  4256                           	movff	tablat,(c:___flmul@a+3)
  4257  001900  CFF5 F016          	movlw	high(064h)
  4258  001904  0E00               	movwf	((c:___awdiv@divisor+1)),c
  4259  001906  6E0A               	movlw	low(064h)
  4260  001908  0E64               	movwf	((c:___awdiv@divisor)),c
  4261  00190A  6E09               	movf	((c:scale@scl)),c,w
  4262  00190C  5030               	movwf	((c:___awdiv@dividend)),c
  4263  00190E  6E07               	clrf	((c:___awdiv@dividend+1)),c
  4264  001910  6A08               	btfsc	((c:___awdiv@dividend)),c,7
  4265  001912  BE07               	decf	((c:___awdiv@dividend+1)),c
  4266  001914  0608               	call	___awdiv	;wreg free
  4267  001916  ECB4  F017         	bcf	status,0
  4268  00191A  90D8               	rlcf	(0+?___awdiv),c
  4269  00191C  3607               	rlcf	(1+?___awdiv),c
  4270  00191E  3608               	bcf	status,0
  4271  001920  90D8               	rlcf	(0+?___awdiv),c
  4272  001922  3607               	rlcf	(1+?___awdiv),c
  4273  001924  3608               	movlw	048h
  4274  001926  0E48               	addwf	(0+?___awdiv),c
  4275  001928  2607               	movlw	0
  4276  00192A  0E00               	addwfc	(1+?___awdiv),c
  4277  00192C  2208               	movlw	low((__npowers_))
  4278  00192E  0E35               	addwf	(0+?___awdiv),c,w
  4279  001930  2407               	movwf	tblptrl
  4280  001932  6EF6               	movlw	high((__npowers_))
  4281  001934  0E08               	addwfc	(1+?___awdiv),c,w
  4282  001936  2008               	movwf	tblptrh
  4283  001938  6EF7               	if	0	;There are less than 3 active tblptr bytes
  4284  00193A                     	clrf	tblptru
  4286                           	global __mediumconst
  4289  00193A                     	tblrd*+
  4290  00193A  0009               	
  4291                           	movff	tablat,(c:___flmul@b)
  4292  00193C  CFF5 F00F          	tblrd*+
  4293  001940  0009               	
  4294                           	movff	tablat,(c:___flmul@b+1)
  4295  001942  CFF5 F010          	tblrd*+
  4296  001946  0009               	
  4297                           	movff	tablat,(c:___flmul@b+2)
  4298  001948  CFF5 F011          	tblrd*-
  4299  00194C  000A               	
  4300                           	movff	tablat,(c:___flmul@b+3)
  4301  00194E  CFF5 F012          	call	___flmul	;wreg free
  4302  001952  EC8C  F00E         	movff	0+?___flmul,(c:_scale$957)
  4303  001956  C00F  F02C         	movff	1+?___flmul,(c:_scale$957+1)
  4304  00195A  C010  F02D         	movff	2+?___flmul,(c:_scale$957+2)
  4305  00195E  C011  F02E         	movff	3+?___flmul,(c:_scale$957+3)
  4306  001962  C012  F02F         	
  4307                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
                                 %10];
  4308                           	movff	(c:_scale$957),(c:___flmul@b)
  4309  001966  C02C  F00F         	movff	(c:_scale$957+1),(c:___flmul@b+1)
  4310  00196A  C02D  F010         	movff	(c:_scale$957+2),(c:___flmul@b+2)
  4311  00196E  C02E  F011         	movff	(c:_scale$957+3),(c:___flmul@b+3)
  4312  001972  C02F  F012         	movlw	high(0Ah)
  4313  001976  0E00               	movwf	((c:___awmod@divisor+1)),c
  4314  001978  6E04               	movlw	low(0Ah)
  4315  00197A  0E0A               	movwf	((c:___awmod@divisor)),c
  4316  00197C  6E03               	movf	((c:scale@scl)),c,w
  4317  00197E  5030               	movwf	((c:___awmod@dividend)),c
  4318  001980  6E01               	clrf	((c:___awmod@dividend+1)),c
  4319  001982  6A02               	btfsc	((c:___awmod@dividend)),c,7
  4320  001984  BE01               	decf	((c:___awmod@dividend+1)),c
  4321  001986  0602               	call	___awmod	;wreg free
  4322  001988  EC2A  F018         	bcf	status,0
  4323  00198C  90D8               	rlcf	(0+?___awmod),c
  4324  00198E  3601               	rlcf	(1+?___awmod),c
  4325  001990  3602               	bcf	status,0
  4326  001992  90D8               	rlcf	(0+?___awmod),c
  4327  001994  3601               	rlcf	(1+?___awmod),c
  4328  001996  3602               	movlw	low((__npowers_))
  4329  001998  0E35               	addwf	(0+?___awmod),c,w
  4330  00199A  2401               	movwf	tblptrl
  4331  00199C  6EF6               	movlw	high((__npowers_))
  4332  00199E  0E08               	addwfc	(1+?___awmod),c,w
  4333  0019A0  2002               	movwf	tblptrh
  4334  0019A2  6EF7               	if	0	;There are less than 3 active tblptr bytes
  4335  0019A4                     	clrf	tblptru
  4337                           	global __mediumconst
  4340  0019A4                     	tblrd*+
  4341  0019A4  0009               	
  4342                           	movff	tablat,(c:___flmul@a)
  4343  0019A6  CFF5 F013          	tblrd*+
  4344  0019AA  0009               	
  4345                           	movff	tablat,(c:___flmul@a+1)
  4346  0019AC  CFF5 F014          	tblrd*+
  4347  0019B0  0009               	
  4348                           	movff	tablat,(c:___flmul@a+2)
  4349  0019B2  CFF5 F015          	tblrd*-
  4350  0019B6  000A               	
  4351                           	movff	tablat,(c:___flmul@a+3)
  4352  0019B8  CFF5 F016          	call	___flmul	;wreg free
  4353  0019BC  EC8C  F00E         	movff	0+?___flmul,(c:?_scale)
  4354  0019C0  C00F  F028         	movff	1+?___flmul,(c:?_scale+1)
  4355  0019C4  C010  F029         	movff	2+?___flmul,(c:?_scale+2)
  4356  0019C8  C011  F02A         	movff	3+?___flmul,(c:?_scale+3)
  4357  0019CC  C012  F02B         	
  4358                           	goto	l193
  4359  0019D0  EF8B  F00E         	
  4360                           l2845:
  4361  0019D4                     	goto	l193
  4362  0019D4  EF8B  F00E         	
  4363                           l2847:
  4364  0019D8                     	goto	l2855
  4365  0019D8  EF52  F00D         	line	432
  4366                           	
  4367                           l192:
  4368  0019DC                     	
  4369                           l2849:
  4370  0019DC                     ;doprnt.c: 432: else if(scl > 10)
  4371                           		movf	((c:scale@scl)),c,w
  4372  0019DC  5030               	xorlw	80h
  4373  0019DE  0A80               	addlw	-(80h^0Bh)
  4374  0019E0  0F75               	btfss	status,0
  4375  0019E2  A0D8               	goto	u2561
  4376  0019E4  EFF6  F00C         	goto	u2560
  4377  0019E8  EFF8  F00C         
  4378                           u2561:
  4379  0019EC                     	goto	l2855
  4380  0019EC  EF52  F00D         u2560:
  4381  0019F0                     	line	433
  4382                           	
  4383                           l2851:
  4384  0019F0                     ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  4385                           	movlw	high(0Ah)
  4386  0019F0  0E00               	movwf	((c:___awdiv@divisor+1)),c
  4387  0019F2  6E0A               	movlw	low(0Ah)
  4388  0019F4  0E0A               	movwf	((c:___awdiv@divisor)),c
  4389  0019F6  6E09               	movf	((c:scale@scl)),c,w
  4390  0019F8  5030               	movwf	((c:___awdiv@dividend)),c
  4391  0019FA  6E07               	clrf	((c:___awdiv@dividend+1)),c
  4392  0019FC  6A08               	btfsc	((c:___awdiv@dividend)),c,7
  4393  0019FE  BE07               	decf	((c:___awdiv@dividend+1)),c
  4394  001A00  0608               	call	___awdiv	;wreg free
  4395  001A02  ECB4  F017         	bcf	status,0
  4396  001A06  90D8               	rlcf	(0+?___awdiv),c
  4397  001A08  3607               	rlcf	(1+?___awdiv),c
  4398  001A0A  3608               	bcf	status,0
  4399  001A0C  90D8               	rlcf	(0+?___awdiv),c
  4400  001A0E  3607               	rlcf	(1+?___awdiv),c
  4401  001A10  3608               	movlw	024h
  4402  001A12  0E24               	addwf	(0+?___awdiv),c
  4403  001A14  2607               	movlw	0
  4404  001A16  0E00               	addwfc	(1+?___awdiv),c
  4405  001A18  2208               	movlw	low((__npowers_))
  4406  001A1A  0E35               	addwf	(0+?___awdiv),c,w
  4407  001A1C  2407               	movwf	tblptrl
  4408  001A1E  6EF6               	movlw	high((__npowers_))
  4409  001A20  0E08               	addwfc	(1+?___awdiv),c,w
  4410  001A22  2008               	movwf	tblptrh
  4411  001A24  6EF7               	if	0	;There are less than 3 active tblptr bytes
  4412  001A26                     	clrf	tblptru
  4414                           	global __mediumconst
  4417  001A26                     	tblrd*+
  4418  001A26  0009               	
  4419                           	movff	tablat,(c:___flmul@b)
  4420  001A28  CFF5 F00F          	tblrd*+
  4421  001A2C  0009               	
  4422                           	movff	tablat,(c:___flmul@b+1)
  4423  001A2E  CFF5 F010          	tblrd*+
  4424  001A32  0009               	
  4425                           	movff	tablat,(c:___flmul@b+2)
  4426  001A34  CFF5 F011          	tblrd*-
  4427  001A38  000A               	
  4428                           	movff	tablat,(c:___flmul@b+3)
  4429  001A3A  CFF5 F012          	movlw	high(0Ah)
  4430  001A3E  0E00               	movwf	((c:___awmod@divisor+1)),c
  4431  001A40  6E04               	movlw	low(0Ah)
  4432  001A42  0E0A               	movwf	((c:___awmod@divisor)),c
  4433  001A44  6E03               	movf	((c:scale@scl)),c,w
  4434  001A46  5030               	movwf	((c:___awmod@dividend)),c
  4435  001A48  6E01               	clrf	((c:___awmod@dividend+1)),c
  4436  001A4A  6A02               	btfsc	((c:___awmod@dividend)),c,7
  4437  001A4C  BE01               	decf	((c:___awmod@dividend+1)),c
  4438  001A4E  0602               	call	___awmod	;wreg free
  4439  001A50  EC2A  F018         	bcf	status,0
  4440  001A54  90D8               	rlcf	(0+?___awmod),c
  4441  001A56  3601               	rlcf	(1+?___awmod),c
  4442  001A58  3602               	bcf	status,0
  4443  001A5A  90D8               	rlcf	(0+?___awmod),c
  4444  001A5C  3601               	rlcf	(1+?___awmod),c
  4445  001A5E  3602               	movlw	low((__npowers_))
  4446  001A60  0E35               	addwf	(0+?___awmod),c,w
  4447  001A62  2401               	movwf	tblptrl
  4448  001A64  6EF6               	movlw	high((__npowers_))
  4449  001A66  0E08               	addwfc	(1+?___awmod),c,w
  4450  001A68  2002               	movwf	tblptrh
  4451  001A6A  6EF7               	if	0	;There are less than 3 active tblptr bytes
  4452  001A6C                     	clrf	tblptru
  4454                           	global __mediumconst
  4457  001A6C                     	tblrd*+
  4458  001A6C  0009               	
  4459                           	movff	tablat,(c:___flmul@a)
  4460  001A6E  CFF5 F013          	tblrd*+
  4461  001A72  0009               	
  4462                           	movff	tablat,(c:___flmul@a+1)
  4463  001A74  CFF5 F014          	tblrd*+
  4464  001A78  0009               	
  4465                           	movff	tablat,(c:___flmul@a+2)
  4466  001A7A  CFF5 F015          	tblrd*-
  4467  001A7E  000A               	
  4468                           	movff	tablat,(c:___flmul@a+3)
  4469  001A80  CFF5 F016          	call	___flmul	;wreg free
  4470  001A84  EC8C  F00E         	movff	0+?___flmul,(c:?_scale)
  4471  001A88  C00F  F028         	movff	1+?___flmul,(c:?_scale+1)
  4472  001A8C  C010  F029         	movff	2+?___flmul,(c:?_scale+2)
  4473  001A90  C011  F02A         	movff	3+?___flmul,(c:?_scale+3)
  4474  001A94  C012  F02B         	
  4475                           	goto	l193
  4476  001A98  EF8B  F00E         	
  4477                           l2853:
  4478  001A9C                     	goto	l193
  4479  001A9C  EF8B  F00E         	
  4480                           l195:
  4481  001AA0                     	goto	l2855
  4482  001AA0  EF52  F00D         	line	434
  4483                           	
  4484                           l194:
  4485  001AA4                     	
  4486                           l2855:
  4487  001AA4                     ;doprnt.c: 434: return _npowers_[scl];
  4488                           	movf	((c:scale@scl)),c,w
  4489  001AA4  5030               	mullw	04h
  4490  001AA6  0D04               	movlw	low((__npowers_))
  4491  001AA8  0E35               	addwf	(prodl),c,w
  4492  001AAA  24F3               	movwf	tblptrl
  4493  001AAC  6EF6               	movlw	high((__npowers_))
  4494  001AAE  0E08               	addwfc	(prodh),c,w
  4495  001AB0  20F4               	movwf	tblptrh
  4496  001AB2  6EF7               	if	0	;There are less than 3 active tblptr bytes
  4497  001AB4                     	clrf	tblptru
  4499                           	global __mediumconst
  4502  001AB4                     	tblrd*+
  4503  001AB4  0009               	
  4504                           	movff	tablat,(c:?_scale)
  4505  001AB6  CFF5 F028          	tblrd*+
  4506  001ABA  0009               	
  4507                           	movff	tablat,(c:?_scale+1)
  4508  001ABC  CFF5 F029          	tblrd*+
  4509  001AC0  0009               	
  4510                           	movff	tablat,(c:?_scale+2)
  4511  001AC2  CFF5 F02A          	tblrd*-
  4512  001AC6  000A               	
  4513                           	movff	tablat,(c:?_scale+3)
  4514  001AC8  CFF5 F02B          	goto	l193
  4515  001ACC  EF8B  F00E         	
  4516                           l2857:
  4517  001AD0                     	goto	l193
  4518  001AD0  EF8B  F00E         	line	435
  4519                           	
  4520                           l191:
  4521  001AD4                     	line	436
  4522                           	
  4523                           l2859:
  4524  001AD4                     ;doprnt.c: 435: }
  4525                           ;doprnt.c: 436: if(scl>=110)
  4526                           		movf	((c:scale@scl)),c,w
  4527  001AD4  5030               	xorlw	80h
  4528  001AD6  0A80               	addlw	-(80h^06Eh)
  4529  001AD8  0F12               	btfss	status,0
  4530  001ADA  A0D8               	goto	u2571
  4531  001ADC  EF72  F00D         	goto	u2570
  4532  001AE0  EF74  F00D         
  4533                           u2571:
  4534  001AE4                     	goto	l2867
  4535  001AE4  EF11  F00E         u2570:
  4536  001AE8                     	line	437
  4537                           	
  4538                           l2861:
  4539  001AE8                     ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
                                 ];
  4540                           	movlw	high(0Ah)
  4541  001AE8  0E00               	movwf	((c:___awdiv@divisor+1)),c
  4542  001AEA  6E0A               	movlw	low(0Ah)
  4543  001AEC  0E0A               	movwf	((c:___awdiv@divisor)),c
  4544  001AEE  6E09               	movlw	high(064h)
  4545  001AF0  0E00               	movwf	((c:___awmod@divisor+1)),c
  4546  001AF2  6E04               	movlw	low(064h)
  4547  001AF4  0E64               	movwf	((c:___awmod@divisor)),c
  4548  001AF6  6E03               	movf	((c:scale@scl)),c,w
  4549  001AF8  5030               	movwf	((c:___awmod@dividend)),c
  4550  001AFA  6E01               	clrf	((c:___awmod@dividend+1)),c
  4551  001AFC  6A02               	btfsc	((c:___awmod@dividend)),c,7
  4552  001AFE  BE01               	decf	((c:___awmod@dividend+1)),c
  4553  001B00  0602               	call	___awmod	;wreg free
  4554  001B02  EC2A  F018         	movff	0+?___awmod,(c:___awdiv@dividend)
  4555  001B06  C001  F007         	movff	1+?___awmod,(c:___awdiv@dividend+1)
  4556  001B0A  C002  F008         	call	___awdiv	;wreg free
  4557  001B0E  ECB4  F017         	bcf	status,0
  4558  001B12  90D8               	rlcf	(0+?___awdiv),c
  4559  001B14  3607               	rlcf	(1+?___awdiv),c
  4560  001B16  3608               	bcf	status,0
  4561  001B18  90D8               	rlcf	(0+?___awdiv),c
  4562  001B1A  3607               	rlcf	(1+?___awdiv),c
  4563  001B1C  3608               	movlw	024h
  4564  001B1E  0E24               	addwf	(0+?___awdiv),c
  4565  001B20  2607               	movlw	0
  4566  001B22  0E00               	addwfc	(1+?___awdiv),c
  4567  001B24  2208               	movlw	low((__powers_))
  4568  001B26  0E01               	addwf	(0+?___awdiv),c,w
  4569  001B28  2407               	movwf	tblptrl
  4570  001B2A  6EF6               	movlw	high((__powers_))
  4571  001B2C  0E08               	addwfc	(1+?___awdiv),c,w
  4572  001B2E  2008               	movwf	tblptrh
  4573  001B30  6EF7               	if	0	;There are less than 3 active tblptr bytes
  4574  001B32                     	clrf	tblptru
  4576                           	global __mediumconst
  4579  001B32                     	tblrd*+
  4580  001B32  0009               	
  4581                           	movff	tablat,(c:___flmul@a)
  4582  001B34  CFF5 F013          	tblrd*+
  4583  001B38  0009               	
  4584                           	movff	tablat,(c:___flmul@a+1)
  4585  001B3A  CFF5 F014          	tblrd*+
  4586  001B3E  0009               	
  4587                           	movff	tablat,(c:___flmul@a+2)
  4588  001B40  CFF5 F015          	tblrd*-
  4589  001B44  000A               	
  4590                           	movff	tablat,(c:___flmul@a+3)
  4591  001B46  CFF5 F016          	movlw	high(064h)
  4592  001B4A  0E00               	movwf	((c:___awdiv@divisor+1)),c
  4593  001B4C  6E0A               	movlw	low(064h)
  4594  001B4E  0E64               	movwf	((c:___awdiv@divisor)),c
  4595  001B50  6E09               	movf	((c:scale@scl)),c,w
  4596  001B52  5030               	movwf	((c:___awdiv@dividend)),c
  4597  001B54  6E07               	clrf	((c:___awdiv@dividend+1)),c
  4598  001B56  6A08               	btfsc	((c:___awdiv@dividend)),c,7
  4599  001B58  BE07               	decf	((c:___awdiv@dividend+1)),c
  4600  001B5A  0608               	call	___awdiv	;wreg free
  4601  001B5C  ECB4  F017         	bcf	status,0
  4602  001B60  90D8               	rlcf	(0+?___awdiv),c
  4603  001B62  3607               	rlcf	(1+?___awdiv),c
  4604  001B64  3608               	bcf	status,0
  4605  001B66  90D8               	rlcf	(0+?___awdiv),c
  4606  001B68  3607               	rlcf	(1+?___awdiv),c
  4607  001B6A  3608               	movlw	048h
  4608  001B6C  0E48               	addwf	(0+?___awdiv),c
  4609  001B6E  2607               	movlw	0
  4610  001B70  0E00               	addwfc	(1+?___awdiv),c
  4611  001B72  2208               	movlw	low((__powers_))
  4612  001B74  0E01               	addwf	(0+?___awdiv),c,w
  4613  001B76  2407               	movwf	tblptrl
  4614  001B78  6EF6               	movlw	high((__powers_))
  4615  001B7A  0E08               	addwfc	(1+?___awdiv),c,w
  4616  001B7C  2008               	movwf	tblptrh
  4617  001B7E  6EF7               	if	0	;There are less than 3 active tblptr bytes
  4618  001B80                     	clrf	tblptru
  4620                           	global __mediumconst
  4623  001B80                     	tblrd*+
  4624  001B80  0009               	
  4625                           	movff	tablat,(c:___flmul@b)
  4626  001B82  CFF5 F00F          	tblrd*+
  4627  001B86  0009               	
  4628                           	movff	tablat,(c:___flmul@b+1)
  4629  001B88  CFF5 F010          	tblrd*+
  4630  001B8C  0009               	
  4631                           	movff	tablat,(c:___flmul@b+2)
  4632  001B8E  CFF5 F011          	tblrd*-
  4633  001B92  000A               	
  4634                           	movff	tablat,(c:___flmul@b+3)
  4635  001B94  CFF5 F012          	call	___flmul	;wreg free
  4636  001B98  EC8C  F00E         	movff	0+?___flmul,(c:_scale$957)
  4637  001B9C  C00F  F02C         	movff	1+?___flmul,(c:_scale$957+1)
  4638  001BA0  C010  F02D         	movff	2+?___flmul,(c:_scale$957+2)
  4639  001BA4  C011  F02E         	movff	3+?___flmul,(c:_scale$957+3)
  4640  001BA8  C012  F02F         	
  4641                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
                                 ];
  4642                           	movff	(c:_scale$957),(c:___flmul@b)
  4643  001BAC  C02C  F00F         	movff	(c:_scale$957+1),(c:___flmul@b+1)
  4644  001BB0  C02D  F010         	movff	(c:_scale$957+2),(c:___flmul@b+2)
  4645  001BB4  C02E  F011         	movff	(c:_scale$957+3),(c:___flmul@b+3)
  4646  001BB8  C02F  F012         	movlw	high(0Ah)
  4647  001BBC  0E00               	movwf	((c:___awmod@divisor+1)),c
  4648  001BBE  6E04               	movlw	low(0Ah)
  4649  001BC0  0E0A               	movwf	((c:___awmod@divisor)),c
  4650  001BC2  6E03               	movf	((c:scale@scl)),c,w
  4651  001BC4  5030               	movwf	((c:___awmod@dividend)),c
  4652  001BC6  6E01               	clrf	((c:___awmod@dividend+1)),c
  4653  001BC8  6A02               	btfsc	((c:___awmod@dividend)),c,7
  4654  001BCA  BE01               	decf	((c:___awmod@dividend+1)),c
  4655  001BCC  0602               	call	___awmod	;wreg free
  4656  001BCE  EC2A  F018         	bcf	status,0
  4657  001BD2  90D8               	rlcf	(0+?___awmod),c
  4658  001BD4  3601               	rlcf	(1+?___awmod),c
  4659  001BD6  3602               	bcf	status,0
  4660  001BD8  90D8               	rlcf	(0+?___awmod),c
  4661  001BDA  3601               	rlcf	(1+?___awmod),c
  4662  001BDC  3602               	movlw	low((__powers_))
  4663  001BDE  0E01               	addwf	(0+?___awmod),c,w
  4664  001BE0  2401               	movwf	tblptrl
  4665  001BE2  6EF6               	movlw	high((__powers_))
  4666  001BE4  0E08               	addwfc	(1+?___awmod),c,w
  4667  001BE6  2002               	movwf	tblptrh
  4668  001BE8  6EF7               	if	0	;There are less than 3 active tblptr bytes
  4669  001BEA                     	clrf	tblptru
  4671                           	global __mediumconst
  4674  001BEA                     	tblrd*+
  4675  001BEA  0009               	
  4676                           	movff	tablat,(c:___flmul@a)
  4677  001BEC  CFF5 F013          	tblrd*+
  4678  001BF0  0009               	
  4679                           	movff	tablat,(c:___flmul@a+1)
  4680  001BF2  CFF5 F014          	tblrd*+
  4681  001BF6  0009               	
  4682                           	movff	tablat,(c:___flmul@a+2)
  4683  001BF8  CFF5 F015          	tblrd*-
  4684  001BFC  000A               	
  4685                           	movff	tablat,(c:___flmul@a+3)
  4686  001BFE  CFF5 F016          	call	___flmul	;wreg free
  4687  001C02  EC8C  F00E         	movff	0+?___flmul,(c:?_scale)
  4688  001C06  C00F  F028         	movff	1+?___flmul,(c:?_scale+1)
  4689  001C0A  C010  F029         	movff	2+?___flmul,(c:?_scale+2)
  4690  001C0E  C011  F02A         	movff	3+?___flmul,(c:?_scale+3)
  4691  001C12  C012  F02B         	
  4692                           	goto	l193
  4693  001C16  EF8B  F00E         	
  4694                           l2863:
  4695  001C1A                     	goto	l193
  4696  001C1A  EF8B  F00E         	
  4697                           l2865:
  4698  001C1E                     	goto	l2873
  4699  001C1E  EF75  F00E         	line	438
  4700                           	
  4701                           l196:
  4702  001C22                     	
  4703                           l2867:
  4704  001C22                     ;doprnt.c: 438: else if(scl > 10)
  4705                           		movf	((c:scale@scl)),c,w
  4706  001C22  5030               	xorlw	80h
  4707  001C24  0A80               	addlw	-(80h^0Bh)
  4708  001C26  0F75               	btfss	status,0
  4709  001C28  A0D8               	goto	u2581
  4710  001C2A  EF19  F00E         	goto	u2580
  4711  001C2E  EF1B  F00E         
  4712                           u2581:
  4713  001C32                     	goto	l2873
  4714  001C32  EF75  F00E         u2580:
  4715  001C36                     	line	439
  4716                           	
  4717                           l2869:
  4718  001C36                     ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  4719                           	movlw	high(0Ah)
  4720  001C36  0E00               	movwf	((c:___awdiv@divisor+1)),c
  4721  001C38  6E0A               	movlw	low(0Ah)
  4722  001C3A  0E0A               	movwf	((c:___awdiv@divisor)),c
  4723  001C3C  6E09               	movf	((c:scale@scl)),c,w
  4724  001C3E  5030               	movwf	((c:___awdiv@dividend)),c
  4725  001C40  6E07               	clrf	((c:___awdiv@dividend+1)),c
  4726  001C42  6A08               	btfsc	((c:___awdiv@dividend)),c,7
  4727  001C44  BE07               	decf	((c:___awdiv@dividend+1)),c
  4728  001C46  0608               	call	___awdiv	;wreg free
  4729  001C48  ECB4  F017         	bcf	status,0
  4730  001C4C  90D8               	rlcf	(0+?___awdiv),c
  4731  001C4E  3607               	rlcf	(1+?___awdiv),c
  4732  001C50  3608               	bcf	status,0
  4733  001C52  90D8               	rlcf	(0+?___awdiv),c
  4734  001C54  3607               	rlcf	(1+?___awdiv),c
  4735  001C56  3608               	movlw	024h
  4736  001C58  0E24               	addwf	(0+?___awdiv),c
  4737  001C5A  2607               	movlw	0
  4738  001C5C  0E00               	addwfc	(1+?___awdiv),c
  4739  001C5E  2208               	movlw	low((__powers_))
  4740  001C60  0E01               	addwf	(0+?___awdiv),c,w
  4741  001C62  2407               	movwf	tblptrl
  4742  001C64  6EF6               	movlw	high((__powers_))
  4743  001C66  0E08               	addwfc	(1+?___awdiv),c,w
  4744  001C68  2008               	movwf	tblptrh
  4745  001C6A  6EF7               	if	0	;There are less than 3 active tblptr bytes
  4746  001C6C                     	clrf	tblptru
  4748                           	global __mediumconst
  4751  001C6C                     	tblrd*+
  4752  001C6C  0009               	
  4753                           	movff	tablat,(c:___flmul@b)
  4754  001C6E  CFF5 F00F          	tblrd*+
  4755  001C72  0009               	
  4756                           	movff	tablat,(c:___flmul@b+1)
  4757  001C74  CFF5 F010          	tblrd*+
  4758  001C78  0009               	
  4759                           	movff	tablat,(c:___flmul@b+2)
  4760  001C7A  CFF5 F011          	tblrd*-
  4761  001C7E  000A               	
  4762                           	movff	tablat,(c:___flmul@b+3)
  4763  001C80  CFF5 F012          	movlw	high(0Ah)
  4764  001C84  0E00               	movwf	((c:___awmod@divisor+1)),c
  4765  001C86  6E04               	movlw	low(0Ah)
  4766  001C88  0E0A               	movwf	((c:___awmod@divisor)),c
  4767  001C8A  6E03               	movf	((c:scale@scl)),c,w
  4768  001C8C  5030               	movwf	((c:___awmod@dividend)),c
  4769  001C8E  6E01               	clrf	((c:___awmod@dividend+1)),c
  4770  001C90  6A02               	btfsc	((c:___awmod@dividend)),c,7
  4771  001C92  BE01               	decf	((c:___awmod@dividend+1)),c
  4772  001C94  0602               	call	___awmod	;wreg free
  4773  001C96  EC2A  F018         	bcf	status,0
  4774  001C9A  90D8               	rlcf	(0+?___awmod),c
  4775  001C9C  3601               	rlcf	(1+?___awmod),c
  4776  001C9E  3602               	bcf	status,0
  4777  001CA0  90D8               	rlcf	(0+?___awmod),c
  4778  001CA2  3601               	rlcf	(1+?___awmod),c
  4779  001CA4  3602               	movlw	low((__powers_))
  4780  001CA6  0E01               	addwf	(0+?___awmod),c,w
  4781  001CA8  2401               	movwf	tblptrl
  4782  001CAA  6EF6               	movlw	high((__powers_))
  4783  001CAC  0E08               	addwfc	(1+?___awmod),c,w
  4784  001CAE  2002               	movwf	tblptrh
  4785  001CB0  6EF7               	if	0	;There are less than 3 active tblptr bytes
  4786  001CB2                     	clrf	tblptru
  4788                           	global __mediumconst
  4791  001CB2                     	tblrd*+
  4792  001CB2  0009               	
  4793                           	movff	tablat,(c:___flmul@a)
  4794  001CB4  CFF5 F013          	tblrd*+
  4795  001CB8  0009               	
  4796                           	movff	tablat,(c:___flmul@a+1)
  4797  001CBA  CFF5 F014          	tblrd*+
  4798  001CBE  0009               	
  4799                           	movff	tablat,(c:___flmul@a+2)
  4800  001CC0  CFF5 F015          	tblrd*-
  4801  001CC4  000A               	
  4802                           	movff	tablat,(c:___flmul@a+3)
  4803  001CC6  CFF5 F016          	call	___flmul	;wreg free
  4804  001CCA  EC8C  F00E         	movff	0+?___flmul,(c:?_scale)
  4805  001CCE  C00F  F028         	movff	1+?___flmul,(c:?_scale+1)
  4806  001CD2  C010  F029         	movff	2+?___flmul,(c:?_scale+2)
  4807  001CD6  C011  F02A         	movff	3+?___flmul,(c:?_scale+3)
  4808  001CDA  C012  F02B         	
  4809                           	goto	l193
  4810  001CDE  EF8B  F00E         	
  4811                           l2871:
  4812  001CE2                     	goto	l193
  4813  001CE2  EF8B  F00E         	
  4814                           l198:
  4815  001CE6                     	goto	l2873
  4816  001CE6  EF75  F00E         	line	440
  4817                           	
  4818                           l197:
  4819  001CEA                     	
  4820                           l2873:
  4821  001CEA                     ;doprnt.c: 440: return _powers_[scl];
  4822                           	movf	((c:scale@scl)),c,w
  4823  001CEA  5030               	mullw	04h
  4824  001CEC  0D04               	movlw	low((__powers_))
  4825  001CEE  0E01               	addwf	(prodl),c,w
  4826  001CF0  24F3               	movwf	tblptrl
  4827  001CF2  6EF6               	movlw	high((__powers_))
  4828  001CF4  0E08               	addwfc	(prodh),c,w
  4829  001CF6  20F4               	movwf	tblptrh
  4830  001CF8  6EF7               	if	0	;There are less than 3 active tblptr bytes
  4831  001CFA                     	clrf	tblptru
  4833                           	global __mediumconst
  4836  001CFA                     	tblrd*+
  4837  001CFA  0009               	
  4838                           	movff	tablat,(c:?_scale)
  4839  001CFC  CFF5 F028          	tblrd*+
  4840  001D00  0009               	
  4841                           	movff	tablat,(c:?_scale+1)
  4842  001D02  CFF5 F029          	tblrd*+
  4843  001D06  0009               	
  4844                           	movff	tablat,(c:?_scale+2)
  4845  001D08  CFF5 F02A          	tblrd*-
  4846  001D0C  000A               	
  4847                           	movff	tablat,(c:?_scale+3)
  4848  001D0E  CFF5 F02B          	goto	l193
  4849  001D12  EF8B  F00E         	
  4850                           l2875:
  4851  001D16                     	line	441
  4852                           	
  4853                           l193:
  4854  001D16                     	return	;funcret
  4855  001D16  0012               	opt stack 0
  4856                           GLOBAL	__end_of_scale
  4857                           	__end_of_scale:
  4858  001D18                     	signat	_scale,4220
  4859                           	global	_isdigit
  4860                           
  4861 ;; *************** function _isdigit *****************
  4862 ;; Defined at:
  4863 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  4864 ;; Parameters:    Size  Location     Type
  4865 ;;  c               1    wreg     unsigned char 
  4866 ;; Auto vars:     Size  Location     Type
  4867 ;;  c               1    2[COMRAM] unsigned char 
  4868 ;; Return value:  Size  Location     Type
  4869 ;;		None               void
  4870 ;; Registers used:
  4871 ;;		wreg, status,2, status,0
  4872 ;; Tracked objects:
  4873 ;;		On entry : 0/0
  4874 ;;		On exit  : 0/0
  4875 ;;		Unchanged: 0/0
  4876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4877 ;;      Params:         0       0       0       0       0       0       0       0       0
  4878 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4879 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4880 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4881 ;;Total ram usage:        3 bytes
  4882 ;; Hardware stack levels used:    1
  4883 ;; This function calls:
  4884 ;;		Nothing
  4885 ;; This function is called by:
  4886 ;;		_sprintf
  4887 ;; This function uses a non-reentrant model
  4888 ;;
  4889                           psect	text3,class=CODE,space=0,reloc=2,group=1
  4890                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  4891                           	line	8
  4892                           global __ptext3
  4893                           __ptext3:
  4894  003660                     psect	text3
  4895                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  4896                           	line	8
  4897                           	global	__size_of_isdigit
  4898                           	__size_of_isdigit	equ	__end_of_isdigit-_isdigit
  4899  0000                     	
  4900                           _isdigit:
  4901  003660                     ;incstack = 0
  4902                           	opt	stack 29
  4903                           ;isdigit@c stored from wreg
  4904                           	movwf	((c:isdigit@c)),c
  4905  003660  6E03               	line	14
  4906                           	
  4907                           l2877:
  4908  003662                     	movlw	low(0)
  4909  003662  0E00               	movwf	((c:_isdigit$600)),c
  4910  003664  6E02               	
  4911                           l2879:
  4912  003666                     		movlw	03Ah-0
  4913  003666  0E3A               	cpfslt	((c:isdigit@c)),c
  4914  003668  6003               	goto	u2591
  4915  00366A  EF39  F01B         	goto	u2590
  4916  00366E  EF3B  F01B         
  4917                           u2591:
  4918  003672                     	goto	l2885
  4919  003672  EF47  F01B         u2590:
  4920  003676                     	
  4921                           l2881:
  4922  003676                     		movlw	030h-1
  4923  003676  0E2F               	cpfsgt	((c:isdigit@c)),c
  4924  003678  6403               	goto	u2601
  4925  00367A  EF41  F01B         	goto	u2600
  4926  00367E  EF43  F01B         
  4927                           u2601:
  4928  003682                     	goto	l2885
  4929  003682  EF47  F01B         u2600:
  4930  003686                     	
  4931                           l2883:
  4932  003686                     	movlw	low(01h)
  4933  003686  0E01               	movwf	((c:_isdigit$600)),c
  4934  003688  6E02               	goto	l2885
  4935  00368A  EF47  F01B         	
  4936                           l628:
  4937  00368E                     	
  4938                           l2885:
  4939  00368E                     	movff	(c:_isdigit$600),??_isdigit+0+0
  4940  00368E  C002  F001         	rrcf	(??_isdigit+0+0),c,w
  4941  003692  3001               	goto	l629
  4942  003694  EF4C  F01B         	
  4943                           l2887:
  4944  003698                     	line	15
  4945                           	
  4946                           l629:
  4947  003698                     	return	;funcret
  4948  003698  0012               	opt stack 0
  4949                           GLOBAL	__end_of_isdigit
  4950                           	__end_of_isdigit:
  4951  00369A                     	signat	_isdigit,4216
  4952                           	global	_fround
  4953                           
  4954 ;; *************** function _fround *****************
  4955 ;; Defined at:
  4956 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  4957 ;; Parameters:    Size  Location     Type
  4958 ;;  prec            1    wreg     unsigned char 
  4959 ;; Auto vars:     Size  Location     Type
  4960 ;;  prec            1   51[COMRAM] unsigned char 
  4961 ;; Return value:  Size  Location     Type
  4962 ;;                  4   39[COMRAM] unsigned char 
  4963 ;; Registers used:
  4964 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4965 ;; Tracked objects:
  4966 ;;		On entry : 0/0
  4967 ;;		On exit  : 0/0
  4968 ;;		Unchanged: 0/0
  4969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4970 ;;      Params:         4       0       0       0       0       0       0       0       0
  4971 ;;      Locals:         9       0       0       0       0       0       0       0       0
  4972 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4973 ;;      Totals:        13       0       0       0       0       0       0       0       0
  4974 ;;Total ram usage:       13 bytes
  4975 ;; Hardware stack levels used:    1
  4976 ;; Hardware stack levels required when called:    1
  4977 ;; This function calls:
  4978 ;;		___awdiv
  4979 ;;		___awmod
  4980 ;;		___flmul
  4981 ;; This function is called by:
  4982 ;;		_sprintf
  4983 ;; This function uses a non-reentrant model
  4984 ;;
  4985                           psect	text4,class=CODE,space=0,reloc=2,group=0
  4986                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  4987                           	line	409
  4988                           global __ptext4
  4989                           __ptext4:
  4990  002186                     psect	text4
  4991                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  4992                           	line	409
  4993                           	global	__size_of_fround
  4994                           	__size_of_fround	equ	__end_of_fround-_fround
  4995  0000                     	
  4996                           _fround:
  4997  002186                     ;incstack = 0
  4998                           	opt	stack 28
  4999                           ;fround@prec stored from wreg
  5000                           	movwf	((c:fround@prec)),c
  5001  002186  6E34               	line	413
  5002                           	
  5003                           l2817:
  5004  002188                     ;doprnt.c: 413: if(prec>=110)
  5005                           		movlw	06Eh-1
  5006  002188  0E6D               	cpfsgt	((c:fround@prec)),c
  5007  00218A  6434               	goto	u2521
  5008  00218C  EFCA  F010         	goto	u2520
  5009  002190  EFCC  F010         
  5010                           u2521:
  5011  002194                     	goto	l2827
  5012  002194  EF7D  F011         u2520:
  5013  002198                     	line	414
  5014                           	
  5015                           l2819:
  5016  002198                     ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
                                 ers_[prec%10];
  5017                           	movlw	high(0Ah)
  5018  002198  0E00               	movwf	((c:___awdiv@divisor+1)),c
  5019  00219A  6E0A               	movlw	low(0Ah)
  5020  00219C  0E0A               	movwf	((c:___awdiv@divisor)),c
  5021  00219E  6E09               	movlw	high(064h)
  5022  0021A0  0E00               	movwf	((c:___awmod@divisor+1)),c
  5023  0021A2  6E04               	movlw	low(064h)
  5024  0021A4  0E64               	movwf	((c:___awmod@divisor)),c
  5025  0021A6  6E03               	movff	(c:fround@prec),(c:___awmod@dividend)
  5026  0021A8  C034  F001         	clrf	((c:___awmod@dividend+1)),c
  5027  0021AC  6A02               	call	___awmod	;wreg free
  5028  0021AE  EC2A  F018         	movff	0+?___awmod,(c:___awdiv@dividend)
  5029  0021B2  C001  F007         	movff	1+?___awmod,(c:___awdiv@dividend+1)
  5030  0021B6  C002  F008         	call	___awdiv	;wreg free
  5031  0021BA  ECB4  F017         	bcf	status,0
  5032  0021BE  90D8               	rlcf	(0+?___awdiv),c
  5033  0021C0  3607               	rlcf	(1+?___awdiv),c
  5034  0021C2  3608               	bcf	status,0
  5035  0021C4  90D8               	rlcf	(0+?___awdiv),c
  5036  0021C6  3607               	rlcf	(1+?___awdiv),c
  5037  0021C8  3608               	movlw	024h
  5038  0021CA  0E24               	addwf	(0+?___awdiv),c
  5039  0021CC  2607               	movlw	0
  5040  0021CE  0E00               	addwfc	(1+?___awdiv),c
  5041  0021D0  2208               	movlw	low((__npowers_))
  5042  0021D2  0E35               	addwf	(0+?___awdiv),c,w
  5043  0021D4  2407               	movwf	tblptrl
  5044  0021D6  6EF6               	movlw	high((__npowers_))
  5045  0021D8  0E08               	addwfc	(1+?___awdiv),c,w
  5046  0021DA  2008               	movwf	tblptrh
  5047  0021DC  6EF7               	if	0	;There are less than 3 active tblptr bytes
  5048  0021DE                     	clrf	tblptru
  5050                           	global __mediumconst
  5053  0021DE                     	tblrd*+
  5054  0021DE  0009               	
  5055                           	movff	tablat,(c:___flmul@a)
  5056  0021E0  CFF5 F013          	tblrd*+
  5057  0021E4  0009               	
  5058                           	movff	tablat,(c:___flmul@a+1)
  5059  0021E6  CFF5 F014          	tblrd*+
  5060  0021EA  0009               	
  5061                           	movff	tablat,(c:___flmul@a+2)
  5062  0021EC  CFF5 F015          	tblrd*-
  5063  0021F0  000A               	
  5064                           	movff	tablat,(c:___flmul@a+3)
  5065  0021F2  CFF5 F016          	movlw	high(064h)
  5066  0021F6  0E00               	movwf	((c:___awdiv@divisor+1)),c
  5067  0021F8  6E0A               	movlw	low(064h)
  5068  0021FA  0E64               	movwf	((c:___awdiv@divisor)),c
  5069  0021FC  6E09               	movff	(c:fround@prec),(c:___awdiv@dividend)
  5070  0021FE  C034  F007         	clrf	((c:___awdiv@dividend+1)),c
  5071  002202  6A08               	call	___awdiv	;wreg free
  5072  002204  ECB4  F017         	bcf	status,0
  5073  002208  90D8               	rlcf	(0+?___awdiv),c
  5074  00220A  3607               	rlcf	(1+?___awdiv),c
  5075  00220C  3608               	bcf	status,0
  5076  00220E  90D8               	rlcf	(0+?___awdiv),c
  5077  002210  3607               	rlcf	(1+?___awdiv),c
  5078  002212  3608               	movlw	048h
  5079  002214  0E48               	addwf	(0+?___awdiv),c
  5080  002216  2607               	movlw	0
  5081  002218  0E00               	addwfc	(1+?___awdiv),c
  5082  00221A  2208               	movlw	low((__npowers_))
  5083  00221C  0E35               	addwf	(0+?___awdiv),c,w
  5084  00221E  2407               	movwf	tblptrl
  5085  002220  6EF6               	movlw	high((__npowers_))
  5086  002222  0E08               	addwfc	(1+?___awdiv),c,w
  5087  002224  2008               	movwf	tblptrh
  5088  002226  6EF7               	if	0	;There are less than 3 active tblptr bytes
  5089  002228                     	clrf	tblptru
  5091                           	global __mediumconst
  5094  002228                     	tblrd*+
  5095  002228  0009               	
  5096                           	movff	tablat,(c:___flmul@b)
  5097  00222A  CFF5 F00F          	tblrd*+
  5098  00222E  0009               	
  5099                           	movff	tablat,(c:___flmul@b+1)
  5100  002230  CFF5 F010          	tblrd*+
  5101  002234  0009               	
  5102                           	movff	tablat,(c:___flmul@b+2)
  5103  002236  CFF5 F011          	tblrd*-
  5104  00223A  000A               	
  5105                           	movff	tablat,(c:___flmul@b+3)
  5106  00223C  CFF5 F012          	call	___flmul	;wreg free
  5107  002240  EC8C  F00E         	movff	0+?___flmul,(c:_fround$955)
  5108  002244  C00F  F030         	movff	1+?___flmul,(c:_fround$955+1)
  5109  002248  C010  F031         	movff	2+?___flmul,(c:_fround$955+2)
  5110  00224C  C011  F032         	movff	3+?___flmul,(c:_fround$955+3)
  5111  002250  C012  F033         	
  5112                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
                                 ers_[prec%10];
  5113                           	movlw	high(0Ah)
  5114  002254  0E00               	movwf	((c:___awmod@divisor+1)),c
  5115  002256  6E04               	movlw	low(0Ah)
  5116  002258  0E0A               	movwf	((c:___awmod@divisor)),c
  5117  00225A  6E03               	movff	(c:fround@prec),(c:___awmod@dividend)
  5118  00225C  C034  F001         	clrf	((c:___awmod@dividend+1)),c
  5119  002260  6A02               	call	___awmod	;wreg free
  5120  002262  EC2A  F018         	bcf	status,0
  5121  002266  90D8               	rlcf	(0+?___awmod),c
  5122  002268  3601               	rlcf	(1+?___awmod),c
  5123  00226A  3602               	bcf	status,0
  5124  00226C  90D8               	rlcf	(0+?___awmod),c
  5125  00226E  3601               	rlcf	(1+?___awmod),c
  5126  002270  3602               	movlw	low((__npowers_))
  5127  002272  0E35               	addwf	(0+?___awmod),c,w
  5128  002274  2401               	movwf	tblptrl
  5129  002276  6EF6               	movlw	high((__npowers_))
  5130  002278  0E08               	addwfc	(1+?___awmod),c,w
  5131  00227A  2002               	movwf	tblptrh
  5132  00227C  6EF7               	if	0	;There are less than 3 active tblptr bytes
  5133  00227E                     	clrf	tblptru
  5135                           	global __mediumconst
  5138  00227E                     	tblrd*+
  5139  00227E  0009               	
  5140                           	movff	tablat,(c:___flmul@a)
  5141  002280  CFF5 F013          	tblrd*+
  5142  002284  0009               	
  5143                           	movff	tablat,(c:___flmul@a+1)
  5144  002286  CFF5 F014          	tblrd*+
  5145  00228A  0009               	
  5146                           	movff	tablat,(c:___flmul@a+2)
  5147  00228C  CFF5 F015          	tblrd*-
  5148  002290  000A               	
  5149                           	movff	tablat,(c:___flmul@a+3)
  5150  002292  CFF5 F016          	movff	(c:_fround$955),(c:___flmul@b)
  5151  002296  C030  F00F         	movff	(c:_fround$955+1),(c:___flmul@b+1)
  5152  00229A  C031  F010         	movff	(c:_fround$955+2),(c:___flmul@b+2)
  5153  00229E  C032  F011         	movff	(c:_fround$955+3),(c:___flmul@b+3)
  5154  0022A2  C033  F012         	call	___flmul	;wreg free
  5155  0022A6  EC8C  F00E         	movff	0+?___flmul,(c:_fround$956)
  5156  0022AA  C00F  F02C         	movff	1+?___flmul,(c:_fround$956+1)
  5157  0022AE  C010  F02D         	movff	2+?___flmul,(c:_fround$956+2)
  5158  0022B2  C011  F02E         	movff	3+?___flmul,(c:_fround$956+3)
  5159  0022B6  C012  F02F         	
  5160                           	
  5161                           l2821:
  5162  0022BA                     ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
                                 ers_[prec%10];
  5163                           	movff	(c:_fround$956),(c:___flmul@b)
  5164  0022BA  C02C  F00F         	movff	(c:_fround$956+1),(c:___flmul@b+1)
  5165  0022BE  C02D  F010         	movff	(c:_fround$956+2),(c:___flmul@b+2)
  5166  0022C2  C02E  F011         	movff	(c:_fround$956+3),(c:___flmul@b+3)
  5167  0022C6  C02F  F012         	movlw	low(normalize32(0.50000000000000000))
  5168  0022CA  0E00               	movwf	((c:___flmul@a)),c
  5169  0022CC  6E13               	movlw	high(normalize32(0.50000000000000000))
  5170  0022CE  0E00               	movwf	((c:___flmul@a+1)),c
  5171  0022D0  6E14               	movlw	low highword(normalize32(0.50000000000000000))
  5172  0022D2  0E00               	movwf	((c:___flmul@a+2)),c
  5173  0022D4  6E15               	movlw	high highword(normalize32(0.50000000000000000))
  5174  0022D6  0E3F               	movwf	((c:___flmul@a+3)),c
  5175  0022D8  6E16               	call	___flmul	;wreg free
  5176  0022DA  EC8C  F00E         	movff	0+?___flmul,(c:?_fround)
  5177  0022DE  C00F  F028         	movff	1+?___flmul,(c:?_fround+1)
  5178  0022E2  C010  F029         	movff	2+?___flmul,(c:?_fround+2)
  5179  0022E6  C011  F02A         	movff	3+?___flmul,(c:?_fround+3)
  5180  0022EA  C012  F02B         	
  5181                           	goto	l186
  5182  0022EE  EF1D  F012         	
  5183                           l2823:
  5184  0022F2                     	goto	l186
  5185  0022F2  EF1D  F012         	
  5186                           l2825:
  5187  0022F6                     	goto	l2835
  5188  0022F6  EFF5  F011         	line	415
  5189                           	
  5190                           l185:
  5191  0022FA                     	
  5192                           l2827:
  5193  0022FA                     ;doprnt.c: 415: else if(prec > 10)
  5194                           		movlw	0Bh-1
  5195  0022FA  0E0A               	cpfsgt	((c:fround@prec)),c
  5196  0022FC  6434               	goto	u2531
  5197  0022FE  EF83  F011         	goto	u2530
  5198  002302  EF85  F011         
  5199                           u2531:
  5200  002306                     	goto	l2835
  5201  002306  EFF5  F011         u2530:
  5202  00230A                     	line	416
  5203                           	
  5204                           l2829:
  5205  00230A                     ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  5206                           	movlw	high(0Ah)
  5207  00230A  0E00               	movwf	((c:___awmod@divisor+1)),c
  5208  00230C  6E04               	movlw	low(0Ah)
  5209  00230E  0E0A               	movwf	((c:___awmod@divisor)),c
  5210  002310  6E03               	movff	(c:fround@prec),(c:___awmod@dividend)
  5211  002312  C034  F001         	clrf	((c:___awmod@dividend+1)),c
  5212  002316  6A02               	call	___awmod	;wreg free
  5213  002318  EC2A  F018         	bcf	status,0
  5214  00231C  90D8               	rlcf	(0+?___awmod),c
  5215  00231E  3601               	rlcf	(1+?___awmod),c
  5216  002320  3602               	bcf	status,0
  5217  002322  90D8               	rlcf	(0+?___awmod),c
  5218  002324  3601               	rlcf	(1+?___awmod),c
  5219  002326  3602               	movlw	low((__npowers_))
  5220  002328  0E35               	addwf	(0+?___awmod),c,w
  5221  00232A  2401               	movwf	tblptrl
  5222  00232C  6EF6               	movlw	high((__npowers_))
  5223  00232E  0E08               	addwfc	(1+?___awmod),c,w
  5224  002330  2002               	movwf	tblptrh
  5225  002332  6EF7               	if	0	;There are less than 3 active tblptr bytes
  5226  002334                     	clrf	tblptru
  5228                           	global __mediumconst
  5231  002334                     	tblrd*+
  5232  002334  0009               	
  5233                           	movff	tablat,(c:___flmul@a)
  5234  002336  CFF5 F013          	tblrd*+
  5235  00233A  0009               	
  5236                           	movff	tablat,(c:___flmul@a+1)
  5237  00233C  CFF5 F014          	tblrd*+
  5238  002340  0009               	
  5239                           	movff	tablat,(c:___flmul@a+2)
  5240  002342  CFF5 F015          	tblrd*-
  5241  002346  000A               	
  5242                           	movff	tablat,(c:___flmul@a+3)
  5243  002348  CFF5 F016          	movlw	high(0Ah)
  5244  00234C  0E00               	movwf	((c:___awdiv@divisor+1)),c
  5245  00234E  6E0A               	movlw	low(0Ah)
  5246  002350  0E0A               	movwf	((c:___awdiv@divisor)),c
  5247  002352  6E09               	movff	(c:fround@prec),(c:___awdiv@dividend)
  5248  002354  C034  F007         	clrf	((c:___awdiv@dividend+1)),c
  5249  002358  6A08               	call	___awdiv	;wreg free
  5250  00235A  ECB4  F017         	bcf	status,0
  5251  00235E  90D8               	rlcf	(0+?___awdiv),c
  5252  002360  3607               	rlcf	(1+?___awdiv),c
  5253  002362  3608               	bcf	status,0
  5254  002364  90D8               	rlcf	(0+?___awdiv),c
  5255  002366  3607               	rlcf	(1+?___awdiv),c
  5256  002368  3608               	movlw	024h
  5257  00236A  0E24               	addwf	(0+?___awdiv),c
  5258  00236C  2607               	movlw	0
  5259  00236E  0E00               	addwfc	(1+?___awdiv),c
  5260  002370  2208               	movlw	low((__npowers_))
  5261  002372  0E35               	addwf	(0+?___awdiv),c,w
  5262  002374  2407               	movwf	tblptrl
  5263  002376  6EF6               	movlw	high((__npowers_))
  5264  002378  0E08               	addwfc	(1+?___awdiv),c,w
  5265  00237A  2008               	movwf	tblptrh
  5266  00237C  6EF7               	if	0	;There are less than 3 active tblptr bytes
  5267  00237E                     	clrf	tblptru
  5269                           	global __mediumconst
  5272  00237E                     	tblrd*+
  5273  00237E  0009               	
  5274                           	movff	tablat,(c:___flmul@b)
  5275  002380  CFF5 F00F          	tblrd*+
  5276  002384  0009               	
  5277                           	movff	tablat,(c:___flmul@b+1)
  5278  002386  CFF5 F010          	tblrd*+
  5279  00238A  0009               	
  5280                           	movff	tablat,(c:___flmul@b+2)
  5281  00238C  CFF5 F011          	tblrd*-
  5282  002390  000A               	
  5283                           	movff	tablat,(c:___flmul@b+3)
  5284  002392  CFF5 F012          	call	___flmul	;wreg free
  5285  002396  EC8C  F00E         	movff	0+?___flmul,(c:_fround$955)
  5286  00239A  C00F  F030         	movff	1+?___flmul,(c:_fround$955+1)
  5287  00239E  C010  F031         	movff	2+?___flmul,(c:_fround$955+2)
  5288  0023A2  C011  F032         	movff	3+?___flmul,(c:_fround$955+3)
  5289  0023A6  C012  F033         	
  5290                           	
  5291                           l2831:
  5292  0023AA                     ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  5293                           	movff	(c:_fround$955),(c:___flmul@b)
  5294  0023AA  C030  F00F         	movff	(c:_fround$955+1),(c:___flmul@b+1)
  5295  0023AE  C031  F010         	movff	(c:_fround$955+2),(c:___flmul@b+2)
  5296  0023B2  C032  F011         	movff	(c:_fround$955+3),(c:___flmul@b+3)
  5297  0023B6  C033  F012         	movlw	low(normalize32(0.50000000000000000))
  5298  0023BA  0E00               	movwf	((c:___flmul@a)),c
  5299  0023BC  6E13               	movlw	high(normalize32(0.50000000000000000))
  5300  0023BE  0E00               	movwf	((c:___flmul@a+1)),c
  5301  0023C0  6E14               	movlw	low highword(normalize32(0.50000000000000000))
  5302  0023C2  0E00               	movwf	((c:___flmul@a+2)),c
  5303  0023C4  6E15               	movlw	high highword(normalize32(0.50000000000000000))
  5304  0023C6  0E3F               	movwf	((c:___flmul@a+3)),c
  5305  0023C8  6E16               	call	___flmul	;wreg free
  5306  0023CA  EC8C  F00E         	movff	0+?___flmul,(c:?_fround)
  5307  0023CE  C00F  F028         	movff	1+?___flmul,(c:?_fround+1)
  5308  0023D2  C010  F029         	movff	2+?___flmul,(c:?_fround+2)
  5309  0023D6  C011  F02A         	movff	3+?___flmul,(c:?_fround+3)
  5310  0023DA  C012  F02B         	
  5311                           	goto	l186
  5312  0023DE  EF1D  F012         	
  5313                           l2833:
  5314  0023E2                     	goto	l186
  5315  0023E2  EF1D  F012         	
  5316                           l188:
  5317  0023E6                     	goto	l2835
  5318  0023E6  EFF5  F011         	line	417
  5319                           	
  5320                           l187:
  5321  0023EA                     	
  5322                           l2835:
  5323  0023EA                     ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  5324                           	movf	((c:fround@prec)),c,w
  5325  0023EA  5034               	mullw	04h
  5326  0023EC  0D04               	movlw	low((__npowers_))
  5327  0023EE  0E35               	addwf	(prodl),c,w
  5328  0023F0  24F3               	movwf	tblptrl
  5329  0023F2  6EF6               	movlw	high((__npowers_))
  5330  0023F4  0E08               	addwfc	(prodh),c,w
  5331  0023F6  20F4               	movwf	tblptrh
  5332  0023F8  6EF7               	if	0	;There are less than 3 active tblptr bytes
  5333  0023FA                     	clrf	tblptru
  5335                           	global __mediumconst
  5338  0023FA                     	tblrd*+
  5339  0023FA  0009               	
  5340                           	movff	tablat,(c:___flmul@b)
  5341  0023FC  CFF5 F00F          	tblrd*+
  5342  002400  0009               	
  5343                           	movff	tablat,(c:___flmul@b+1)
  5344  002402  CFF5 F010          	tblrd*+
  5345  002406  0009               	
  5346                           	movff	tablat,(c:___flmul@b+2)
  5347  002408  CFF5 F011          	tblrd*-
  5348  00240C  000A               	
  5349                           	movff	tablat,(c:___flmul@b+3)
  5350  00240E  CFF5 F012          	movlw	low(normalize32(0.50000000000000000))
  5351  002412  0E00               	movwf	((c:___flmul@a)),c
  5352  002414  6E13               	movlw	high(normalize32(0.50000000000000000))
  5353  002416  0E00               	movwf	((c:___flmul@a+1)),c
  5354  002418  6E14               	movlw	low highword(normalize32(0.50000000000000000))
  5355  00241A  0E00               	movwf	((c:___flmul@a+2)),c
  5356  00241C  6E15               	movlw	high highword(normalize32(0.50000000000000000))
  5357  00241E  0E3F               	movwf	((c:___flmul@a+3)),c
  5358  002420  6E16               	call	___flmul	;wreg free
  5359  002422  EC8C  F00E         	movff	0+?___flmul,(c:?_fround)
  5360  002426  C00F  F028         	movff	1+?___flmul,(c:?_fround+1)
  5361  00242A  C010  F029         	movff	2+?___flmul,(c:?_fround+2)
  5362  00242E  C011  F02A         	movff	3+?___flmul,(c:?_fround+3)
  5363  002432  C012  F02B         	
  5364                           	goto	l186
  5365  002436  EF1D  F012         	
  5366                           l2837:
  5367  00243A                     	line	418
  5368                           	
  5369                           l186:
  5370  00243A                     	return	;funcret
  5371  00243A  0012               	opt stack 0
  5372                           GLOBAL	__end_of_fround
  5373                           	__end_of_fround:
  5374  00243C                     	signat	_fround,4220
  5375                           	global	___flmul
  5376                           
  5377 ;; *************** function ___flmul *****************
  5378 ;; Defined at:
  5379 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcmul.c"
  5380 ;; Parameters:    Size  Location     Type
  5381 ;;  b               4   14[COMRAM] unsigned char 
  5382 ;;  a               4   18[COMRAM] unsigned char 
  5383 ;; Auto vars:     Size  Location     Type
  5384 ;;  prod            4   33[COMRAM] struct .
  5385 ;;  grs             4   27[COMRAM] unsigned long 
  5386 ;;  temp            2   37[COMRAM] struct .
  5387 ;;  bexp            1   32[COMRAM] unsigned char 
  5388 ;;  aexp            1   31[COMRAM] unsigned char 
  5389 ;;  sign            1   26[COMRAM] unsigned char 
  5390 ;; Return value:  Size  Location     Type
  5391 ;;                  4   14[COMRAM] unsigned char 
  5392 ;; Registers used:
  5393 ;;		wreg, status,2, status,0, prodl, prodh
  5394 ;; Tracked objects:
  5395 ;;		On entry : 0/0
  5396 ;;		On exit  : 0/0
  5397 ;;		Unchanged: 0/0
  5398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5399 ;;      Params:         8       0       0       0       0       0       0       0       0
  5400 ;;      Locals:        13       0       0       0       0       0       0       0       0
  5401 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5402 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5403 ;;Total ram usage:       25 bytes
  5404 ;; Hardware stack levels used:    1
  5405 ;; This function calls:
  5406 ;;		Nothing
  5407 ;; This function is called by:
  5408 ;;		_fround
  5409 ;;		_scale
  5410 ;;		_sprintf
  5411 ;; This function uses a non-reentrant model
  5412 ;;
  5413                           psect	text5,class=CODE,space=0,reloc=2,group=1
  5414                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcmul.c"
  5415                           	line	8
  5416                           global __ptext5
  5417                           __ptext5:
  5418  001D18                     psect	text5
  5419                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcmul.c"
  5420                           	line	8
  5421                           	global	__size_of___flmul
  5422                           	__size_of___flmul	equ	__end_of___flmul-___flmul
  5423  0000                     	
  5424                           ___flmul:
  5425  001D18                     ;incstack = 0
  5426                           	opt	stack 28
  5427                           	line	17
  5428                           	
  5429                           l2495:
  5430  001D18                     	movf	(0+((c:___flmul@b)+03h)),c,w
  5431  001D18  5012               	andlw	low(080h)
  5432  001D1A  0B80               	movwf	((c:___flmul@sign)),c
  5433  001D1C  6E1B               	line	18
  5434                           	movf	(0+((c:___flmul@b)+03h)),c,w
  5435  001D1E  5012               	addwf	(0+((c:___flmul@b)+03h)),c,w
  5436  001D20  2412               	movwf	((c:___flmul@bexp)),c
  5437  001D22  6E21               	line	19
  5438                           	
  5439                           l2497:
  5440  001D24                     	
  5441                           	btfss	(0+((c:___flmul@b)+02h)),c,(7)&7
  5442  001D24  AE11               	goto	u2201
  5443  001D26  EF97  F00E         	goto	u2200
  5444  001D2A  EF99  F00E         u2201:
  5445  001D2E                     	goto	l2501
  5446  001D2E  EF9C  F00E         u2200:
  5447  001D32                     	line	20
  5448                           	
  5449                           l2499:
  5450  001D32                     	bsf	(0+(0/8)+(c:___flmul@bexp)),c,(0)&7
  5451  001D32  8021               	goto	l2501
  5452  001D34  EF9C  F00E         	line	21
  5453                           	
  5454                           l826:
  5455  001D38                     	line	24
  5456                           	
  5457                           l2501:
  5458  001D38                     	movf	((c:___flmul@bexp)),c,w
  5459  001D38  5021               	btfsc	status,2
  5460  001D3A  B4D8               	goto	u2211
  5461  001D3C  EFA2  F00E         	goto	u2210
  5462  001D40  EFA4  F00E         u2211:
  5463  001D44                     	goto	l2509
  5464  001D44  EFB9  F00E         u2210:
  5465  001D48                     	line	26
  5466                           	
  5467                           l2503:
  5468  001D48                     		incf	((c:___flmul@bexp)),c,w
  5469  001D48  2821               	btfss	status,2
  5470  001D4A  A4D8               	goto	u2221
  5471  001D4C  EFAA  F00E         	goto	u2220
  5472  001D50  EFAC  F00E         
  5473                           u2221:
  5474  001D54                     	goto	l2507
  5475  001D54  EFB6  F00E         u2220:
  5476  001D58                     	line	28
  5477                           	
  5478                           l2505:
  5479  001D58                     	movlw	low(normalize32(0.0000000000000000))
  5480  001D58  0E00               	movwf	((c:___flmul@b)),c
  5481  001D5A  6E0F               	movlw	high(normalize32(0.0000000000000000))
  5482  001D5C  0E00               	movwf	((c:___flmul@b+1)),c
  5483  001D5E  6E10               	movlw	low highword(normalize32(0.0000000000000000))
  5484  001D60  0E00               	movwf	((c:___flmul@b+2)),c
  5485  001D62  6E11               	movlw	high highword(normalize32(0.0000000000000000))
  5486  001D64  0E00               	movwf	((c:___flmul@b+3)),c
  5487  001D66  6E12               	goto	l2507
  5488  001D68  EFB6  F00E         	line	29
  5489                           	
  5490                           l828:
  5491  001D6C                     	line	31
  5492                           	
  5493                           l2507:
  5494  001D6C                     	bsf	(0+(23/8)+(c:___flmul@b)),c,(23)&7
  5495  001D6C  8E11               	line	33
  5496                           	goto	l2511
  5497  001D6E  EFC3  F00E         	line	34
  5498                           	
  5499                           l827:
  5500  001D72                     	line	36
  5501                           	
  5502                           l2509:
  5503  001D72                     	movlw	low(normalize32(0.0000000000000000))
  5504  001D72  0E00               	movwf	((c:___flmul@b)),c
  5505  001D74  6E0F               	movlw	high(normalize32(0.0000000000000000))
  5506  001D76  0E00               	movwf	((c:___flmul@b+1)),c
  5507  001D78  6E10               	movlw	low highword(normalize32(0.0000000000000000))
  5508  001D7A  0E00               	movwf	((c:___flmul@b+2)),c
  5509  001D7C  6E11               	movlw	high highword(normalize32(0.0000000000000000))
  5510  001D7E  0E00               	movwf	((c:___flmul@b+3)),c
  5511  001D80  6E12               	goto	l2511
  5512  001D82  EFC3  F00E         	line	37
  5513                           	
  5514                           l829:
  5515  001D86                     	line	39
  5516                           	
  5517                           l2511:
  5518  001D86                     	movf	(0+((c:___flmul@a)+03h)),c,w
  5519  001D86  5016               	andlw	low(080h)
  5520  001D88  0B80               	xorwf	((c:___flmul@sign)),c
  5521  001D8A  1A1B               	line	40
  5522                           	
  5523                           l2513:
  5524  001D8C                     	movf	(0+((c:___flmul@a)+03h)),c,w
  5525  001D8C  5016               	addwf	(0+((c:___flmul@a)+03h)),c,w
  5526  001D8E  2416               	movwf	((c:___flmul@aexp)),c
  5527  001D90  6E20               	line	41
  5528                           	
  5529                           l2515:
  5530  001D92                     	
  5531                           	btfss	(0+((c:___flmul@a)+02h)),c,(7)&7
  5532  001D92  AE15               	goto	u2231
  5533  001D94  EFCE  F00E         	goto	u2230
  5534  001D98  EFD0  F00E         u2231:
  5535  001D9C                     	goto	l2519
  5536  001D9C  EFD3  F00E         u2230:
  5537  001DA0                     	line	42
  5538                           	
  5539                           l2517:
  5540  001DA0                     	bsf	(0+(0/8)+(c:___flmul@aexp)),c,(0)&7
  5541  001DA0  8020               	goto	l2519
  5542  001DA2  EFD3  F00E         	line	43
  5543                           	
  5544                           l830:
  5545  001DA6                     	line	45
  5546                           	
  5547                           l2519:
  5548  001DA6                     	movf	((c:___flmul@aexp)),c,w
  5549  001DA6  5020               	btfsc	status,2
  5550  001DA8  B4D8               	goto	u2241
  5551  001DAA  EFD9  F00E         	goto	u2240
  5552  001DAE  EFDB  F00E         u2241:
  5553  001DB2                     	goto	l2527
  5554  001DB2  EFF0  F00E         u2240:
  5555  001DB6                     	line	48
  5556                           	
  5557                           l2521:
  5558  001DB6                     		incf	((c:___flmul@aexp)),c,w
  5559  001DB6  2820               	btfss	status,2
  5560  001DB8  A4D8               	goto	u2251
  5561  001DBA  EFE1  F00E         	goto	u2250
  5562  001DBE  EFE3  F00E         
  5563                           u2251:
  5564  001DC2                     	goto	l2525
  5565  001DC2  EFED  F00E         u2250:
  5566  001DC6                     	line	50
  5567                           	
  5568                           l2523:
  5569  001DC6                     	movlw	low(normalize32(0.0000000000000000))
  5570  001DC6  0E00               	movwf	((c:___flmul@a)),c
  5571  001DC8  6E13               	movlw	high(normalize32(0.0000000000000000))
  5572  001DCA  0E00               	movwf	((c:___flmul@a+1)),c
  5573  001DCC  6E14               	movlw	low highword(normalize32(0.0000000000000000))
  5574  001DCE  0E00               	movwf	((c:___flmul@a+2)),c
  5575  001DD0  6E15               	movlw	high highword(normalize32(0.0000000000000000))
  5576  001DD2  0E00               	movwf	((c:___flmul@a+3)),c
  5577  001DD4  6E16               	goto	l2525
  5578  001DD6  EFED  F00E         	line	51
  5579                           	
  5580                           l832:
  5581  001DDA                     	line	53
  5582                           	
  5583                           l2525:
  5584  001DDA                     	bsf	(0+(23/8)+(c:___flmul@a)),c,(23)&7
  5585  001DDA  8E15               	line	54
  5586                           	goto	l833
  5587  001DDC  EFF8  F00E         	line	55
  5588                           	
  5589                           l831:
  5590  001DE0                     	line	57
  5591                           	
  5592                           l2527:
  5593  001DE0                     	movlw	low(normalize32(0.0000000000000000))
  5594  001DE0  0E00               	movwf	((c:___flmul@a)),c
  5595  001DE2  6E13               	movlw	high(normalize32(0.0000000000000000))
  5596  001DE4  0E00               	movwf	((c:___flmul@a+1)),c
  5597  001DE6  6E14               	movlw	low highword(normalize32(0.0000000000000000))
  5598  001DE8  0E00               	movwf	((c:___flmul@a+2)),c
  5599  001DEA  6E15               	movlw	high highword(normalize32(0.0000000000000000))
  5600  001DEC  0E00               	movwf	((c:___flmul@a+3)),c
  5601  001DEE  6E16               	line	58
  5602                           	
  5603                           l833:
  5604  001DF0                     	line	65
  5605                           	movf	((c:___flmul@aexp)),c,w
  5606  001DF0  5020               	btfsc	status,2
  5607  001DF2  B4D8               	goto	u2261
  5608  001DF4  EFFE  F00E         	goto	u2260
  5609  001DF8  EF00  F00F         u2261:
  5610  001DFC                     	goto	l2531
  5611  001DFC  EF0A  F00F         u2260:
  5612  001E00                     	
  5613                           l2529:
  5614  001E00                     	movf	((c:___flmul@bexp)),c,w
  5615  001E00  5021               	btfss	status,2
  5616  001E02  A4D8               	goto	u2271
  5617  001E04  EF06  F00F         	goto	u2270
  5618  001E08  EF08  F00F         u2271:
  5619  001E0C                     	goto	l2535
  5620  001E0C  EF16  F00F         u2270:
  5621  001E10                     	goto	l2531
  5622  001E10  EF0A  F00F         	
  5623                           l836:
  5624  001E14                     	line	66
  5625                           	
  5626                           l2531:
  5627  001E14                     	movlw	low(normalize32(0.0000000000000000))
  5628  001E14  0E00               	movwf	((c:?___flmul)),c
  5629  001E16  6E0F               	movlw	high(normalize32(0.0000000000000000))
  5630  001E18  0E00               	movwf	((c:?___flmul+1)),c
  5631  001E1A  6E10               	movlw	low highword(normalize32(0.0000000000000000))
  5632  001E1C  0E00               	movwf	((c:?___flmul+2)),c
  5633  001E1E  6E11               	movlw	high highword(normalize32(0.0000000000000000))
  5634  001E20  0E00               	movwf	((c:?___flmul+3)),c
  5635  001E22  6E12               	goto	l837
  5636  001E24  EFC2  F010         	
  5637                           l2533:
  5638  001E28                     	goto	l837
  5639  001E28  EFC2  F010         	line	67
  5640                           	
  5641                           l834:
  5642  001E2C                     	line	95
  5643                           	
  5644                           l2535:
  5645  001E2C                     	movf	(0+((c:___flmul@a)+02h)),c,w
  5646  001E2C  5015               	mulwf	((c:___flmul@b)),c
  5647  001E2E  020F               	movff	prodl,(c:___flmul@temp)
  5648  001E30  CFF3 F026          	movff	prodh,(c:___flmul@temp+1)
  5649  001E34  CFF4 F027          	line	96
  5650                           	
  5651                           l2537:
  5652  001E38                     	movf	((c:___flmul@temp)),c,w
  5653  001E38  5026               	movwf	((c:___flmul@grs)),c
  5654  001E3A  6E1C               	clrf	((c:___flmul@grs+1)),c
  5655  001E3C  6A1D               	clrf	((c:___flmul@grs+2)),c
  5656  001E3E  6A1E               	clrf	((c:___flmul@grs+3)),c
  5657  001E40  6A1F               
  5658                           	line	97
  5659                           	
  5660                           l2539:
  5661  001E42                     	movf	(0+((c:___flmul@temp)+01h)),c,w
  5662  001E42  5027               	movwf	((c:___flmul@prod)),c
  5663  001E44  6E22               	clrf	((c:___flmul@prod+1)),c
  5664  001E46  6A23               	clrf	((c:___flmul@prod+2)),c
  5665  001E48  6A24               	clrf	((c:___flmul@prod+3)),c
  5666  001E4A  6A25               
  5667                           	line	98
  5668                           	movf	(0+((c:___flmul@a)+01h)),c,w
  5669  001E4C  5014               	mulwf	(0+((c:___flmul@b)+01h)),c
  5670  001E4E  0210               	movff	prodl,(c:___flmul@temp)
  5671  001E50  CFF3 F026          	movff	prodh,(c:___flmul@temp+1)
  5672  001E54  CFF4 F027          	line	99
  5673                           	
  5674                           l2541:
  5675  001E58                     	movf	((c:___flmul@temp)),c,w
  5676  001E58  5026               	addwf	((c:___flmul@grs)),c
  5677  001E5A  261C               	movlw	0
  5678  001E5C  0E00               	addwfc	((c:___flmul@grs+1)),c
  5679  001E5E  221D               	addwfc	((c:___flmul@grs+2)),c
  5680  001E60  221E               	addwfc	((c:___flmul@grs+3)),c
  5681  001E62  221F               	line	100
  5682                           	
  5683                           l2543:
  5684  001E64                     	movf	(0+((c:___flmul@temp)+01h)),c,w
  5685  001E64  5027               	addwf	((c:___flmul@prod)),c
  5686  001E66  2622               	movlw	0
  5687  001E68  0E00               	addwfc	((c:___flmul@prod+1)),c
  5688  001E6A  2223               	addwfc	((c:___flmul@prod+2)),c
  5689  001E6C  2224               	addwfc	((c:___flmul@prod+3)),c
  5690  001E6E  2225               	line	101
  5691                           	movf	((c:___flmul@a)),c,w
  5692  001E70  5013               	mulwf	(0+((c:___flmul@b)+02h)),c
  5693  001E72  0211               	movff	prodl,(c:___flmul@temp)
  5694  001E74  CFF3 F026          	movff	prodh,(c:___flmul@temp+1)
  5695  001E78  CFF4 F027          	line	102
  5696                           	
  5697                           l2545:
  5698  001E7C                     	movf	((c:___flmul@temp)),c,w
  5699  001E7C  5026               	addwf	((c:___flmul@grs)),c
  5700  001E7E  261C               	movlw	0
  5701  001E80  0E00               	addwfc	((c:___flmul@grs+1)),c
  5702  001E82  221D               	addwfc	((c:___flmul@grs+2)),c
  5703  001E84  221E               	addwfc	((c:___flmul@grs+3)),c
  5704  001E86  221F               	line	103
  5705                           	
  5706                           l2547:
  5707  001E88                     	movf	(0+((c:___flmul@temp)+01h)),c,w
  5708  001E88  5027               	addwf	((c:___flmul@prod)),c
  5709  001E8A  2622               	movlw	0
  5710  001E8C  0E00               	addwfc	((c:___flmul@prod+1)),c
  5711  001E8E  2223               	addwfc	((c:___flmul@prod+2)),c
  5712  001E90  2224               	addwfc	((c:___flmul@prod+3)),c
  5713  001E92  2225               	line	104
  5714                           	
  5715                           l2549:
  5716  001E94                     	movff	(c:___flmul@grs+2),(c:___flmul@grs+3)
  5717  001E94  C01E  F01F         	movff	(c:___flmul@grs+1),(c:___flmul@grs+2)
  5718  001E98  C01D  F01E         	movff	(c:___flmul@grs),(c:___flmul@grs+1)
  5719  001E9C  C01C  F01D         	clrf	((c:___flmul@grs)),c
  5720  001EA0  6A1C               	line	105
  5721                           	
  5722                           l2551:
  5723  001EA2                     	movf	((c:___flmul@a)),c,w
  5724  001EA2  5013               	mulwf	(0+((c:___flmul@b)+01h)),c
  5725  001EA4  0210               	movff	prodl,(c:___flmul@temp)
  5726  001EA6  CFF3 F026          	movff	prodh,(c:___flmul@temp+1)
  5727  001EAA  CFF4 F027          	line	106
  5728                           	
  5729                           l2553:
  5730  001EAE                     	movf	((c:___flmul@temp)),c,w
  5731  001EAE  5026               	addwf	((c:___flmul@grs)),c
  5732  001EB0  261C               	movf	((c:___flmul@temp+1)),c,w
  5733  001EB2  5027               	addwfc	((c:___flmul@grs+1)),c
  5734  001EB4  221D               	movlw	0
  5735  001EB6  0E00               	addwfc	((c:___flmul@grs+2)),c
  5736  001EB8  221E               	movlw	0
  5737  001EBA  0E00               	addwfc	((c:___flmul@grs+3)),c
  5738  001EBC  221F               
  5739                           	line	107
  5740                           	
  5741                           l2555:
  5742  001EBE                     	movf	(0+((c:___flmul@a)+01h)),c,w
  5743  001EBE  5014               	mulwf	((c:___flmul@b)),c
  5744  001EC0  020F               	movff	prodl,(c:___flmul@temp)
  5745  001EC2  CFF3 F026          	movff	prodh,(c:___flmul@temp+1)
  5746  001EC6  CFF4 F027          	line	108
  5747                           	
  5748                           l2557:
  5749  001ECA                     	movf	((c:___flmul@temp)),c,w
  5750  001ECA  5026               	addwf	((c:___flmul@grs)),c
  5751  001ECC  261C               	movf	((c:___flmul@temp+1)),c,w
  5752  001ECE  5027               	addwfc	((c:___flmul@grs+1)),c
  5753  001ED0  221D               	movlw	0
  5754  001ED2  0E00               	addwfc	((c:___flmul@grs+2)),c
  5755  001ED4  221E               	movlw	0
  5756  001ED6  0E00               	addwfc	((c:___flmul@grs+3)),c
  5757  001ED8  221F               
  5758                           	line	109
  5759                           	
  5760                           l2559:
  5761  001EDA                     	movff	(c:___flmul@grs+2),(c:___flmul@grs+3)
  5762  001EDA  C01E  F01F         	movff	(c:___flmul@grs+1),(c:___flmul@grs+2)
  5763  001EDE  C01D  F01E         	movff	(c:___flmul@grs),(c:___flmul@grs+1)
  5764  001EE2  C01C  F01D         	clrf	((c:___flmul@grs)),c
  5765  001EE6  6A1C               	line	110
  5766                           	movf	((c:___flmul@a)),c,w
  5767  001EE8  5013               	mulwf	((c:___flmul@b)),c
  5768  001EEA  020F               	movff	prodl,(c:___flmul@temp)
  5769  001EEC  CFF3 F026          	movff	prodh,(c:___flmul@temp+1)
  5770  001EF0  CFF4 F027          	line	111
  5771                           	
  5772                           l2561:
  5773  001EF4                     	movf	((c:___flmul@temp)),c,w
  5774  001EF4  5026               	addwf	((c:___flmul@grs)),c
  5775  001EF6  261C               	movf	((c:___flmul@temp+1)),c,w
  5776  001EF8  5027               	addwfc	((c:___flmul@grs+1)),c
  5777  001EFA  221D               	movlw	0
  5778  001EFC  0E00               	addwfc	((c:___flmul@grs+2)),c
  5779  001EFE  221E               	movlw	0
  5780  001F00  0E00               	addwfc	((c:___flmul@grs+3)),c
  5781  001F02  221F               
  5782                           	line	112
  5783                           	
  5784                           l2563:
  5785  001F04                     	movf	(0+((c:___flmul@a)+02h)),c,w
  5786  001F04  5015               	mulwf	(0+((c:___flmul@b)+01h)),c
  5787  001F06  0210               	movff	prodl,(c:___flmul@temp)
  5788  001F08  CFF3 F026          	movff	prodh,(c:___flmul@temp+1)
  5789  001F0C  CFF4 F027          	line	113
  5790                           	movf	((c:___flmul@temp)),c,w
  5791  001F10  5026               	addwf	((c:___flmul@prod)),c
  5792  001F12  2622               	movf	((c:___flmul@temp+1)),c,w
  5793  001F14  5027               	addwfc	((c:___flmul@prod+1)),c
  5794  001F16  2223               	movlw	0
  5795  001F18  0E00               	addwfc	((c:___flmul@prod+2)),c
  5796  001F1A  2224               	movlw	0
  5797  001F1C  0E00               	addwfc	((c:___flmul@prod+3)),c
  5798  001F1E  2225               
  5799                           	line	114
  5800                           	
  5801                           l2565:
  5802  001F20                     	movf	(0+((c:___flmul@a)+01h)),c,w
  5803  001F20  5014               	mulwf	(0+((c:___flmul@b)+02h)),c
  5804  001F22  0211               	movff	prodl,(c:___flmul@temp)
  5805  001F24  CFF3 F026          	movff	prodh,(c:___flmul@temp+1)
  5806  001F28  CFF4 F027          	line	115
  5807                           	
  5808                           l2567:
  5809  001F2C                     	movf	((c:___flmul@temp)),c,w
  5810  001F2C  5026               	addwf	((c:___flmul@prod)),c
  5811  001F2E  2622               	movf	((c:___flmul@temp+1)),c,w
  5812  001F30  5027               	addwfc	((c:___flmul@prod+1)),c
  5813  001F32  2223               	movlw	0
  5814  001F34  0E00               	addwfc	((c:___flmul@prod+2)),c
  5815  001F36  2224               	movlw	0
  5816  001F38  0E00               	addwfc	((c:___flmul@prod+3)),c
  5817  001F3A  2225               
  5818                           	line	116
  5819                           	movf	(0+((c:___flmul@a)+02h)),c,w
  5820  001F3C  5015               	mulwf	(0+((c:___flmul@b)+02h)),c
  5821  001F3E  0211               	movff	prodl,(c:___flmul@temp)
  5822  001F40  CFF3 F026          	movff	prodh,(c:___flmul@temp+1)
  5823  001F44  CFF4 F027          	line	117
  5824                           	
  5825                           l2569:
  5826  001F48                     	movf	((c:___flmul@temp)),c,w
  5827  001F48  5026               	movwf	(??___flmul+0+0)&0ffh,c
  5828  001F4A  6E17               	movf	((c:___flmul@temp+1)),c,w
  5829  001F4C  5027               	movwf	1+(??___flmul+0+0)&0ffh,c
  5830  001F4E  6E18               	
  5831                           	clrf	2+(??___flmul+0+0)&0ffh,c
  5832  001F50  6A19               	
  5833                           	clrf	3+(??___flmul+0+0)&0ffh,c
  5834  001F52  6A1A               	movff	??___flmul+0+2,??___flmul+0+3
  5835  001F54  C019  F01A         	movff	??___flmul+0+1,??___flmul+0+2
  5836  001F58  C018  F019         	movff	??___flmul+0+0,??___flmul+0+1
  5837  001F5C  C017  F018         	clrf	(??___flmul+0+0),c
  5838  001F60  6A17               	movf	(??___flmul+0+0),c,w
  5839  001F62  5017               	addwf	((c:___flmul@prod)),c
  5840  001F64  2622               	movf	(??___flmul+0+1),c,w
  5841  001F66  5018               	addwfc	((c:___flmul@prod+1)),c
  5842  001F68  2223               	movf	(??___flmul+0+2),c,w
  5843  001F6A  5019               	addwfc	((c:___flmul@prod+2)),c
  5844  001F6C  2224               	movf	(??___flmul+0+3),c,w
  5845  001F6E  501A               	addwfc	((c:___flmul@prod+3)),c
  5846  001F70  2225               
  5847                           	line	145
  5848                           	
  5849                           l2571:
  5850  001F72                     	movff	(c:___flmul@grs),??___flmul+0+0
  5851  001F72  C01C  F017         	movff	(c:___flmul@grs+1),??___flmul+0+0+1
  5852  001F76  C01D  F018         	movff	(c:___flmul@grs+2),??___flmul+0+0+2
  5853  001F7A  C01E  F019         	movff	(c:___flmul@grs+3),??___flmul+0+0+3
  5854  001F7E  C01F  F01A         	movlw	018h+1
  5855  001F82  0E19               	goto	u2280
  5856  001F84  EFC9  F00F         u2285:
  5857  001F88                     	bcf	status,0
  5858  001F88  90D8               	rrcf	(??___flmul+0+3),c
  5859  001F8A  321A               	rrcf	(??___flmul+0+2),c
  5860  001F8C  3219               	rrcf	(??___flmul+0+1),c
  5861  001F8E  3218               	rrcf	(??___flmul+0+0),c
  5862  001F90  3217               u2280:
  5863  001F92                     	decfsz	wreg
  5864  001F92  2EE8               	goto	u2285
  5865  001F94  EFC4  F00F         	movf	(??___flmul+0+0),c,w
  5866  001F98  5017               	addwf	((c:___flmul@prod)),c
  5867  001F9A  2622               	movf	(??___flmul+0+1),c,w
  5868  001F9C  5018               	addwfc	((c:___flmul@prod+1)),c
  5869  001F9E  2223               	movf	(??___flmul+0+2),c,w
  5870  001FA0  5019               	addwfc	((c:___flmul@prod+2)),c
  5871  001FA2  2224               	movf	(??___flmul+0+3),c,w
  5872  001FA4  501A               	addwfc	((c:___flmul@prod+3)),c
  5873  001FA6  2225               
  5874                           	line	146
  5875                           	
  5876                           l2573:
  5877  001FA8                     	movff	(c:___flmul@grs+2),(c:___flmul@grs+3)
  5878  001FA8  C01E  F01F         	movff	(c:___flmul@grs+1),(c:___flmul@grs+2)
  5879  001FAC  C01D  F01E         	movff	(c:___flmul@grs),(c:___flmul@grs+1)
  5880  001FB0  C01C  F01D         	clrf	((c:___flmul@grs)),c
  5881  001FB4  6A1C               	line	149
  5882                           	
  5883                           l2575:
  5884  001FB6                     	movf	((c:___flmul@aexp)),c,w
  5885  001FB6  5020               	movff	(c:___flmul@bexp),??___flmul+0+0
  5886  001FB8  C021  F017         	clrf	(??___flmul+0+0+1)&0ffh,c
  5887  001FBC  6A18               	addwf	(??___flmul+0+0),c
  5888  001FBE  2617               	movlw	0
  5889  001FC0  0E00               	addwfc	(??___flmul+0+1),c
  5890  001FC2  2218               	movlw	low(-126)
  5891  001FC4  0E82               	addwf	(??___flmul+0+0),c,w
  5892  001FC6  2417               	movwf	((c:___flmul@temp)),c
  5893  001FC8  6E26               	movlw	high(-126)
  5894  001FCA  0EFF               	addwfc	(??___flmul+0+1),c,w
  5895  001FCC  2018               	movwf	1+((c:___flmul@temp)),c
  5896  001FCE  6E27               	line	152
  5897                           	goto	l2583
  5898  001FD0  EF01  F010         	
  5899                           l839:
  5900  001FD4                     	line	153
  5901                           	
  5902                           l2577:
  5903  001FD4                     	bcf	status,0
  5904  001FD4  90D8               	rlcf	((c:___flmul@prod)),c
  5905  001FD6  3622               	rlcf	((c:___flmul@prod+1)),c
  5906  001FD8  3623               	rlcf	((c:___flmul@prod+2)),c
  5907  001FDA  3624               	rlcf	((c:___flmul@prod+3)),c
  5908  001FDC  3625               	line	154
  5909                           	
  5910                           l2579:
  5911  001FDE                     	
  5912                           	btfss	((c:___flmul@grs+3)),c,(31)&7
  5913  001FDE  AE1F               	goto	u2291
  5914  001FE0  EFF4  F00F         	goto	u2290
  5915  001FE4  EFF6  F00F         u2291:
  5916  001FE8                     	goto	l840
  5917  001FE8  EFF7  F00F         u2290:
  5918  001FEC                     	line	155
  5919                           	
  5920                           l2581:
  5921  001FEC                     	bsf	(0+(0/8)+(c:___flmul@prod)),c,(0)&7
  5922  001FEC  8022               	line	156
  5923                           	
  5924                           l840:
  5925  001FEE                     	line	157
  5926                           	bcf	status,0
  5927  001FEE  90D8               	rlcf	((c:___flmul@grs)),c
  5928  001FF0  361C               	rlcf	((c:___flmul@grs+1)),c
  5929  001FF2  361D               	rlcf	((c:___flmul@grs+2)),c
  5930  001FF4  361E               	rlcf	((c:___flmul@grs+3)),c
  5931  001FF6  361F               	line	158
  5932                           	decf	((c:___flmul@temp)),c
  5933  001FF8  0626               	btfss	status,0
  5934  001FFA  A0D8               	decf	((c:___flmul@temp+1)),c
  5935  001FFC  0627               	goto	l2583
  5936  001FFE  EF01  F010         	line	159
  5937                           	
  5938                           l838:
  5939  002002                     	line	152
  5940                           	
  5941                           l2583:
  5942  002002                     	
  5943                           	btfss	((c:___flmul@prod+2)),c,(23)&7
  5944  002002  AE24               	goto	u2301
  5945  002004  EF06  F010         	goto	u2300
  5946  002008  EF08  F010         u2301:
  5947  00200C                     	goto	l2577
  5948  00200C  EFEA  F00F         u2300:
  5949  002010                     	goto	l2585
  5950  002010  EF0A  F010         	
  5951                           l841:
  5952  002014                     	line	163
  5953                           	
  5954                           l2585:
  5955  002014                     	movlw	low(0)
  5956  002014  0E00               	movwf	((c:___flmul@aexp)),c
  5957  002016  6E20               	line	164
  5958                           	
  5959                           l2587:
  5960  002018                     	
  5961                           	btfss	((c:___flmul@grs+3)),c,(31)&7
  5962  002018  AE1F               	goto	u2311
  5963  00201A  EF11  F010         	goto	u2310
  5964  00201E  EF13  F010         u2311:
  5965  002022                     	goto	l842
  5966  002022  EF3B  F010         u2310:
  5967  002026                     	line	165
  5968                           	
  5969                           l2589:
  5970  002026                     	movlw	0FFh
  5971  002026  0EFF               	andwf	((c:___flmul@grs)),c,w
  5972  002028  141C               	movwf	(??___flmul+0+0)&0ffh,c
  5973  00202A  6E17               	movlw	0FFh
  5974  00202C  0EFF               	andwf	((c:___flmul@grs+1)),c,w
  5975  00202E  141D               	movwf	1+(??___flmul+0+0)&0ffh,c
  5976  002030  6E18               	
  5977                           	movlw	0FFh
  5978  002032  0EFF               	andwf	((c:___flmul@grs+2)),c,w
  5979  002034  141E               	movwf	2+(??___flmul+0+0)&0ffh,c
  5980  002036  6E19               	
  5981                           	movlw	07Fh
  5982  002038  0E7F               	andwf	((c:___flmul@grs+3)),c,w
  5983  00203A  141F               	movwf	3+(??___flmul+0+0)&0ffh,c
  5984  00203C  6E1A               	movf	(??___flmul+0+0),c,w
  5985  00203E  5017               iorwf	(??___flmul+0+1),c,w
  5986  002040  1018               iorwf	(??___flmul+0+2),c,w
  5987  002042  1019               iorwf	(??___flmul+0+3),c,w
  5988  002044  101A               	btfsc	status,2
  5989  002046  B4D8               	goto	u2321
  5990  002048  EF28  F010         	goto	u2320
  5991  00204C  EF2A  F010         
  5992                           u2321:
  5993  002050                     	goto	l843
  5994  002050  EF2E  F010         u2320:
  5995  002054                     	line	166
  5996                           	
  5997                           l2591:
  5998  002054                     	movlw	low(01h)
  5999  002054  0E01               	movwf	((c:___flmul@aexp)),c
  6000  002056  6E20               	line	167
  6001                           	goto	l842
  6002  002058  EF3B  F010         	line	168
  6003                           	
  6004                           l843:
  6005  00205C                     	line	169
  6006                           	
  6007                           	btfss	((c:___flmul@prod)),c,(0)&7
  6008  00205C  A022               	goto	u2331
  6009  00205E  EF33  F010         	goto	u2330
  6010  002062  EF35  F010         u2331:
  6011  002066                     	goto	l842
  6012  002066  EF3B  F010         u2330:
  6013  00206A                     	line	170
  6014                           	
  6015                           l2593:
  6016  00206A                     	movlw	low(01h)
  6017  00206A  0E01               	movwf	((c:___flmul@aexp)),c
  6018  00206C  6E20               	goto	l842
  6019  00206E  EF3B  F010         	line	171
  6020                           	
  6021                           l845:
  6022  002072                     	goto	l842
  6023  002072  EF3B  F010         	line	172
  6024                           	
  6025                           l844:
  6026  002076                     	line	173
  6027                           	
  6028                           l842:
  6029  002076                     	line	174
  6030                           	movf	((c:___flmul@aexp)),c,w
  6031  002076  5020               	btfsc	status,2
  6032  002078  B4D8               	goto	u2341
  6033  00207A  EF41  F010         	goto	u2340
  6034  00207E  EF43  F010         u2341:
  6035  002082                     	goto	l2603
  6036  002082  EF6B  F010         u2340:
  6037  002086                     	line	175
  6038                           	
  6039                           l2595:
  6040  002086                     	movlw	low(01h)
  6041  002086  0E01               	addwf	((c:___flmul@prod)),c
  6042  002088  2622               	movlw	0
  6043  00208A  0E00               	addwfc	((c:___flmul@prod+1)),c
  6044  00208C  2223               	addwfc	((c:___flmul@prod+2)),c
  6045  00208E  2224               	addwfc	((c:___flmul@prod+3)),c
  6046  002090  2225               	line	176
  6047                           	
  6048                           l2597:
  6049  002092                     	
  6050                           	btfss	((c:___flmul@prod+3)),c,(24)&7
  6051  002092  A025               	goto	u2351
  6052  002094  EF4E  F010         	goto	u2350
  6053  002098  EF50  F010         u2351:
  6054  00209C                     	goto	l2603
  6055  00209C  EF6B  F010         u2350:
  6056  0020A0                     	line	177
  6057                           	
  6058                           l2599:
  6059  0020A0                     	movff	(c:___flmul@prod),??___flmul+0+0
  6060  0020A0  C022  F017         	movff	(c:___flmul@prod+1),??___flmul+0+0+1
  6061  0020A4  C023  F018         	movff	(c:___flmul@prod+2),??___flmul+0+0+2
  6062  0020A8  C024  F019         	movff	(c:___flmul@prod+3),??___flmul+0+0+3
  6063  0020AC  C025  F01A         	rlcf	(??___flmul+0+3),c,w
  6064  0020B0  341A               	rrcf	(??___flmul+0+3),c
  6065  0020B2  321A               	rrcf	(??___flmul+0+2),c
  6066  0020B4  3219               	rrcf	(??___flmul+0+1),c
  6067  0020B6  3218               	rrcf	(??___flmul+0+0),c
  6068  0020B8  3217               	movff	??___flmul+0+0,(c:___flmul@prod)
  6069  0020BA  C017  F022         	movff	??___flmul+0+1,(c:___flmul@prod+1)
  6070  0020BE  C018  F023         	movff	??___flmul+0+2,(c:___flmul@prod+2)
  6071  0020C2  C019  F024         	movff	??___flmul+0+3,(c:___flmul@prod+3)
  6072  0020C6  C01A  F025         	line	178
  6073                           	
  6074                           l2601:
  6075  0020CA                     	infsnz	((c:___flmul@temp)),c
  6076  0020CA  4A26               	incf	((c:___flmul@temp+1)),c
  6077  0020CC  2A27               	goto	l2603
  6078  0020CE  EF6B  F010         	line	179
  6079                           	
  6080                           l847:
  6081  0020D2                     	goto	l2603
  6082  0020D2  EF6B  F010         	line	180
  6083                           	
  6084                           l846:
  6085  0020D6                     	line	183
  6086                           	
  6087                           l2603:
  6088  0020D6                     	btfsc	((c:___flmul@temp+1)),c,7
  6089  0020D6  BE27               	goto	u2361
  6090  0020D8  EF76  F010         	movf	((c:___flmul@temp+1)),c,w
  6091  0020DC  5027               	bnz	u2360
  6092  0020DE  E108               	incf	((c:___flmul@temp)),c,w
  6093  0020E0  2826               	btfss	status,0
  6094  0020E2  A0D8               	goto	u2361
  6095  0020E4  EF76  F010         	goto	u2360
  6096  0020E8  EF78  F010         
  6097                           u2361:
  6098  0020EC                     	goto	l2607
  6099  0020EC  EF82  F010         u2360:
  6100  0020F0                     	line	184
  6101                           	
  6102                           l2605:
  6103  0020F0                     	movlw	low(07F800000h)
  6104  0020F0  0E00               	movwf	((c:___flmul@prod)),c
  6105  0020F2  6E22               	movlw	high(07F800000h)
  6106  0020F4  0E00               	movwf	((c:___flmul@prod+1)),c
  6107  0020F6  6E23               	movlw	low highword(07F800000h)
  6108  0020F8  0E80               	movwf	((c:___flmul@prod+2)),c
  6109  0020FA  6E24               	movlw	high highword(07F800000h)
  6110  0020FC  0E7F               	movwf	((c:___flmul@prod+3)),c
  6111  0020FE  6E25               	line	185
  6112                           	goto	l2619
  6113  002100  EFB6  F010         	line	187
  6114                           	
  6115                           l848:
  6116  002104                     	
  6117                           l2607:
  6118  002104                     	btfsc	((c:___flmul@temp+1)),c,7
  6119  002104  BE27               	goto	u2370
  6120  002106  EF8F  F010         	movf	((c:___flmul@temp+1)),c,w
  6121  00210A  5027               	bnz	u2371
  6122  00210C  E106               	decf	((c:___flmul@temp)),c,w
  6123  00210E  0426               	btfsc	status,0
  6124  002110  B0D8               	goto	u2371
  6125  002112  EF8D  F010         	goto	u2370
  6126  002116  EF8F  F010         
  6127                           u2371:
  6128  00211A                     	goto	l850
  6129  00211A  EF9B  F010         u2370:
  6130  00211E                     	line	188
  6131                           	
  6132                           l2609:
  6133  00211E                     	movlw	low(0)
  6134  00211E  0E00               	movwf	((c:___flmul@prod)),c
  6135  002120  6E22               	movlw	high(0)
  6136  002122  0E00               	movwf	((c:___flmul@prod+1)),c
  6137  002124  6E23               	movlw	low highword(0)
  6138  002126  0E00               	movwf	((c:___flmul@prod+2)),c
  6139  002128  6E24               	movlw	high highword(0)
  6140  00212A  0E00               	movwf	((c:___flmul@prod+3)),c
  6141  00212C  6E25               	line	190
  6142                           	movlw	low(0)
  6143  00212E  0E00               	movwf	((c:___flmul@sign)),c
  6144  002130  6E1B               	line	191
  6145                           	goto	l2619
  6146  002132  EFB6  F010         	line	192
  6147                           	
  6148                           l850:
  6149  002136                     	line	194
  6150                           	movff	(c:___flmul@temp),(c:___flmul@bexp)
  6151  002136  C026  F021         	line	195
  6152                           	
  6153                           l2611:
  6154  00213A                     	movlw	0FFh
  6155  00213A  0EFF               	andwf	((c:___flmul@prod)),c
  6156  00213C  1622               	movlw	0FFh
  6157  00213E  0EFF               	andwf	((c:___flmul@prod+1)),c
  6158  002140  1623               	movlw	07Fh
  6159  002142  0E7F               	andwf	((c:___flmul@prod+2)),c
  6160  002144  1624               	movlw	0
  6161  002146  0E00               	andwf	((c:___flmul@prod+3)),c
  6162  002148  1625               	line	196
  6163                           	
  6164                           l2613:
  6165  00214A                     	
  6166                           	btfss	((c:___flmul@bexp)),c,(0)&7
  6167  00214A  A021               	goto	u2381
  6168  00214C  EFAA  F010         	goto	u2380
  6169  002150  EFAC  F010         u2381:
  6170  002154                     	goto	l2617
  6171  002154  EFAF  F010         u2380:
  6172  002158                     	line	197
  6173                           	
  6174                           l2615:
  6175  002158                     	bsf	(0+(7/8)+0+((c:___flmul@prod)+02h)),c,(7)&7
  6176  002158  8E24               	goto	l2617
  6177  00215A  EFAF  F010         	line	198
  6178                           	
  6179                           l852:
  6180  00215E                     	line	199
  6181                           	
  6182                           l2617:
  6183  00215E                     	bcf	status,0
  6184  00215E  90D8               	rrcf	((c:___flmul@bexp)),c,w
  6185  002160  3021               	movwf	(0+((c:___flmul@prod)+03h)),c
  6186  002162  6E25               	goto	l2619
  6187  002164  EFB6  F010         	line	200
  6188                           	
  6189                           l851:
  6190  002168                     	goto	l2619
  6191  002168  EFB6  F010         	
  6192                           l849:
  6193  00216C                     	line	201
  6194                           	
  6195                           l2619:
  6196  00216C                     	movf	((c:___flmul@sign)),c,w
  6197  00216C  501B               	iorwf	(0+((c:___flmul@prod)+03h)),c
  6198  00216E  1225               	line	203
  6199                           	
  6200                           l2621:
  6201  002170                     	movff	(c:___flmul@prod),(c:?___flmul)
  6202  002170  C022  F00F         	movff	(c:___flmul@prod+1),(c:?___flmul+1)
  6203  002174  C023  F010         	movff	(c:___flmul@prod+2),(c:?___flmul+2)
  6204  002178  C024  F011         	movff	(c:___flmul@prod+3),(c:?___flmul+3)
  6205  00217C  C025  F012         	goto	l837
  6206  002180  EFC2  F010         	
  6207                           l2623:
  6208  002184                     	line	205
  6209                           	
  6210                           l837:
  6211  002184                     	return	;funcret
  6212  002184  0012               	opt stack 0
  6213                           GLOBAL	__end_of___flmul
  6214                           	__end_of___flmul:
  6215  002186                     	signat	___flmul,8316
  6216                           	global	___awmod
  6217                           
  6218 ;; *************** function ___awmod *****************
  6219 ;; Defined at:
  6220 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
  6221 ;; Parameters:    Size  Location     Type
  6222 ;;  dividend        2    0[COMRAM] int 
  6223 ;;  divisor         2    2[COMRAM] int 
  6224 ;; Auto vars:     Size  Location     Type
  6225 ;;  sign            1    5[COMRAM] unsigned char 
  6226 ;;  counter         1    4[COMRAM] unsigned char 
  6227 ;; Return value:  Size  Location     Type
  6228 ;;                  2    0[COMRAM] int 
  6229 ;; Registers used:
  6230 ;;		wreg, status,2, status,0
  6231 ;; Tracked objects:
  6232 ;;		On entry : 0/0
  6233 ;;		On exit  : 0/0
  6234 ;;		Unchanged: 0/0
  6235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6236 ;;      Params:         4       0       0       0       0       0       0       0       0
  6237 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6238 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6239 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6240 ;;Total ram usage:        6 bytes
  6241 ;; Hardware stack levels used:    1
  6242 ;; This function calls:
  6243 ;;		Nothing
  6244 ;; This function is called by:
  6245 ;;		_fround
  6246 ;;		_scale
  6247 ;; This function uses a non-reentrant model
  6248 ;;
  6249                           psect	text6,class=CODE,space=0,reloc=2,group=1
  6250                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
  6251                           	line	8
  6252                           global __ptext6
  6253                           __ptext6:
  6254  003054                     psect	text6
  6255                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
  6256                           	line	8
  6257                           	global	__size_of___awmod
  6258                           	__size_of___awmod	equ	__end_of___awmod-___awmod
  6259  0000                     	
  6260                           ___awmod:
  6261  003054                     ;incstack = 0
  6262                           	opt	stack 28
  6263                           	line	13
  6264                           	
  6265                           l2669:
  6266  003054                     	movlw	low(0)
  6267  003054  0E00               	movwf	((c:___awmod@sign)),c
  6268  003056  6E06               	line	14
  6269                           	
  6270                           l2671:
  6271  003058                     	btfsc	((c:___awmod@dividend+1)),c,7
  6272  003058  BE02               	goto	u2450
  6273  00305A  EF33  F018         	goto	u2451
  6274  00305E  EF31  F018         
  6275                           u2451:
  6276  003062                     	goto	l2677
  6277  003062  EF3B  F018         u2450:
  6278  003066                     	line	15
  6279                           	
  6280                           l2673:
  6281  003066                     	negf	((c:___awmod@dividend)),c
  6282  003066  6C01               	comf	((c:___awmod@dividend+1)),c
  6283  003068  1E02               	btfsc	status,0
  6284  00306A  B0D8               	incf	((c:___awmod@dividend+1)),c
  6285  00306C  2A02               	line	16
  6286                           	
  6287                           l2675:
  6288  00306E                     	movlw	low(01h)
  6289  00306E  0E01               	movwf	((c:___awmod@sign)),c
  6290  003070  6E06               	goto	l2677
  6291  003072  EF3B  F018         	line	17
  6292                           	
  6293                           l445:
  6294  003076                     	line	18
  6295                           	
  6296                           l2677:
  6297  003076                     	btfsc	((c:___awmod@divisor+1)),c,7
  6298  003076  BE04               	goto	u2460
  6299  003078  EF42  F018         	goto	u2461
  6300  00307C  EF40  F018         
  6301                           u2461:
  6302  003080                     	goto	l2681
  6303  003080  EF48  F018         u2460:
  6304  003084                     	line	19
  6305                           	
  6306                           l2679:
  6307  003084                     	negf	((c:___awmod@divisor)),c
  6308  003084  6C03               	comf	((c:___awmod@divisor+1)),c
  6309  003086  1E04               	btfsc	status,0
  6310  003088  B0D8               	incf	((c:___awmod@divisor+1)),c
  6311  00308A  2A04               	goto	l2681
  6312  00308C  EF48  F018         	
  6313                           l446:
  6314  003090                     	line	20
  6315                           	
  6316                           l2681:
  6317  003090                     	movf	((c:___awmod@divisor)),c,w
  6318  003090  5003               iorwf	((c:___awmod@divisor+1)),c,w
  6319  003092  1004               	btfsc	status,2
  6320  003094  B4D8               	goto	u2471
  6321  003096  EF4F  F018         	goto	u2470
  6322  00309A  EF51  F018         
  6323                           u2471:
  6324  00309E                     	goto	l2697
  6325  00309E  EF81  F018         u2470:
  6326  0030A2                     	line	21
  6327                           	
  6328                           l2683:
  6329  0030A2                     	movlw	low(01h)
  6330  0030A2  0E01               	movwf	((c:___awmod@counter)),c
  6331  0030A4  6E05               	line	22
  6332                           	goto	l2687
  6333  0030A6  EF5B  F018         	
  6334                           l449:
  6335  0030AA                     	line	23
  6336                           	
  6337                           l2685:
  6338  0030AA                     	bcf	status,0
  6339  0030AA  90D8               	rlcf	((c:___awmod@divisor)),c
  6340  0030AC  3603               	rlcf	((c:___awmod@divisor+1)),c
  6341  0030AE  3604               	line	24
  6342                           	incf	((c:___awmod@counter)),c
  6343  0030B0  2A05               	goto	l2687
  6344  0030B2  EF5B  F018         	line	25
  6345                           	
  6346                           l448:
  6347  0030B6                     	line	22
  6348                           	
  6349                           l2687:
  6350  0030B6                     	
  6351                           	btfss	((c:___awmod@divisor+1)),c,(15)&7
  6352  0030B6  AE04               	goto	u2481
  6353  0030B8  EF60  F018         	goto	u2480
  6354  0030BC  EF62  F018         u2481:
  6355  0030C0                     	goto	l2685
  6356  0030C0  EF55  F018         u2480:
  6357  0030C4                     	goto	l2689
  6358  0030C4  EF66  F018         	
  6359                           l450:
  6360  0030C8                     	goto	l2689
  6361  0030C8  EF66  F018         	line	26
  6362                           	
  6363                           l451:
  6364  0030CC                     	line	27
  6365                           	
  6366                           l2689:
  6367  0030CC                     		movf	((c:___awmod@divisor)),c,w
  6368  0030CC  5003               	subwf	((c:___awmod@dividend)),c,w
  6369  0030CE  5C01               	movf	((c:___awmod@divisor+1)),c,w
  6370  0030D0  5004               	subwfb	((c:___awmod@dividend+1)),c,w
  6371  0030D2  5802               	btfss	status,0
  6372  0030D4  A0D8               	goto	u2491
  6373  0030D6  EF6F  F018         	goto	u2490
  6374  0030DA  EF71  F018         
  6375                           u2491:
  6376  0030DE                     	goto	l2693
  6377  0030DE  EF77  F018         u2490:
  6378  0030E2                     	line	28
  6379                           	
  6380                           l2691:
  6381  0030E2                     	movf	((c:___awmod@divisor)),c,w
  6382  0030E2  5003               	subwf	((c:___awmod@dividend)),c
  6383  0030E4  5E01               	movf	((c:___awmod@divisor+1)),c,w
  6384  0030E6  5004               	subwfb	((c:___awmod@dividend+1)),c
  6385  0030E8  5A02               
  6386                           	goto	l2693
  6387  0030EA  EF77  F018         	
  6388                           l452:
  6389  0030EE                     	line	29
  6390                           	
  6391                           l2693:
  6392  0030EE                     	bcf	status,0
  6393  0030EE  90D8               	rrcf	((c:___awmod@divisor+1)),c
  6394  0030F0  3204               	rrcf	((c:___awmod@divisor)),c
  6395  0030F2  3203               	line	30
  6396                           	
  6397                           l2695:
  6398  0030F4                     	decfsz	((c:___awmod@counter)),c
  6399  0030F4  2E05               	
  6400                           	goto	l2689
  6401  0030F6  EF66  F018         	goto	l2697
  6402  0030FA  EF81  F018         	
  6403                           l453:
  6404  0030FE                     	goto	l2697
  6405  0030FE  EF81  F018         	line	31
  6406                           	
  6407                           l447:
  6408  003102                     	line	32
  6409                           	
  6410                           l2697:
  6411  003102                     	movf	((c:___awmod@sign)),c,w
  6412  003102  5006               	btfsc	status,2
  6413  003104  B4D8               	goto	u2501
  6414  003106  EF87  F018         	goto	u2500
  6415  00310A  EF89  F018         u2501:
  6416  00310E                     	goto	l2701
  6417  00310E  EF8F  F018         u2500:
  6418  003112                     	line	33
  6419                           	
  6420                           l2699:
  6421  003112                     	negf	((c:___awmod@dividend)),c
  6422  003112  6C01               	comf	((c:___awmod@dividend+1)),c
  6423  003114  1E02               	btfsc	status,0
  6424  003116  B0D8               	incf	((c:___awmod@dividend+1)),c
  6425  003118  2A02               	goto	l2701
  6426  00311A  EF8F  F018         	
  6427                           l454:
  6428  00311E                     	line	34
  6429                           	
  6430                           l2701:
  6431  00311E                     	movff	(c:___awmod@dividend),(c:?___awmod)
  6432  00311E  C001  F001         	movff	(c:___awmod@dividend+1),(c:?___awmod+1)
  6433  003122  C002  F002         	goto	l455
  6434  003126  EF95  F018         	
  6435                           l2703:
  6436  00312A                     	line	35
  6437                           	
  6438                           l455:
  6439  00312A                     	return	;funcret
  6440  00312A  0012               	opt stack 0
  6441                           GLOBAL	__end_of___awmod
  6442                           	__end_of___awmod:
  6443  00312C                     	signat	___awmod,8314
  6444                           	global	___awdiv
  6445                           
  6446 ;; *************** function ___awdiv *****************
  6447 ;; Defined at:
  6448 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  6449 ;; Parameters:    Size  Location     Type
  6450 ;;  dividend        2    6[COMRAM] int 
  6451 ;;  divisor         2    8[COMRAM] int 
  6452 ;; Auto vars:     Size  Location     Type
  6453 ;;  quotient        2   12[COMRAM] int 
  6454 ;;  sign            1   11[COMRAM] unsigned char 
  6455 ;;  counter         1   10[COMRAM] unsigned char 
  6456 ;; Return value:  Size  Location     Type
  6457 ;;                  2    6[COMRAM] int 
  6458 ;; Registers used:
  6459 ;;		wreg, status,2, status,0
  6460 ;; Tracked objects:
  6461 ;;		On entry : 0/0
  6462 ;;		On exit  : 0/0
  6463 ;;		Unchanged: 0/0
  6464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6465 ;;      Params:         4       0       0       0       0       0       0       0       0
  6466 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6467 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6468 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6469 ;;Total ram usage:        8 bytes
  6470 ;; Hardware stack levels used:    1
  6471 ;; This function calls:
  6472 ;;		Nothing
  6473 ;; This function is called by:
  6474 ;;		_main
  6475 ;;		_fround
  6476 ;;		_scale
  6477 ;;		_sprintf
  6478 ;; This function uses a non-reentrant model
  6479 ;;
  6480                           psect	text7,class=CODE,space=0,reloc=2,group=1
  6481                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  6482                           	line	8
  6483                           global __ptext7
  6484                           __ptext7:
  6485  002F68                     psect	text7
  6486                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  6487                           	line	8
  6488                           	global	__size_of___awdiv
  6489                           	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  6490  0000                     	
  6491                           ___awdiv:
  6492  002F68                     ;incstack = 0
  6493                           	opt	stack 28
  6494                           	line	14
  6495                           	
  6496                           l2625:
  6497  002F68                     	movlw	low(0)
  6498  002F68  0E00               	movwf	((c:___awdiv@sign)),c
  6499  002F6A  6E0C               	line	15
  6500                           	
  6501                           l2627:
  6502  002F6C                     	btfsc	((c:___awdiv@divisor+1)),c,7
  6503  002F6C  BE0A               	goto	u2390
  6504  002F6E  EFBD  F017         	goto	u2391
  6505  002F72  EFBB  F017         
  6506                           u2391:
  6507  002F76                     	goto	l2633
  6508  002F76  EFC5  F017         u2390:
  6509  002F7A                     	line	16
  6510                           	
  6511                           l2629:
  6512  002F7A                     	negf	((c:___awdiv@divisor)),c
  6513  002F7A  6C09               	comf	((c:___awdiv@divisor+1)),c
  6514  002F7C  1E0A               	btfsc	status,0
  6515  002F7E  B0D8               	incf	((c:___awdiv@divisor+1)),c
  6516  002F80  2A0A               	line	17
  6517                           	
  6518                           l2631:
  6519  002F82                     	movlw	low(01h)
  6520  002F82  0E01               	movwf	((c:___awdiv@sign)),c
  6521  002F84  6E0C               	goto	l2633
  6522  002F86  EFC5  F017         	line	18
  6523                           	
  6524                           l432:
  6525  002F8A                     	line	19
  6526                           	
  6527                           l2633:
  6528  002F8A                     	btfsc	((c:___awdiv@dividend+1)),c,7
  6529  002F8A  BE08               	goto	u2400
  6530  002F8C  EFCC  F017         	goto	u2401
  6531  002F90  EFCA  F017         
  6532                           u2401:
  6533  002F94                     	goto	l2639
  6534  002F94  EFD4  F017         u2400:
  6535  002F98                     	line	20
  6536                           	
  6537                           l2635:
  6538  002F98                     	negf	((c:___awdiv@dividend)),c
  6539  002F98  6C07               	comf	((c:___awdiv@dividend+1)),c
  6540  002F9A  1E08               	btfsc	status,0
  6541  002F9C  B0D8               	incf	((c:___awdiv@dividend+1)),c
  6542  002F9E  2A08               	line	21
  6543                           	
  6544                           l2637:
  6545  002FA0                     	movlw	(01h)&0ffh
  6546  002FA0  0E01               	xorwf	((c:___awdiv@sign)),c
  6547  002FA2  1A0C               	goto	l2639
  6548  002FA4  EFD4  F017         	line	22
  6549                           	
  6550                           l433:
  6551  002FA8                     	line	23
  6552                           	
  6553                           l2639:
  6554  002FA8                     	movlw	high(0)
  6555  002FA8  0E00               	movwf	((c:___awdiv@quotient+1)),c
  6556  002FAA  6E0E               	movlw	low(0)
  6557  002FAC  0E00               	movwf	((c:___awdiv@quotient)),c
  6558  002FAE  6E0D               	line	24
  6559                           	
  6560                           l2641:
  6561  002FB0                     	movf	((c:___awdiv@divisor)),c,w
  6562  002FB0  5009               iorwf	((c:___awdiv@divisor+1)),c,w
  6563  002FB2  100A               	btfsc	status,2
  6564  002FB4  B4D8               	goto	u2411
  6565  002FB6  EFDF  F017         	goto	u2410
  6566  002FBA  EFE1  F017         
  6567                           u2411:
  6568  002FBE                     	goto	l2661
  6569  002FBE  EF15  F018         u2410:
  6570  002FC2                     	line	25
  6571                           	
  6572                           l2643:
  6573  002FC2                     	movlw	low(01h)
  6574  002FC2  0E01               	movwf	((c:___awdiv@counter)),c
  6575  002FC4  6E0B               	line	26
  6576                           	goto	l2647
  6577  002FC6  EFEB  F017         	
  6578                           l436:
  6579  002FCA                     	line	27
  6580                           	
  6581                           l2645:
  6582  002FCA                     	bcf	status,0
  6583  002FCA  90D8               	rlcf	((c:___awdiv@divisor)),c
  6584  002FCC  3609               	rlcf	((c:___awdiv@divisor+1)),c
  6585  002FCE  360A               	line	28
  6586                           	incf	((c:___awdiv@counter)),c
  6587  002FD0  2A0B               	goto	l2647
  6588  002FD2  EFEB  F017         	line	29
  6589                           	
  6590                           l435:
  6591  002FD6                     	line	26
  6592                           	
  6593                           l2647:
  6594  002FD6                     	
  6595                           	btfss	((c:___awdiv@divisor+1)),c,(15)&7
  6596  002FD6  AE0A               	goto	u2421
  6597  002FD8  EFF0  F017         	goto	u2420
  6598  002FDC  EFF2  F017         u2421:
  6599  002FE0                     	goto	l2645
  6600  002FE0  EFE5  F017         u2420:
  6601  002FE4                     	goto	l2649
  6602  002FE4  EFF6  F017         	
  6603                           l437:
  6604  002FE8                     	goto	l2649
  6605  002FE8  EFF6  F017         	line	30
  6606                           	
  6607                           l438:
  6608  002FEC                     	line	31
  6609                           	
  6610                           l2649:
  6611  002FEC                     	bcf	status,0
  6612  002FEC  90D8               	rlcf	((c:___awdiv@quotient)),c
  6613  002FEE  360D               	rlcf	((c:___awdiv@quotient+1)),c
  6614  002FF0  360E               	line	32
  6615                           	
  6616                           l2651:
  6617  002FF2                     		movf	((c:___awdiv@divisor)),c,w
  6618  002FF2  5009               	subwf	((c:___awdiv@dividend)),c,w
  6619  002FF4  5C07               	movf	((c:___awdiv@divisor+1)),c,w
  6620  002FF6  500A               	subwfb	((c:___awdiv@dividend+1)),c,w
  6621  002FF8  5808               	btfss	status,0
  6622  002FFA  A0D8               	goto	u2431
  6623  002FFC  EF02  F018         	goto	u2430
  6624  003000  EF04  F018         
  6625                           u2431:
  6626  003004                     	goto	l2657
  6627  003004  EF0B  F018         u2430:
  6628  003008                     	line	33
  6629                           	
  6630                           l2653:
  6631  003008                     	movf	((c:___awdiv@divisor)),c,w
  6632  003008  5009               	subwf	((c:___awdiv@dividend)),c
  6633  00300A  5E07               	movf	((c:___awdiv@divisor+1)),c,w
  6634  00300C  500A               	subwfb	((c:___awdiv@dividend+1)),c
  6635  00300E  5A08               
  6636                           	line	34
  6637                           	
  6638                           l2655:
  6639  003010                     	bsf	(0+(0/8)+(c:___awdiv@quotient)),c,(0)&7
  6640  003010  800D               	goto	l2657
  6641  003012  EF0B  F018         	line	35
  6642                           	
  6643                           l439:
  6644  003016                     	line	36
  6645                           	
  6646                           l2657:
  6647  003016                     	bcf	status,0
  6648  003016  90D8               	rrcf	((c:___awdiv@divisor+1)),c
  6649  003018  320A               	rrcf	((c:___awdiv@divisor)),c
  6650  00301A  3209               	line	37
  6651                           	
  6652                           l2659:
  6653  00301C                     	decfsz	((c:___awdiv@counter)),c
  6654  00301C  2E0B               	
  6655                           	goto	l2649
  6656  00301E  EFF6  F017         	goto	l2661
  6657  003022  EF15  F018         	
  6658                           l440:
  6659  003026                     	goto	l2661
  6660  003026  EF15  F018         	line	38
  6661                           	
  6662                           l434:
  6663  00302A                     	line	39
  6664                           	
  6665                           l2661:
  6666  00302A                     	movf	((c:___awdiv@sign)),c,w
  6667  00302A  500C               	btfsc	status,2
  6668  00302C  B4D8               	goto	u2441
  6669  00302E  EF1B  F018         	goto	u2440
  6670  003032  EF1D  F018         u2441:
  6671  003036                     	goto	l2665
  6672  003036  EF23  F018         u2440:
  6673  00303A                     	line	40
  6674                           	
  6675                           l2663:
  6676  00303A                     	negf	((c:___awdiv@quotient)),c
  6677  00303A  6C0D               	comf	((c:___awdiv@quotient+1)),c
  6678  00303C  1E0E               	btfsc	status,0
  6679  00303E  B0D8               	incf	((c:___awdiv@quotient+1)),c
  6680  003040  2A0E               	goto	l2665
  6681  003042  EF23  F018         	
  6682                           l441:
  6683  003046                     	line	41
  6684                           	
  6685                           l2665:
  6686  003046                     	movff	(c:___awdiv@quotient),(c:?___awdiv)
  6687  003046  C00D  F007         	movff	(c:___awdiv@quotient+1),(c:?___awdiv+1)
  6688  00304A  C00E  F008         	goto	l442
  6689  00304E  EF29  F018         	
  6690                           l2667:
  6691  003052                     	line	42
  6692                           	
  6693                           l442:
  6694  003052                     	return	;funcret
  6695  003052  0012               	opt stack 0
  6696                           GLOBAL	__end_of___awdiv
  6697                           	__end_of___awdiv:
  6698  003054                     	signat	___awdiv,8314
  6699                           	global	__tdiv_to_l_
  6700                           
  6701 ;; *************** function __tdiv_to_l_ *****************
  6702 ;; Defined at:
  6703 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
  6704 ;; Parameters:    Size  Location     Type
  6705 ;;  f1              4    0[COMRAM] float 
  6706 ;;  f2              4    4[COMRAM] float 
  6707 ;; Auto vars:     Size  Location     Type
  6708 ;;  quot            4   11[COMRAM] unsigned long 
  6709 ;;  exp1            1   16[COMRAM] unsigned char 
  6710 ;;  cntr            1   15[COMRAM] unsigned char 
  6711 ;; Return value:  Size  Location     Type
  6712 ;;                  4    0[COMRAM] unsigned long 
  6713 ;; Registers used:
  6714 ;;		wreg, status,2, status,0
  6715 ;; Tracked objects:
  6716 ;;		On entry : 0/0
  6717 ;;		On exit  : 0/0
  6718 ;;		Unchanged: 0/0
  6719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6720 ;;      Params:         8       0       0       0       0       0       0       0       0
  6721 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6722 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6723 ;;      Totals:        17       0       0       0       0       0       0       0       0
  6724 ;;Total ram usage:       17 bytes
  6725 ;; Hardware stack levels used:    1
  6726 ;; This function calls:
  6727 ;;		Nothing
  6728 ;; This function is called by:
  6729 ;;		_sprintf
  6730 ;; This function uses a non-reentrant model
  6731 ;;
  6732                           psect	text8,class=CODE,space=0,reloc=2,group=1
  6733                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
  6734                           	line	60
  6735                           global __ptext8
  6736                           __ptext8:
  6737  00280E                     psect	text8
  6738                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
  6739                           	line	60
  6740                           	global	__size_of__tdiv_to_l_
  6741                           	__size_of__tdiv_to_l_	equ	__end_of__tdiv_to_l_-__tdiv_to_l_
  6742  0000                     	
  6743                           __tdiv_to_l_:
  6744  00280E                     ;incstack = 0
  6745                           	opt	stack 29
  6746                           	line	66
  6747                           	
  6748                           l2889:
  6749  00280E                     	movff	(c:__tdiv_to_l_@f1+2),??__tdiv_to_l_+0+0
  6750  00280E  C003  F009         	clrf	(??__tdiv_to_l_+0+0+1)&0ffh,c
  6751  002812  6A0A               	clrf	(??__tdiv_to_l_+0+0+2)&0ffh,c
  6752  002814  6A0B               	rlcf	((c:__tdiv_to_l_@f1+1)),c,w
  6753  002816  3402               	rlcf	(??__tdiv_to_l_+0+0)&0ffh,c
  6754  002818  3609               	bnc	u2611
  6755  00281A  E301               	bsf	(??__tdiv_to_l_+0+0+1)&0ffh,c,0
  6756  00281C  800A               u2611:
  6757  00281E                     	movf	(??__tdiv_to_l_+0+0),c,w
  6758  00281E  5009               	movwf	((c:__tdiv_to_l_@exp1)),c
  6759  002820  6E11               	movf	((c:__tdiv_to_l_@exp1)),c,w
  6760  002822  5011               	btfss	status,2
  6761  002824  A4D8               	goto	u2621
  6762  002826  EF17  F014         	goto	u2620
  6763  00282A  EF19  F014         u2621:
  6764  00282E                     	goto	l2895
  6765  00282E  EF25  F014         u2620:
  6766  002832                     	line	67
  6767                           	
  6768                           l2891:
  6769  002832                     	movlw	low(0)
  6770  002832  0E00               	movwf	((c:?__tdiv_to_l_)),c
  6771  002834  6E01               	movlw	high(0)
  6772  002836  0E00               	movwf	((c:?__tdiv_to_l_+1)),c
  6773  002838  6E02               	movlw	low highword(0)
  6774  00283A  0E00               	movwf	((c:?__tdiv_to_l_+2)),c
  6775  00283C  6E03               	movlw	high highword(0)
  6776  00283E  0E00               	movwf	((c:?__tdiv_to_l_+3)),c
  6777  002840  6E04               	goto	l569
  6778  002842  EFDD  F014         	
  6779                           l2893:
  6780  002846                     	goto	l569
  6781  002846  EFDD  F014         	
  6782                           l568:
  6783  00284A                     	line	68
  6784                           	
  6785                           l2895:
  6786  00284A                     	movff	(c:__tdiv_to_l_@f2+2),??__tdiv_to_l_+0+0
  6787  00284A  C007  F009         	clrf	(??__tdiv_to_l_+0+0+1)&0ffh,c
  6788  00284E  6A0A               	clrf	(??__tdiv_to_l_+0+0+2)&0ffh,c
  6789  002850  6A0B               	rlcf	((c:__tdiv_to_l_@f2+1)),c,w
  6790  002852  3406               	rlcf	(??__tdiv_to_l_+0+0)&0ffh,c
  6791  002854  3609               	bnc	u2631
  6792  002856  E301               	bsf	(??__tdiv_to_l_+0+0+1)&0ffh,c,0
  6793  002858  800A               u2631:
  6794  00285A                     	movf	(??__tdiv_to_l_+0+0),c,w
  6795  00285A  5009               	movwf	((c:__tdiv_to_l_@cntr)),c
  6796  00285C  6E10               	movf	((c:__tdiv_to_l_@cntr)),c,w
  6797  00285E  5010               	btfss	status,2
  6798  002860  A4D8               	goto	u2641
  6799  002862  EF35  F014         	goto	u2640
  6800  002866  EF37  F014         u2641:
  6801  00286A                     	goto	l2901
  6802  00286A  EF43  F014         u2640:
  6803  00286E                     	line	69
  6804                           	
  6805                           l2897:
  6806  00286E                     	movlw	low(0)
  6807  00286E  0E00               	movwf	((c:?__tdiv_to_l_)),c
  6808  002870  6E01               	movlw	high(0)
  6809  002872  0E00               	movwf	((c:?__tdiv_to_l_+1)),c
  6810  002874  6E02               	movlw	low highword(0)
  6811  002876  0E00               	movwf	((c:?__tdiv_to_l_+2)),c
  6812  002878  6E03               	movlw	high highword(0)
  6813  00287A  0E00               	movwf	((c:?__tdiv_to_l_+3)),c
  6814  00287C  6E04               	goto	l569
  6815  00287E  EFDD  F014         	
  6816                           l2899:
  6817  002882                     	goto	l569
  6818  002882  EFDD  F014         	
  6819                           l570:
  6820  002886                     	line	70
  6821                           	
  6822                           l2901:
  6823  002886                     	bsf	(0+(15/8)+(c:__tdiv_to_l_@f1)),c,(15)&7
  6824  002886  8E02               	line	71
  6825                           	
  6826                           l2903:
  6827  002888                     	movlw	low(0FFFFh)
  6828  002888  0EFF               	andwf	((c:__tdiv_to_l_@f1)),c
  6829  00288A  1601               	movlw	high(0FFFFh)
  6830  00288C  0EFF               	andwf	((c:__tdiv_to_l_@f1+1)),c
  6831  00288E  1602               	movlw	low highword(0FFFFh)
  6832  002890  0E00               	andwf	((c:__tdiv_to_l_@f1+2)),c
  6833  002892  1603               
  6834                           	line	72
  6835                           	bsf	(0+(15/8)+(c:__tdiv_to_l_@f2)),c,(15)&7
  6836  002894  8E06               	line	73
  6837                           	
  6838                           l2905:
  6839  002896                     	movlw	low(0FFFFh)
  6840  002896  0EFF               	andwf	((c:__tdiv_to_l_@f2)),c
  6841  002898  1605               	movlw	high(0FFFFh)
  6842  00289A  0EFF               	andwf	((c:__tdiv_to_l_@f2+1)),c
  6843  00289C  1606               	movlw	low highword(0FFFFh)
  6844  00289E  0E00               	andwf	((c:__tdiv_to_l_@f2+2)),c
  6845  0028A0  1607               
  6846                           	line	74
  6847                           	
  6848                           l2907:
  6849  0028A2                     	movlw	low(0)
  6850  0028A2  0E00               	movwf	((c:__tdiv_to_l_@quot)),c
  6851  0028A4  6E0C               	movlw	high(0)
  6852  0028A6  0E00               	movwf	((c:__tdiv_to_l_@quot+1)),c
  6853  0028A8  6E0D               	movlw	low highword(0)
  6854  0028AA  0E00               	movwf	((c:__tdiv_to_l_@quot+2)),c
  6855  0028AC  6E0E               	movlw	high highword(0)
  6856  0028AE  0E00               	movwf	((c:__tdiv_to_l_@quot+3)),c
  6857  0028B0  6E0F               	line	75
  6858                           	
  6859                           l2909:
  6860  0028B2                     	movlw	(07Fh)&0ffh
  6861  0028B2  0E7F               	subwf	((c:__tdiv_to_l_@exp1)),c
  6862  0028B4  5E11               	line	76
  6863                           	
  6864                           l2911:
  6865  0028B6                     	movf	((c:__tdiv_to_l_@cntr)),c,w
  6866  0028B6  5010               	addlw	low(098h)
  6867  0028B8  0F98               	subwf	((c:__tdiv_to_l_@exp1)),c
  6868  0028BA  5E11               	line	77
  6869                           	
  6870                           l2913:
  6871  0028BC                     	movlw	low(018h)
  6872  0028BC  0E18               	movwf	((c:__tdiv_to_l_@cntr)),c
  6873  0028BE  6E10               	line	78
  6874                           	
  6875                           l571:
  6876  0028C0                     	line	79
  6877                           	bcf	status,0
  6878  0028C0  90D8               	rlcf	((c:__tdiv_to_l_@quot)),c
  6879  0028C2  360C               	rlcf	((c:__tdiv_to_l_@quot+1)),c
  6880  0028C4  360D               	rlcf	((c:__tdiv_to_l_@quot+2)),c
  6881  0028C6  360E               	rlcf	((c:__tdiv_to_l_@quot+3)),c
  6882  0028C8  360F               	line	80
  6883                           	
  6884                           l2915:
  6885  0028CA                     		movf	((c:__tdiv_to_l_@f2)),c,w
  6886  0028CA  5005               	subwf	((c:__tdiv_to_l_@f1)),c,w
  6887  0028CC  5C01               	movf	((c:__tdiv_to_l_@f2+1)),c,w
  6888  0028CE  5006               	subwfb	((c:__tdiv_to_l_@f1+1)),c,w
  6889  0028D0  5802               	movf	((c:__tdiv_to_l_@f2+2)),c,w
  6890  0028D2  5007               	subwfb	((c:__tdiv_to_l_@f1+2)),c,w
  6891  0028D4  5803               	btfss	status,0
  6892  0028D6  A0D8               	goto	u2651
  6893  0028D8  EF70  F014         	goto	u2650
  6894  0028DC  EF72  F014         
  6895                           u2651:
  6896  0028E0                     	goto	l572
  6897  0028E0  EF79  F014         u2650:
  6898  0028E4                     	line	81
  6899                           	
  6900                           l2917:
  6901  0028E4                     	movf	((c:__tdiv_to_l_@f2)),c,w
  6902  0028E4  5005               	subwf	((c:__tdiv_to_l_@f1)),c
  6903  0028E6  5E01               	movf	((c:__tdiv_to_l_@f2+1)),c,w
  6904  0028E8  5006               	subwfb	((c:__tdiv_to_l_@f1+1)),c
  6905  0028EA  5A02               	movf	((c:__tdiv_to_l_@f2+2)),c,w
  6906  0028EC  5007               	subwfb	((c:__tdiv_to_l_@f1+2)),c
  6907  0028EE  5A03               
  6908                           	line	82
  6909                           	
  6910                           l2919:
  6911  0028F0                     	bsf	(0+(0/8)+(c:__tdiv_to_l_@quot)),c,(0)&7
  6912  0028F0  800C               	line	83
  6913                           	
  6914                           l572:
  6915  0028F2                     	line	84
  6916                           	bcf	status,0
  6917  0028F2  90D8               	rlcf	((c:__tdiv_to_l_@f1)),c
  6918  0028F4  3601               	rlcf	((c:__tdiv_to_l_@f1+1)),c
  6919  0028F6  3602               	rlcf	((c:__tdiv_to_l_@f1+2)),c
  6920  0028F8  3603               	line	85
  6921                           	
  6922                           l2921:
  6923  0028FA                     	decfsz	((c:__tdiv_to_l_@cntr)),c
  6924  0028FA  2E10               	
  6925                           	goto	l571
  6926  0028FC  EF60  F014         	goto	l2923
  6927  002900  EF82  F014         	
  6928                           l573:
  6929  002904                     	line	86
  6930                           	
  6931                           l2923:
  6932  002904                     	btfsc	((c:__tdiv_to_l_@exp1)),c,7
  6933  002904  BE11               	goto	u2660
  6934  002906  EF89  F014         	goto	u2661
  6935  00290A  EF87  F014         
  6936                           u2661:
  6937  00290E                     	goto	l2935
  6938  00290E  EFAD  F014         u2660:
  6939  002912                     	line	87
  6940                           	
  6941                           l2925:
  6942  002912                     		movf	((c:__tdiv_to_l_@exp1)),c,w
  6943  002912  5011               	xorlw	80h
  6944  002914  0A80               	addlw	-(80h^-23)
  6945  002916  0F97               	btfsc	status,0
  6946  002918  B0D8               	goto	u2671
  6947  00291A  EF91  F014         	goto	u2670
  6948  00291E  EF93  F014         
  6949                           u2671:
  6950  002922                     	goto	l2931
  6951  002922  EFA1  F014         u2670:
  6952  002926                     	line	88
  6953                           	
  6954                           l2927:
  6955  002926                     	movlw	low(0)
  6956  002926  0E00               	movwf	((c:?__tdiv_to_l_)),c
  6957  002928  6E01               	movlw	high(0)
  6958  00292A  0E00               	movwf	((c:?__tdiv_to_l_+1)),c
  6959  00292C  6E02               	movlw	low highword(0)
  6960  00292E  0E00               	movwf	((c:?__tdiv_to_l_+2)),c
  6961  002930  6E03               	movlw	high highword(0)
  6962  002932  0E00               	movwf	((c:?__tdiv_to_l_+3)),c
  6963  002934  6E04               	goto	l569
  6964  002936  EFDD  F014         	
  6965                           l2929:
  6966  00293A                     	goto	l569
  6967  00293A  EFDD  F014         	
  6968                           l575:
  6969  00293E                     	goto	l2931
  6970  00293E  EFA1  F014         	line	89
  6971                           	
  6972                           l576:
  6973  002942                     	line	90
  6974                           	
  6975                           l2931:
  6976  002942                     	bcf	status,0
  6977  002942  90D8               	rrcf	((c:__tdiv_to_l_@quot+3)),c
  6978  002944  320F               	rrcf	((c:__tdiv_to_l_@quot+2)),c
  6979  002946  320E               	rrcf	((c:__tdiv_to_l_@quot+1)),c
  6980  002948  320D               	rrcf	((c:__tdiv_to_l_@quot)),c
  6981  00294A  320C               	line	91
  6982                           	
  6983                           l2933:
  6984  00294C                     	incfsz	((c:__tdiv_to_l_@exp1)),c
  6985  00294C  3E11               	
  6986                           	goto	l2931
  6987  00294E  EFA1  F014         	goto	l578
  6988  002952  EFD5  F014         	
  6989                           l577:
  6990  002956                     	line	92
  6991                           	goto	l578
  6992  002956  EFD5  F014         	
  6993                           l574:
  6994  00295A                     	line	93
  6995                           	
  6996                           l2935:
  6997  00295A                     		movlw	018h-1
  6998  00295A  0E17               	cpfsgt	((c:__tdiv_to_l_@exp1)),c
  6999  00295C  6411               	goto	u2681
  7000  00295E  EFB3  F014         	goto	u2680
  7001  002962  EFB5  F014         
  7002                           u2681:
  7003  002966                     	goto	l2943
  7004  002966  EFCB  F014         u2680:
  7005  00296A                     	line	94
  7006                           	
  7007                           l2937:
  7008  00296A                     	movlw	low(0)
  7009  00296A  0E00               	movwf	((c:?__tdiv_to_l_)),c
  7010  00296C  6E01               	movlw	high(0)
  7011  00296E  0E00               	movwf	((c:?__tdiv_to_l_+1)),c
  7012  002970  6E02               	movlw	low highword(0)
  7013  002972  0E00               	movwf	((c:?__tdiv_to_l_+2)),c
  7014  002974  6E03               	movlw	high highword(0)
  7015  002976  0E00               	movwf	((c:?__tdiv_to_l_+3)),c
  7016  002978  6E04               	goto	l569
  7017  00297A  EFDD  F014         	
  7018                           l2939:
  7019  00297E                     	goto	l569
  7020  00297E  EFDD  F014         	
  7021                           l579:
  7022  002982                     	line	95
  7023                           	goto	l2943
  7024  002982  EFCB  F014         	
  7025                           l581:
  7026  002986                     	line	96
  7027                           	
  7028                           l2941:
  7029  002986                     	bcf	status,0
  7030  002986  90D8               	rlcf	((c:__tdiv_to_l_@quot)),c
  7031  002988  360C               	rlcf	((c:__tdiv_to_l_@quot+1)),c
  7032  00298A  360D               	rlcf	((c:__tdiv_to_l_@quot+2)),c
  7033  00298C  360E               	rlcf	((c:__tdiv_to_l_@quot+3)),c
  7034  00298E  360F               	line	97
  7035                           	decf	((c:__tdiv_to_l_@exp1)),c
  7036  002990  0611               	goto	l2943
  7037  002992  EFCB  F014         	line	98
  7038                           	
  7039                           l580:
  7040  002996                     	line	95
  7041                           	
  7042                           l2943:
  7043  002996                     	movf	((c:__tdiv_to_l_@exp1)),c,w
  7044  002996  5011               	btfss	status,2
  7045  002998  A4D8               	goto	u2691
  7046  00299A  EFD1  F014         	goto	u2690
  7047  00299E  EFD3  F014         u2691:
  7048  0029A2                     	goto	l2941
  7049  0029A2  EFC3  F014         u2690:
  7050  0029A6                     	goto	l578
  7051  0029A6  EFD5  F014         	
  7052                           l582:
  7053  0029AA                     	line	99
  7054                           	
  7055                           l578:
  7056  0029AA                     	line	100
  7057                           	movff	(c:__tdiv_to_l_@quot),(c:?__tdiv_to_l_)
  7058  0029AA  C00C  F001         	movff	(c:__tdiv_to_l_@quot+1),(c:?__tdiv_to_l_+1)
  7059  0029AE  C00D  F002         	movff	(c:__tdiv_to_l_@quot+2),(c:?__tdiv_to_l_+2)
  7060  0029B2  C00E  F003         	movff	(c:__tdiv_to_l_@quot+3),(c:?__tdiv_to_l_+3)
  7061  0029B6  C00F  F004         	line	101
  7062                           	
  7063                           l569:
  7064  0029BA                     	return	;funcret
  7065  0029BA  0012               	opt stack 0
  7066                           GLOBAL	__end_of__tdiv_to_l_
  7067                           	__end_of__tdiv_to_l_:
  7068  0029BC                     	signat	__tdiv_to_l_,8316
  7069                           	global	__div_to_l_
  7070                           
  7071 ;; *************** function __div_to_l_ *****************
  7072 ;; Defined at:
  7073 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
  7074 ;; Parameters:    Size  Location     Type
  7075 ;;  f1              4    0[COMRAM] unsigned long 
  7076 ;;  f2              4    4[COMRAM] unsigned long 
  7077 ;; Auto vars:     Size  Location     Type
  7078 ;;  quot            4    8[COMRAM] unsigned long 
  7079 ;;  exp1            1   13[COMRAM] unsigned char 
  7080 ;;  cntr            1   12[COMRAM] unsigned char 
  7081 ;; Return value:  Size  Location     Type
  7082 ;;                  4    0[COMRAM] unsigned long 
  7083 ;; Registers used:
  7084 ;;		wreg, status,2, status,0
  7085 ;; Tracked objects:
  7086 ;;		On entry : 0/0
  7087 ;;		On exit  : 0/0
  7088 ;;		Unchanged: 0/0
  7089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7090 ;;      Params:         8       0       0       0       0       0       0       0       0
  7091 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7092 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7093 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7094 ;;Total ram usage:       14 bytes
  7095 ;; Hardware stack levels used:    1
  7096 ;; This function calls:
  7097 ;;		Nothing
  7098 ;; This function is called by:
  7099 ;;		_sprintf
  7100 ;; This function uses a non-reentrant model
  7101 ;;
  7102                           psect	text9,class=CODE,space=0,reloc=2,group=1
  7103                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
  7104                           	line	60
  7105                           global __ptext9
  7106                           __ptext9:
  7107  0029BC                     psect	text9
  7108                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
  7109                           	line	60
  7110                           	global	__size_of__div_to_l_
  7111                           	__size_of__div_to_l_	equ	__end_of__div_to_l_-__div_to_l_
  7112  0000                     	
  7113                           __div_to_l_:
  7114  0029BC                     ;incstack = 0
  7115                           	opt	stack 29
  7116                           	line	66
  7117                           	
  7118                           l2945:
  7119  0029BC                     	rlcf	((c:__div_to_l_@f1+2)),c,w
  7120  0029BC  3403               	rlcf	((c:__div_to_l_@f1+3)),c,w
  7121  0029BE  3404               	movwf	((c:__div_to_l_@exp1)),c
  7122  0029C0  6E0E               	movf	((c:__div_to_l_@exp1)),c,w
  7123  0029C2  500E               	btfss	status,2
  7124  0029C4  A4D8               	goto	u2701
  7125  0029C6  EFE7  F014         	goto	u2700
  7126  0029CA  EFE9  F014         u2701:
  7127  0029CE                     	goto	l2951
  7128  0029CE  EFF5  F014         u2700:
  7129  0029D2                     	line	67
  7130                           	
  7131                           l2947:
  7132  0029D2                     	movlw	low(0)
  7133  0029D2  0E00               	movwf	((c:?__div_to_l_)),c
  7134  0029D4  6E01               	movlw	high(0)
  7135  0029D6  0E00               	movwf	((c:?__div_to_l_+1)),c
  7136  0029D8  6E02               	movlw	low highword(0)
  7137  0029DA  0E00               	movwf	((c:?__div_to_l_+2)),c
  7138  0029DC  6E03               	movlw	high highword(0)
  7139  0029DE  0E00               	movwf	((c:?__div_to_l_+3)),c
  7140  0029E0  6E04               	goto	l465
  7141  0029E2  EFB3  F015         	
  7142                           l2949:
  7143  0029E6                     	goto	l465
  7144  0029E6  EFB3  F015         	
  7145                           l464:
  7146  0029EA                     	line	68
  7147                           	
  7148                           l2951:
  7149  0029EA                     	rlcf	((c:__div_to_l_@f2+2)),c,w
  7150  0029EA  3407               	rlcf	((c:__div_to_l_@f2+3)),c,w
  7151  0029EC  3408               	movwf	((c:__div_to_l_@cntr)),c
  7152  0029EE  6E0D               	movf	((c:__div_to_l_@cntr)),c,w
  7153  0029F0  500D               	btfss	status,2
  7154  0029F2  A4D8               	goto	u2711
  7155  0029F4  EFFE  F014         	goto	u2710
  7156  0029F8  EF00  F015         u2711:
  7157  0029FC                     	goto	l2957
  7158  0029FC  EF0C  F015         u2710:
  7159  002A00                     	line	69
  7160                           	
  7161                           l2953:
  7162  002A00                     	movlw	low(0)
  7163  002A00  0E00               	movwf	((c:?__div_to_l_)),c
  7164  002A02  6E01               	movlw	high(0)
  7165  002A04  0E00               	movwf	((c:?__div_to_l_+1)),c
  7166  002A06  6E02               	movlw	low highword(0)
  7167  002A08  0E00               	movwf	((c:?__div_to_l_+2)),c
  7168  002A0A  6E03               	movlw	high highword(0)
  7169  002A0C  0E00               	movwf	((c:?__div_to_l_+3)),c
  7170  002A0E  6E04               	goto	l465
  7171  002A10  EFB3  F015         	
  7172                           l2955:
  7173  002A14                     	goto	l465
  7174  002A14  EFB3  F015         	
  7175                           l466:
  7176  002A18                     	line	70
  7177                           	
  7178                           l2957:
  7179  002A18                     	bsf	(0+(23/8)+(c:__div_to_l_@f1)),c,(23)&7
  7180  002A18  8E03               	line	71
  7181                           	
  7182                           l2959:
  7183  002A1A                     	movlw	0FFh
  7184  002A1A  0EFF               	andwf	((c:__div_to_l_@f1)),c
  7185  002A1C  1601               	movlw	0FFh
  7186  002A1E  0EFF               	andwf	((c:__div_to_l_@f1+1)),c
  7187  002A20  1602               	movlw	0FFh
  7188  002A22  0EFF               	andwf	((c:__div_to_l_@f1+2)),c
  7189  002A24  1603               	movlw	0
  7190  002A26  0E00               	andwf	((c:__div_to_l_@f1+3)),c
  7191  002A28  1604               	line	72
  7192                           	
  7193                           l2961:
  7194  002A2A                     	bsf	(0+(23/8)+(c:__div_to_l_@f2)),c,(23)&7
  7195  002A2A  8E07               	line	73
  7196                           	movlw	0FFh
  7197  002A2C  0EFF               	andwf	((c:__div_to_l_@f2)),c
  7198  002A2E  1605               	movlw	0FFh
  7199  002A30  0EFF               	andwf	((c:__div_to_l_@f2+1)),c
  7200  002A32  1606               	movlw	0FFh
  7201  002A34  0EFF               	andwf	((c:__div_to_l_@f2+2)),c
  7202  002A36  1607               	movlw	0
  7203  002A38  0E00               	andwf	((c:__div_to_l_@f2+3)),c
  7204  002A3A  1608               	line	74
  7205                           	
  7206                           l2963:
  7207  002A3C                     	movlw	low(0)
  7208  002A3C  0E00               	movwf	((c:__div_to_l_@quot)),c
  7209  002A3E  6E09               	movlw	high(0)
  7210  002A40  0E00               	movwf	((c:__div_to_l_@quot+1)),c
  7211  002A42  6E0A               	movlw	low highword(0)
  7212  002A44  0E00               	movwf	((c:__div_to_l_@quot+2)),c
  7213  002A46  6E0B               	movlw	high highword(0)
  7214  002A48  0E00               	movwf	((c:__div_to_l_@quot+3)),c
  7215  002A4A  6E0C               	line	75
  7216                           	
  7217                           l2965:
  7218  002A4C                     	movlw	(07Fh)&0ffh
  7219  002A4C  0E7F               	subwf	((c:__div_to_l_@exp1)),c
  7220  002A4E  5E0E               	line	76
  7221                           	
  7222                           l2967:
  7223  002A50                     	movf	((c:__div_to_l_@cntr)),c,w
  7224  002A50  500D               	addlw	low(0A0h)
  7225  002A52  0FA0               	subwf	((c:__div_to_l_@exp1)),c
  7226  002A54  5E0E               	line	77
  7227                           	
  7228                           l2969:
  7229  002A56                     	movlw	low(020h)
  7230  002A56  0E20               	movwf	((c:__div_to_l_@cntr)),c
  7231  002A58  6E0D               	goto	l2971
  7232  002A5A  EF2F  F015         	line	78
  7233                           	
  7234                           l467:
  7235  002A5E                     	line	79
  7236                           	
  7237                           l2971:
  7238  002A5E                     	bcf	status,0
  7239  002A5E  90D8               	rlcf	((c:__div_to_l_@quot)),c
  7240  002A60  3609               	rlcf	((c:__div_to_l_@quot+1)),c
  7241  002A62  360A               	rlcf	((c:__div_to_l_@quot+2)),c
  7242  002A64  360B               	rlcf	((c:__div_to_l_@quot+3)),c
  7243  002A66  360C               	line	80
  7244                           	
  7245                           l2973:
  7246  002A68                     		movf	((c:__div_to_l_@f2)),c,w
  7247  002A68  5005               	subwf	((c:__div_to_l_@f1)),c,w
  7248  002A6A  5C01               	movf	((c:__div_to_l_@f2+1)),c,w
  7249  002A6C  5006               	subwfb	((c:__div_to_l_@f1+1)),c,w
  7250  002A6E  5802               	movf	((c:__div_to_l_@f2+2)),c,w
  7251  002A70  5007               	subwfb	((c:__div_to_l_@f1+2)),c,w
  7252  002A72  5803               	movf	((c:__div_to_l_@f2+3)),c,w
  7253  002A74  5008               	subwfb	((c:__div_to_l_@f1+3)),c,w
  7254  002A76  5804               	btfss	status,0
  7255  002A78  A0D8               	goto	u2721
  7256  002A7A  EF41  F015         	goto	u2720
  7257  002A7E  EF43  F015         
  7258                           u2721:
  7259  002A82                     	goto	l2979
  7260  002A82  EF4E  F015         u2720:
  7261  002A86                     	line	81
  7262                           	
  7263                           l2975:
  7264  002A86                     	movf	((c:__div_to_l_@f2)),c,w
  7265  002A86  5005               	subwf	((c:__div_to_l_@f1)),c
  7266  002A88  5E01               	movf	((c:__div_to_l_@f2+1)),c,w
  7267  002A8A  5006               	subwfb	((c:__div_to_l_@f1+1)),c
  7268  002A8C  5A02               	movf	((c:__div_to_l_@f2+2)),c,w
  7269  002A8E  5007               	subwfb	((c:__div_to_l_@f1+2)),c
  7270  002A90  5A03               	movf	((c:__div_to_l_@f2+3)),c,w
  7271  002A92  5008               	subwfb	((c:__div_to_l_@f1+3)),c
  7272  002A94  5A04               	line	82
  7273                           	
  7274                           l2977:
  7275  002A96                     	bsf	(0+(0/8)+(c:__div_to_l_@quot)),c,(0)&7
  7276  002A96  8009               	goto	l2979
  7277  002A98  EF4E  F015         	line	83
  7278                           	
  7279                           l468:
  7280  002A9C                     	line	84
  7281                           	
  7282                           l2979:
  7283  002A9C                     	bcf	status,0
  7284  002A9C  90D8               	rlcf	((c:__div_to_l_@f1)),c
  7285  002A9E  3601               	rlcf	((c:__div_to_l_@f1+1)),c
  7286  002AA0  3602               	rlcf	((c:__div_to_l_@f1+2)),c
  7287  002AA2  3603               	rlcf	((c:__div_to_l_@f1+3)),c
  7288  002AA4  3604               	line	85
  7289                           	
  7290                           l2981:
  7291  002AA6                     	decfsz	((c:__div_to_l_@cntr)),c
  7292  002AA6  2E0D               	
  7293                           	goto	l2971
  7294  002AA8  EF2F  F015         	goto	l2983
  7295  002AAC  EF58  F015         	
  7296                           l469:
  7297  002AB0                     	line	86
  7298                           	
  7299                           l2983:
  7300  002AB0                     	btfsc	((c:__div_to_l_@exp1)),c,7
  7301  002AB0  BE0E               	goto	u2730
  7302  002AB2  EF5F  F015         	goto	u2731
  7303  002AB6  EF5D  F015         
  7304                           u2731:
  7305  002ABA                     	goto	l2995
  7306  002ABA  EF83  F015         u2730:
  7307  002ABE                     	line	87
  7308                           	
  7309                           l2985:
  7310  002ABE                     		movf	((c:__div_to_l_@exp1)),c,w
  7311  002ABE  500E               	xorlw	80h
  7312  002AC0  0A80               	addlw	-(80h^-31)
  7313  002AC2  0F9F               	btfsc	status,0
  7314  002AC4  B0D8               	goto	u2741
  7315  002AC6  EF67  F015         	goto	u2740
  7316  002ACA  EF69  F015         
  7317                           u2741:
  7318  002ACE                     	goto	l2991
  7319  002ACE  EF77  F015         u2740:
  7320  002AD2                     	line	88
  7321                           	
  7322                           l2987:
  7323  002AD2                     	movlw	low(0)
  7324  002AD2  0E00               	movwf	((c:?__div_to_l_)),c
  7325  002AD4  6E01               	movlw	high(0)
  7326  002AD6  0E00               	movwf	((c:?__div_to_l_+1)),c
  7327  002AD8  6E02               	movlw	low highword(0)
  7328  002ADA  0E00               	movwf	((c:?__div_to_l_+2)),c
  7329  002ADC  6E03               	movlw	high highword(0)
  7330  002ADE  0E00               	movwf	((c:?__div_to_l_+3)),c
  7331  002AE0  6E04               	goto	l465
  7332  002AE2  EFB3  F015         	
  7333                           l2989:
  7334  002AE6                     	goto	l465
  7335  002AE6  EFB3  F015         	
  7336                           l471:
  7337  002AEA                     	goto	l2991
  7338  002AEA  EF77  F015         	line	89
  7339                           	
  7340                           l472:
  7341  002AEE                     	line	90
  7342                           	
  7343                           l2991:
  7344  002AEE                     	bcf	status,0
  7345  002AEE  90D8               	rrcf	((c:__div_to_l_@quot+3)),c
  7346  002AF0  320C               	rrcf	((c:__div_to_l_@quot+2)),c
  7347  002AF2  320B               	rrcf	((c:__div_to_l_@quot+1)),c
  7348  002AF4  320A               	rrcf	((c:__div_to_l_@quot)),c
  7349  002AF6  3209               	line	91
  7350                           	
  7351                           l2993:
  7352  002AF8                     	incfsz	((c:__div_to_l_@exp1)),c
  7353  002AF8  3E0E               	
  7354                           	goto	l2991
  7355  002AFA  EF77  F015         	goto	l474
  7356  002AFE  EFAB  F015         	
  7357                           l473:
  7358  002B02                     	line	92
  7359                           	goto	l474
  7360  002B02  EFAB  F015         	
  7361                           l470:
  7362  002B06                     	line	93
  7363                           	
  7364                           l2995:
  7365  002B06                     		movlw	020h-1
  7366  002B06  0E1F               	cpfsgt	((c:__div_to_l_@exp1)),c
  7367  002B08  640E               	goto	u2751
  7368  002B0A  EF89  F015         	goto	u2750
  7369  002B0E  EF8B  F015         
  7370                           u2751:
  7371  002B12                     	goto	l3003
  7372  002B12  EFA1  F015         u2750:
  7373  002B16                     	line	94
  7374                           	
  7375                           l2997:
  7376  002B16                     	movlw	low(0)
  7377  002B16  0E00               	movwf	((c:?__div_to_l_)),c
  7378  002B18  6E01               	movlw	high(0)
  7379  002B1A  0E00               	movwf	((c:?__div_to_l_+1)),c
  7380  002B1C  6E02               	movlw	low highword(0)
  7381  002B1E  0E00               	movwf	((c:?__div_to_l_+2)),c
  7382  002B20  6E03               	movlw	high highword(0)
  7383  002B22  0E00               	movwf	((c:?__div_to_l_+3)),c
  7384  002B24  6E04               	goto	l465
  7385  002B26  EFB3  F015         	
  7386                           l2999:
  7387  002B2A                     	goto	l465
  7388  002B2A  EFB3  F015         	
  7389                           l475:
  7390  002B2E                     	line	95
  7391                           	goto	l3003
  7392  002B2E  EFA1  F015         	
  7393                           l477:
  7394  002B32                     	line	96
  7395                           	
  7396                           l3001:
  7397  002B32                     	bcf	status,0
  7398  002B32  90D8               	rlcf	((c:__div_to_l_@quot)),c
  7399  002B34  3609               	rlcf	((c:__div_to_l_@quot+1)),c
  7400  002B36  360A               	rlcf	((c:__div_to_l_@quot+2)),c
  7401  002B38  360B               	rlcf	((c:__div_to_l_@quot+3)),c
  7402  002B3A  360C               	line	97
  7403                           	decf	((c:__div_to_l_@exp1)),c
  7404  002B3C  060E               	goto	l3003
  7405  002B3E  EFA1  F015         	line	98
  7406                           	
  7407                           l476:
  7408  002B42                     	line	95
  7409                           	
  7410                           l3003:
  7411  002B42                     	movf	((c:__div_to_l_@exp1)),c,w
  7412  002B42  500E               	btfss	status,2
  7413  002B44  A4D8               	goto	u2761
  7414  002B46  EFA7  F015         	goto	u2760
  7415  002B4A  EFA9  F015         u2761:
  7416  002B4E                     	goto	l3001
  7417  002B4E  EF99  F015         u2760:
  7418  002B52                     	goto	l474
  7419  002B52  EFAB  F015         	
  7420                           l478:
  7421  002B56                     	line	99
  7422                           	
  7423                           l474:
  7424  002B56                     	line	100
  7425                           	movff	(c:__div_to_l_@quot),(c:?__div_to_l_)
  7426  002B56  C009  F001         	movff	(c:__div_to_l_@quot+1),(c:?__div_to_l_+1)
  7427  002B5A  C00A  F002         	movff	(c:__div_to_l_@quot+2),(c:?__div_to_l_+2)
  7428  002B5E  C00B  F003         	movff	(c:__div_to_l_@quot+3),(c:?__div_to_l_+3)
  7429  002B62  C00C  F004         	line	101
  7430                           	
  7431                           l465:
  7432  002B66                     	return	;funcret
  7433  002B66  0012               	opt stack 0
  7434                           GLOBAL	__end_of__div_to_l_
  7435                           	__end_of__div_to_l_:
  7436  002B68                     	signat	__div_to_l_,8316
  7437                           	global	___xxtofl
  7438                           
  7439 ;; *************** function ___xxtofl *****************
  7440 ;; Defined at:
  7441 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
  7442 ;; Parameters:    Size  Location     Type
  7443 ;;  sign            1    wreg     unsigned char 
  7444 ;;  val             4    0[COMRAM] long 
  7445 ;; Auto vars:     Size  Location     Type
  7446 ;;  sign            1    8[COMRAM] unsigned char 
  7447 ;;  arg             4   10[COMRAM] unsigned long 
  7448 ;;  exp             1    9[COMRAM] unsigned char 
  7449 ;; Return value:  Size  Location     Type
  7450 ;;                  4    0[COMRAM] unsigned char 
  7451 ;; Registers used:
  7452 ;;		wreg, status,2, status,0
  7453 ;; Tracked objects:
  7454 ;;		On entry : 0/0
  7455 ;;		On exit  : 0/0
  7456 ;;		Unchanged: 0/0
  7457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7458 ;;      Params:         4       0       0       0       0       0       0       0       0
  7459 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7460 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7461 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7462 ;;Total ram usage:       14 bytes
  7463 ;; Hardware stack levels used:    1
  7464 ;; This function calls:
  7465 ;;		Nothing
  7466 ;; This function is called by:
  7467 ;;		_sprintf
  7468 ;; This function uses a non-reentrant model
  7469 ;;
  7470                           psect	text10,class=CODE,space=0,reloc=2,group=1
  7471                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
  7472                           	line	10
  7473                           global __ptext10
  7474                           __ptext10:
  7475  002628                     psect	text10
  7476                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
  7477                           	line	10
  7478                           	global	__size_of___xxtofl
  7479                           	__size_of___xxtofl	equ	__end_of___xxtofl-___xxtofl
  7480  0000                     	
  7481                           ___xxtofl:
  7482  002628                     ;incstack = 0
  7483                           	opt	stack 29
  7484                           ;___xxtofl@sign stored from wreg
  7485                           	movwf	((c:___xxtofl@sign)),c
  7486  002628  6E09               	line	15
  7487                           	
  7488                           l3129:
  7489  00262A                     	movf	((c:___xxtofl@sign)),c,w
  7490  00262A  5009               	btfsc	status,2
  7491  00262C  B4D8               	goto	u2961
  7492  00262E  EF1B  F013         	goto	u2960
  7493  002632  EF1D  F013         u2961:
  7494  002636                     	goto	l855
  7495  002636  EF3F  F013         u2960:
  7496  00263A                     	
  7497                           l3131:
  7498  00263A                     	btfsc	((c:___xxtofl@val+3)),c,7
  7499  00263A  BE04               	goto	u2970
  7500  00263C  EF24  F013         	goto	u2971
  7501  002640  EF22  F013         
  7502                           u2971:
  7503  002644                     	goto	l855
  7504  002644  EF3F  F013         u2970:
  7505  002648                     	line	16
  7506                           	
  7507                           l3133:
  7508  002648                     	movff	(c:___xxtofl@val),??___xxtofl+0+0
  7509  002648  C001  F005         	movff	(c:___xxtofl@val+1),??___xxtofl+0+0+1
  7510  00264C  C002  F006         	movff	(c:___xxtofl@val+2),??___xxtofl+0+0+2
  7511  002650  C003  F007         	movff	(c:___xxtofl@val+3),??___xxtofl+0+0+3
  7512  002654  C004  F008         	comf	(??___xxtofl+0+0),c
  7513  002658  1E05               	comf	(??___xxtofl+0+1),c
  7514  00265A  1E06               	comf	(??___xxtofl+0+2),c
  7515  00265C  1E07               	comf	(??___xxtofl+0+3),c
  7516  00265E  1E08               	incf	(??___xxtofl+0+0),c
  7517  002660  2A05               	movlw	0
  7518  002662  0E00               	addwfc	(??___xxtofl+0+1),c
  7519  002664  2206               	addwfc	(??___xxtofl+0+2),c
  7520  002666  2207               	addwfc	(??___xxtofl+0+3),c
  7521  002668  2208               	movff	??___xxtofl+0+0,(c:___xxtofl@arg)
  7522  00266A  C005  F00B         	movff	??___xxtofl+0+1,(c:___xxtofl@arg+1)
  7523  00266E  C006  F00C         	movff	??___xxtofl+0+2,(c:___xxtofl@arg+2)
  7524  002672  C007  F00D         	movff	??___xxtofl+0+3,(c:___xxtofl@arg+3)
  7525  002676  C008  F00E         	line	17
  7526                           	goto	l3135
  7527  00267A  EF49  F013         	line	18
  7528                           	
  7529                           l855:
  7530  00267E                     	line	19
  7531                           	movff	(c:___xxtofl@val),(c:___xxtofl@arg)
  7532  00267E  C001  F00B         	movff	(c:___xxtofl@val+1),(c:___xxtofl@arg+1)
  7533  002682  C002  F00C         	movff	(c:___xxtofl@val+2),(c:___xxtofl@arg+2)
  7534  002686  C003  F00D         	movff	(c:___xxtofl@val+3),(c:___xxtofl@arg+3)
  7535  00268A  C004  F00E         	goto	l3135
  7536  00268E  EF49  F013         	line	20
  7537                           	
  7538                           l856:
  7539  002692                     	line	21
  7540                           	
  7541                           l3135:
  7542  002692                     	movf	((c:___xxtofl@val)),c,w
  7543  002692  5001               iorwf	((c:___xxtofl@val+1)),c,w
  7544  002694  1002               iorwf	((c:___xxtofl@val+2)),c,w
  7545  002696  1003               iorwf	((c:___xxtofl@val+3)),c,w
  7546  002698  1004               	btfss	status,2
  7547  00269A  A4D8               	goto	u2981
  7548  00269C  EF52  F013         	goto	u2980
  7549  0026A0  EF54  F013         
  7550                           u2981:
  7551  0026A4                     	goto	l3141
  7552  0026A4  EF60  F013         u2980:
  7553  0026A8                     	line	22
  7554                           	
  7555                           l3137:
  7556  0026A8                     	movlw	low(normalize32(0.0000000000000000))
  7557  0026A8  0E00               	movwf	((c:?___xxtofl)),c
  7558  0026AA  6E01               	movlw	high(normalize32(0.0000000000000000))
  7559  0026AC  0E00               	movwf	((c:?___xxtofl+1)),c
  7560  0026AE  6E02               	movlw	low highword(normalize32(0.0000000000000000))
  7561  0026B0  0E00               	movwf	((c:?___xxtofl+2)),c
  7562  0026B2  6E03               	movlw	high highword(normalize32(0.0000000000000000))
  7563  0026B4  0E00               	movwf	((c:?___xxtofl+3)),c
  7564  0026B6  6E04               	goto	l858
  7565  0026B8  EF06  F014         	
  7566                           l3139:
  7567  0026BC                     	goto	l858
  7568  0026BC  EF06  F014         	
  7569                           l857:
  7570  0026C0                     	line	23
  7571                           	
  7572                           l3141:
  7573  0026C0                     	movlw	low(096h)
  7574  0026C0  0E96               	movwf	((c:___xxtofl@exp)),c
  7575  0026C2  6E0A               	line	24
  7576                           	goto	l3145
  7577  0026C4  EF6C  F013         	
  7578                           l860:
  7579  0026C8                     	line	25
  7580                           	
  7581                           l3143:
  7582  0026C8                     	incf	((c:___xxtofl@exp)),c
  7583  0026C8  2A0A               	line	26
  7584                           	bcf	status,0
  7585  0026CA  90D8               	rrcf	((c:___xxtofl@arg+3)),c
  7586  0026CC  320E               	rrcf	((c:___xxtofl@arg+2)),c
  7587  0026CE  320D               	rrcf	((c:___xxtofl@arg+1)),c
  7588  0026D0  320C               	rrcf	((c:___xxtofl@arg)),c
  7589  0026D2  320B               	goto	l3145
  7590  0026D4  EF6C  F013         	line	27
  7591                           	
  7592                           l859:
  7593  0026D8                     	line	24
  7594                           	
  7595                           l3145:
  7596  0026D8                     	movlw	0
  7597  0026D8  0E00               	andwf	((c:___xxtofl@arg)),c,w
  7598  0026DA  140B               	movwf	(??___xxtofl+0+0)&0ffh,c
  7599  0026DC  6E05               	movlw	0
  7600  0026DE  0E00               	andwf	((c:___xxtofl@arg+1)),c,w
  7601  0026E0  140C               	movwf	1+(??___xxtofl+0+0)&0ffh,c
  7602  0026E2  6E06               	
  7603                           	movlw	0
  7604  0026E4  0E00               	andwf	((c:___xxtofl@arg+2)),c,w
  7605  0026E6  140D               	movwf	2+(??___xxtofl+0+0)&0ffh,c
  7606  0026E8  6E07               	
  7607                           	movlw	0FEh
  7608  0026EA  0EFE               	andwf	((c:___xxtofl@arg+3)),c,w
  7609  0026EC  140E               	movwf	3+(??___xxtofl+0+0)&0ffh,c
  7610  0026EE  6E08               	movf	(??___xxtofl+0+0),c,w
  7611  0026F0  5005               iorwf	(??___xxtofl+0+1),c,w
  7612  0026F2  1006               iorwf	(??___xxtofl+0+2),c,w
  7613  0026F4  1007               iorwf	(??___xxtofl+0+3),c,w
  7614  0026F6  1008               	btfss	status,2
  7615  0026F8  A4D8               	goto	u2991
  7616  0026FA  EF81  F013         	goto	u2990
  7617  0026FE  EF83  F013         
  7618                           u2991:
  7619  002702                     	goto	l3143
  7620  002702  EF64  F013         u2990:
  7621  002706                     	goto	l862
  7622  002706  EF93  F013         	
  7623                           l861:
  7624  00270A                     	line	28
  7625                           	goto	l862
  7626  00270A  EF93  F013         	
  7627                           l863:
  7628  00270E                     	line	29
  7629                           	
  7630                           l3147:
  7631  00270E                     	incf	((c:___xxtofl@exp)),c
  7632  00270E  2A0A               	line	30
  7633                           	
  7634                           l3149:
  7635  002710                     	movlw	low(01h)
  7636  002710  0E01               	addwf	((c:___xxtofl@arg)),c
  7637  002712  260B               	movlw	0
  7638  002714  0E00               	addwfc	((c:___xxtofl@arg+1)),c
  7639  002716  220C               	addwfc	((c:___xxtofl@arg+2)),c
  7640  002718  220D               	addwfc	((c:___xxtofl@arg+3)),c
  7641  00271A  220E               	line	31
  7642                           	
  7643                           l3151:
  7644  00271C                     	bcf	status,0
  7645  00271C  90D8               	rrcf	((c:___xxtofl@arg+3)),c
  7646  00271E  320E               	rrcf	((c:___xxtofl@arg+2)),c
  7647  002720  320D               	rrcf	((c:___xxtofl@arg+1)),c
  7648  002722  320C               	rrcf	((c:___xxtofl@arg)),c
  7649  002724  320B               	line	32
  7650                           	
  7651                           l862:
  7652  002726                     	line	28
  7653                           	movlw	0
  7654  002726  0E00               	andwf	((c:___xxtofl@arg)),c,w
  7655  002728  140B               	movwf	(??___xxtofl+0+0)&0ffh,c
  7656  00272A  6E05               	movlw	0
  7657  00272C  0E00               	andwf	((c:___xxtofl@arg+1)),c,w
  7658  00272E  140C               	movwf	1+(??___xxtofl+0+0)&0ffh,c
  7659  002730  6E06               	
  7660                           	movlw	0
  7661  002732  0E00               	andwf	((c:___xxtofl@arg+2)),c,w
  7662  002734  140D               	movwf	2+(??___xxtofl+0+0)&0ffh,c
  7663  002736  6E07               	
  7664                           	movlw	0FFh
  7665  002738  0EFF               	andwf	((c:___xxtofl@arg+3)),c,w
  7666  00273A  140E               	movwf	3+(??___xxtofl+0+0)&0ffh,c
  7667  00273C  6E08               	movf	(??___xxtofl+0+0),c,w
  7668  00273E  5005               iorwf	(??___xxtofl+0+1),c,w
  7669  002740  1006               iorwf	(??___xxtofl+0+2),c,w
  7670  002742  1007               iorwf	(??___xxtofl+0+3),c,w
  7671  002744  1008               	btfss	status,2
  7672  002746  A4D8               	goto	u3001
  7673  002748  EFA8  F013         	goto	u3000
  7674  00274C  EFAA  F013         
  7675                           u3001:
  7676  002750                     	goto	l3147
  7677  002750  EF87  F013         u3000:
  7678  002754                     	goto	l3155
  7679  002754  EFB6  F013         	
  7680                           l864:
  7681  002758                     	line	33
  7682                           	goto	l3155
  7683  002758  EFB6  F013         	
  7684                           l866:
  7685  00275C                     	line	34
  7686                           	
  7687                           l3153:
  7688  00275C                     	decf	((c:___xxtofl@exp)),c
  7689  00275C  060A               	line	35
  7690                           	bcf	status,0
  7691  00275E  90D8               	rlcf	((c:___xxtofl@arg)),c
  7692  002760  360B               	rlcf	((c:___xxtofl@arg+1)),c
  7693  002762  360C               	rlcf	((c:___xxtofl@arg+2)),c
  7694  002764  360D               	rlcf	((c:___xxtofl@arg+3)),c
  7695  002766  360E               	goto	l3155
  7696  002768  EFB6  F013         	line	36
  7697                           	
  7698                           l865:
  7699  00276C                     	line	33
  7700                           	
  7701                           l3155:
  7702  00276C                     	
  7703                           	btfsc	((c:___xxtofl@arg+2)),c,(23)&7
  7704  00276C  BE0D               	goto	u3011
  7705  00276E  EFBB  F013         	goto	u3010
  7706  002772  EFBD  F013         u3011:
  7707  002776                     	goto	l869
  7708  002776  EFC7  F013         u3010:
  7709  00277A                     	
  7710                           l3157:
  7711  00277A                     		movlw	02h-0
  7712  00277A  0E02               	cpfslt	((c:___xxtofl@exp)),c
  7713  00277C  600A               	goto	u3021
  7714  00277E  EFC3  F013         	goto	u3020
  7715  002782  EFC5  F013         
  7716                           u3021:
  7717  002786                     	goto	l3153
  7718  002786  EFAE  F013         u3020:
  7719  00278A                     	goto	l869
  7720  00278A  EFC7  F013         	
  7721                           l868:
  7722  00278E                     	
  7723                           l869:
  7724  00278E                     	line	37
  7725                           	
  7726                           	btfsc	((c:___xxtofl@exp)),c,(0)&7
  7727  00278E  B00A               	goto	u3031
  7728  002790  EFCC  F013         	goto	u3030
  7729  002794  EFCE  F013         u3031:
  7730  002798                     	goto	l870
  7731  002798  EFD6  F013         u3030:
  7732  00279C                     	line	38
  7733                           	
  7734                           l3159:
  7735  00279C                     	movlw	0FFh
  7736  00279C  0EFF               	andwf	((c:___xxtofl@arg)),c
  7737  00279E  160B               	movlw	0FFh
  7738  0027A0  0EFF               	andwf	((c:___xxtofl@arg+1)),c
  7739  0027A2  160C               	movlw	07Fh
  7740  0027A4  0E7F               	andwf	((c:___xxtofl@arg+2)),c
  7741  0027A6  160D               	movlw	0FFh
  7742  0027A8  0EFF               	andwf	((c:___xxtofl@arg+3)),c
  7743  0027AA  160E               	
  7744                           l870:
  7745  0027AC                     	line	39
  7746                           	bcf status,0
  7747  0027AC  90D8               	rrcf	((c:___xxtofl@exp)),c
  7748  0027AE  320A               
  7749                           	line	40
  7750                           	movff	(c:___xxtofl@exp),??___xxtofl+0+0
  7751  0027B0  C00A  F005         	clrf	(??___xxtofl+0+0+1)&0ffh,c
  7752  0027B4  6A06               	clrf	(??___xxtofl+0+0+2)&0ffh,c
  7753  0027B6  6A07               	clrf	(??___xxtofl+0+0+3)&0ffh,c
  7754  0027B8  6A08               	movff	??___xxtofl+0+0,??___xxtofl+0+3
  7755  0027BA  C005  F008         	clrf	(??___xxtofl+0+2),c
  7756  0027BE  6A07               	clrf	(??___xxtofl+0+1),c
  7757  0027C0  6A06               	clrf	(??___xxtofl+0+0),c
  7758  0027C2  6A05               	movf	(??___xxtofl+0+0),c,w
  7759  0027C4  5005               	iorwf	((c:___xxtofl@arg)),c
  7760  0027C6  120B               	movf	(??___xxtofl+0+1),c,w
  7761  0027C8  5006               	iorwf	((c:___xxtofl@arg+1)),c
  7762  0027CA  120C               	movf	(??___xxtofl+0+2),c,w
  7763  0027CC  5007               	iorwf	((c:___xxtofl@arg+2)),c
  7764  0027CE  120D               	movf	(??___xxtofl+0+3),c,w
  7765  0027D0  5008               	iorwf	((c:___xxtofl@arg+3)),c
  7766  0027D2  120E               
  7767                           	line	41
  7768                           	
  7769                           l3161:
  7770  0027D4                     	movf	((c:___xxtofl@sign)),c,w
  7771  0027D4  5009               	btfsc	status,2
  7772  0027D6  B4D8               	goto	u3041
  7773  0027D8  EFF0  F013         	goto	u3040
  7774  0027DC  EFF2  F013         u3041:
  7775  0027E0                     	goto	l3167
  7776  0027E0  EFFC  F013         u3040:
  7777  0027E4                     	
  7778                           l3163:
  7779  0027E4                     	btfsc	((c:___xxtofl@val+3)),c,7
  7780  0027E4  BE04               	goto	u3050
  7781  0027E6  EFF9  F013         	goto	u3051
  7782  0027EA  EFF7  F013         
  7783                           u3051:
  7784  0027EE                     	goto	l3167
  7785  0027EE  EFFC  F013         u3050:
  7786  0027F2                     	line	42
  7787                           	
  7788                           l3165:
  7789  0027F2                     	bsf	(0+(31/8)+(c:___xxtofl@arg)),c,(31)&7
  7790  0027F2  8E0E               	goto	l3167
  7791  0027F4  EFFC  F013         	
  7792                           l871:
  7793  0027F8                     	line	43
  7794                           	
  7795                           l3167:
  7796  0027F8                     	movff	(c:___xxtofl@arg),(c:?___xxtofl)
  7797  0027F8  C00B  F001         	movff	(c:___xxtofl@arg+1),(c:?___xxtofl+1)
  7798  0027FC  C00C  F002         	movff	(c:___xxtofl@arg+2),(c:?___xxtofl+2)
  7799  002800  C00D  F003         	movff	(c:___xxtofl@arg+3),(c:?___xxtofl+3)
  7800  002804  C00E  F004         	goto	l858
  7801  002808  EF06  F014         	
  7802                           l3169:
  7803  00280C                     	line	44
  7804                           	
  7805                           l858:
  7806  00280C                     	return	;funcret
  7807  00280C  0012               	opt stack 0
  7808                           GLOBAL	__end_of___xxtofl
  7809                           	__end_of___xxtofl:
  7810  00280E                     	signat	___xxtofl,8316
  7811                           	global	___wmul
  7812                           
  7813 ;; *************** function ___wmul *****************
  7814 ;; Defined at:
  7815 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  7816 ;; Parameters:    Size  Location     Type
  7817 ;;  multiplier      2    0[COMRAM] unsigned int 
  7818 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7819 ;; Auto vars:     Size  Location     Type
  7820 ;;  product         2    4[COMRAM] unsigned int 
  7821 ;; Return value:  Size  Location     Type
  7822 ;;                  2    0[COMRAM] unsigned int 
  7823 ;; Registers used:
  7824 ;;		wreg, status,2, status,0, prodl, prodh
  7825 ;; Tracked objects:
  7826 ;;		On entry : 0/0
  7827 ;;		On exit  : 0/0
  7828 ;;		Unchanged: 0/0
  7829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7830 ;;      Params:         4       0       0       0       0       0       0       0       0
  7831 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7832 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7833 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7834 ;;Total ram usage:        6 bytes
  7835 ;; Hardware stack levels used:    1
  7836 ;; This function calls:
  7837 ;;		Nothing
  7838 ;; This function is called by:
  7839 ;;		_main
  7840 ;;		_sprintf
  7841 ;; This function uses a non-reentrant model
  7842 ;;
  7843                           psect	text11,class=CODE,space=0,reloc=2,group=1
  7844                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  7845                           	line	15
  7846                           global __ptext11
  7847                           __ptext11:
  7848  00369A                     psect	text11
  7849                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  7850                           	line	15
  7851                           	global	__size_of___wmul
  7852                           	__size_of___wmul	equ	__end_of___wmul-___wmul
  7853  0000                     	
  7854                           ___wmul:
  7855  00369A                     ;incstack = 0
  7856                           	opt	stack 29
  7857                           	line	37
  7858                           	
  7859                           l3005:
  7860  00369A                     	movf	((c:___wmul@multiplier)),c,w
  7861  00369A  5001               	mulwf	((c:___wmul@multiplicand)),c
  7862  00369C  0203               	movff	prodl,(c:___wmul@product)
  7863  00369E  CFF3 F005          	movff	prodh,(c:___wmul@product+1)
  7864  0036A2  CFF4 F006          	line	38
  7865                           	movf	((c:___wmul@multiplier)),c,w
  7866  0036A6  5001               	mulwf	(0+((c:___wmul@multiplicand)+01h)),c
  7867  0036A8  0204               	movf	(prodl),c,w
  7868  0036AA  50F3               	addwf	((c:___wmul@product+1)),c
  7869  0036AC  2606               
  7870                           	line	39
  7871                           	movf	(0+((c:___wmul@multiplier)+01h)),c,w
  7872  0036AE  5002               	mulwf	((c:___wmul@multiplicand)),c
  7873  0036B0  0203               	movf	(prodl),c,w
  7874  0036B2  50F3               	addwf	((c:___wmul@product+1)),c
  7875  0036B4  2606               
  7876                           	line	52
  7877                           	
  7878                           l3007:
  7879  0036B6                     	movff	(c:___wmul@product),(c:?___wmul)
  7880  0036B6  C005  F001         	movff	(c:___wmul@product+1),(c:?___wmul+1)
  7881  0036BA  C006  F002         	goto	l267
  7882  0036BE  EF61  F01B         	
  7883                           l3009:
  7884  0036C2                     	line	53
  7885                           	
  7886                           l267:
  7887  0036C2                     	return	;funcret
  7888  0036C2  0012               	opt stack 0
  7889                           GLOBAL	__end_of___wmul
  7890                           	__end_of___wmul:
  7891  0036C4                     	signat	___wmul,8314
  7892                           	global	___llmod
  7893                           
  7894 ;; *************** function ___llmod *****************
  7895 ;; Defined at:
  7896 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
  7897 ;; Parameters:    Size  Location     Type
  7898 ;;  dividend        4    0[COMRAM] unsigned long 
  7899 ;;  divisor         4    4[COMRAM] unsigned long 
  7900 ;; Auto vars:     Size  Location     Type
  7901 ;;  counter         1    8[COMRAM] unsigned char 
  7902 ;; Return value:  Size  Location     Type
  7903 ;;                  4    0[COMRAM] unsigned long 
  7904 ;; Registers used:
  7905 ;;		wreg, status,2, status,0
  7906 ;; Tracked objects:
  7907 ;;		On entry : 0/0
  7908 ;;		On exit  : 0/0
  7909 ;;		Unchanged: 0/0
  7910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7911 ;;      Params:         8       0       0       0       0       0       0       0       0
  7912 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7913 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7914 ;;      Totals:         9       0       0       0       0       0       0       0       0
  7915 ;;Total ram usage:        9 bytes
  7916 ;; Hardware stack levels used:    1
  7917 ;; This function calls:
  7918 ;;		Nothing
  7919 ;; This function is called by:
  7920 ;;		_sprintf
  7921 ;; This function uses a non-reentrant model
  7922 ;;
  7923                           psect	text12,class=CODE,space=0,reloc=2,group=1
  7924                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
  7925                           	line	8
  7926                           global __ptext12
  7927                           __ptext12:
  7928  0031E4                     psect	text12
  7929                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
  7930                           	line	8
  7931                           	global	__size_of___llmod
  7932                           	__size_of___llmod	equ	__end_of___llmod-___llmod
  7933  0000                     	
  7934                           ___llmod:
  7935  0031E4                     ;incstack = 0
  7936                           	opt	stack 29
  7937                           	line	13
  7938                           	
  7939                           l3113:
  7940  0031E4                     	movf	((c:___llmod@divisor)),c,w
  7941  0031E4  5005               iorwf	((c:___llmod@divisor+1)),c,w
  7942  0031E6  1006               iorwf	((c:___llmod@divisor+2)),c,w
  7943  0031E8  1007               iorwf	((c:___llmod@divisor+3)),c,w
  7944  0031EA  1008               	btfsc	status,2
  7945  0031EC  B4D8               	goto	u2931
  7946  0031EE  EFFB  F018         	goto	u2930
  7947  0031F2  EFFD  F018         
  7948                           u2931:
  7949  0031F6                     	goto	l663
  7950  0031F6  EF37  F019         u2930:
  7951  0031FA                     	line	14
  7952                           	
  7953                           l3115:
  7954  0031FA                     	movlw	low(01h)
  7955  0031FA  0E01               	movwf	((c:___llmod@counter)),c
  7956  0031FC  6E09               	line	15
  7957                           	goto	l3119
  7958  0031FE  EF09  F019         	
  7959                           l665:
  7960  003202                     	line	16
  7961                           	
  7962                           l3117:
  7963  003202                     	bcf	status,0
  7964  003202  90D8               	rlcf	((c:___llmod@divisor)),c
  7965  003204  3605               	rlcf	((c:___llmod@divisor+1)),c
  7966  003206  3606               	rlcf	((c:___llmod@divisor+2)),c
  7967  003208  3607               	rlcf	((c:___llmod@divisor+3)),c
  7968  00320A  3608               	line	17
  7969                           	incf	((c:___llmod@counter)),c
  7970  00320C  2A09               	goto	l3119
  7971  00320E  EF09  F019         	line	18
  7972                           	
  7973                           l664:
  7974  003212                     	line	15
  7975                           	
  7976                           l3119:
  7977  003212                     	
  7978                           	btfss	((c:___llmod@divisor+3)),c,(31)&7
  7979  003212  AE08               	goto	u2941
  7980  003214  EF0E  F019         	goto	u2940
  7981  003218  EF10  F019         u2941:
  7982  00321C                     	goto	l3117
  7983  00321C  EF01  F019         u2940:
  7984  003220                     	goto	l3121
  7985  003220  EF14  F019         	
  7986                           l666:
  7987  003224                     	goto	l3121
  7988  003224  EF14  F019         	line	19
  7989                           	
  7990                           l667:
  7991  003228                     	line	20
  7992                           	
  7993                           l3121:
  7994  003228                     		movf	((c:___llmod@divisor)),c,w
  7995  003228  5005               	subwf	((c:___llmod@dividend)),c,w
  7996  00322A  5C01               	movf	((c:___llmod@divisor+1)),c,w
  7997  00322C  5006               	subwfb	((c:___llmod@dividend+1)),c,w
  7998  00322E  5802               	movf	((c:___llmod@divisor+2)),c,w
  7999  003230  5007               	subwfb	((c:___llmod@dividend+2)),c,w
  8000  003232  5803               	movf	((c:___llmod@divisor+3)),c,w
  8001  003234  5008               	subwfb	((c:___llmod@dividend+3)),c,w
  8002  003236  5804               	btfss	status,0
  8003  003238  A0D8               	goto	u2951
  8004  00323A  EF21  F019         	goto	u2950
  8005  00323E  EF23  F019         
  8006                           u2951:
  8007  003242                     	goto	l3125
  8008  003242  EF2D  F019         u2950:
  8009  003246                     	line	21
  8010                           	
  8011                           l3123:
  8012  003246                     	movf	((c:___llmod@divisor)),c,w
  8013  003246  5005               	subwf	((c:___llmod@dividend)),c
  8014  003248  5E01               	movf	((c:___llmod@divisor+1)),c,w
  8015  00324A  5006               	subwfb	((c:___llmod@dividend+1)),c
  8016  00324C  5A02               	movf	((c:___llmod@divisor+2)),c,w
  8017  00324E  5007               	subwfb	((c:___llmod@dividend+2)),c
  8018  003250  5A03               	movf	((c:___llmod@divisor+3)),c,w
  8019  003252  5008               	subwfb	((c:___llmod@dividend+3)),c
  8020  003254  5A04               	goto	l3125
  8021  003256  EF2D  F019         	
  8022                           l668:
  8023  00325A                     	line	22
  8024                           	
  8025                           l3125:
  8026  00325A                     	bcf	status,0
  8027  00325A  90D8               	rrcf	((c:___llmod@divisor+3)),c
  8028  00325C  3208               	rrcf	((c:___llmod@divisor+2)),c
  8029  00325E  3207               	rrcf	((c:___llmod@divisor+1)),c
  8030  003260  3206               	rrcf	((c:___llmod@divisor)),c
  8031  003262  3205               	line	23
  8032                           	
  8033                           l3127:
  8034  003264                     	decfsz	((c:___llmod@counter)),c
  8035  003264  2E09               	
  8036                           	goto	l3121
  8037  003266  EF14  F019         	goto	l663
  8038  00326A  EF37  F019         	
  8039                           l669:
  8040  00326E                     	line	24
  8041                           	
  8042                           l663:
  8043  00326E                     	line	25
  8044                           	movff	(c:___llmod@dividend),(c:?___llmod)
  8045  00326E  C001  F001         	movff	(c:___llmod@dividend+1),(c:?___llmod+1)
  8046  003272  C002  F002         	movff	(c:___llmod@dividend+2),(c:?___llmod+2)
  8047  003276  C003  F003         	movff	(c:___llmod@dividend+3),(c:?___llmod+3)
  8048  00327A  C004  F004         	line	26
  8049                           	
  8050                           l670:
  8051  00327E                     	return	;funcret
  8052  00327E  0012               	opt stack 0
  8053                           GLOBAL	__end_of___llmod
  8054                           	__end_of___llmod:
  8055  003280                     	signat	___llmod,8316
  8056                           	global	___lldiv
  8057                           
  8058 ;; *************** function ___lldiv *****************
  8059 ;; Defined at:
  8060 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
  8061 ;; Parameters:    Size  Location     Type
  8062 ;;  dividend        4    0[COMRAM] unsigned long 
  8063 ;;  divisor         4    4[COMRAM] unsigned long 
  8064 ;; Auto vars:     Size  Location     Type
  8065 ;;  quotient        4    8[COMRAM] unsigned long 
  8066 ;;  counter         1   12[COMRAM] unsigned char 
  8067 ;; Return value:  Size  Location     Type
  8068 ;;                  4    0[COMRAM] unsigned long 
  8069 ;; Registers used:
  8070 ;;		wreg, status,2, status,0
  8071 ;; Tracked objects:
  8072 ;;		On entry : 0/0
  8073 ;;		On exit  : 0/0
  8074 ;;		Unchanged: 0/0
  8075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8076 ;;      Params:         8       0       0       0       0       0       0       0       0
  8077 ;;      Locals:         5       0       0       0       0       0       0       0       0
  8078 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8079 ;;      Totals:        13       0       0       0       0       0       0       0       0
  8080 ;;Total ram usage:       13 bytes
  8081 ;; Hardware stack levels used:    1
  8082 ;; This function calls:
  8083 ;;		Nothing
  8084 ;; This function is called by:
  8085 ;;		_sprintf
  8086 ;; This function uses a non-reentrant model
  8087 ;;
  8088                           psect	text13,class=CODE,space=0,reloc=2,group=1
  8089                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
  8090                           	line	8
  8091                           global __ptext13
  8092                           __ptext13:
  8093  00312C                     psect	text13
  8094                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
  8095                           	line	8
  8096                           	global	__size_of___lldiv
  8097                           	__size_of___lldiv	equ	__end_of___lldiv-___lldiv
  8098  0000                     	
  8099                           ___lldiv:
  8100  00312C                     ;incstack = 0
  8101                           	opt	stack 29
  8102                           	line	14
  8103                           	
  8104                           l3091:
  8105  00312C                     	movlw	low(0)
  8106  00312C  0E00               	movwf	((c:___lldiv@quotient)),c
  8107  00312E  6E09               	movlw	high(0)
  8108  003130  0E00               	movwf	((c:___lldiv@quotient+1)),c
  8109  003132  6E0A               	movlw	low highword(0)
  8110  003134  0E00               	movwf	((c:___lldiv@quotient+2)),c
  8111  003136  6E0B               	movlw	high highword(0)
  8112  003138  0E00               	movwf	((c:___lldiv@quotient+3)),c
  8113  00313A  6E0C               	line	15
  8114                           	
  8115                           l3093:
  8116  00313C                     	movf	((c:___lldiv@divisor)),c,w
  8117  00313C  5005               iorwf	((c:___lldiv@divisor+1)),c,w
  8118  00313E  1006               iorwf	((c:___lldiv@divisor+2)),c,w
  8119  003140  1007               iorwf	((c:___lldiv@divisor+3)),c,w
  8120  003142  1008               	btfsc	status,2
  8121  003144  B4D8               	goto	u2901
  8122  003146  EFA7  F018         	goto	u2900
  8123  00314A  EFA9  F018         
  8124                           u2901:
  8125  00314E                     	goto	l653
  8126  00314E  EFE9  F018         u2900:
  8127  003152                     	line	16
  8128                           	
  8129                           l3095:
  8130  003152                     	movlw	low(01h)
  8131  003152  0E01               	movwf	((c:___lldiv@counter)),c
  8132  003154  6E0D               	line	17
  8133                           	goto	l3099
  8134  003156  EFB5  F018         	
  8135                           l655:
  8136  00315A                     	line	18
  8137                           	
  8138                           l3097:
  8139  00315A                     	bcf	status,0
  8140  00315A  90D8               	rlcf	((c:___lldiv@divisor)),c
  8141  00315C  3605               	rlcf	((c:___lldiv@divisor+1)),c
  8142  00315E  3606               	rlcf	((c:___lldiv@divisor+2)),c
  8143  003160  3607               	rlcf	((c:___lldiv@divisor+3)),c
  8144  003162  3608               	line	19
  8145                           	incf	((c:___lldiv@counter)),c
  8146  003164  2A0D               	goto	l3099
  8147  003166  EFB5  F018         	line	20
  8148                           	
  8149                           l654:
  8150  00316A                     	line	17
  8151                           	
  8152                           l3099:
  8153  00316A                     	
  8154                           	btfss	((c:___lldiv@divisor+3)),c,(31)&7
  8155  00316A  AE08               	goto	u2911
  8156  00316C  EFBA  F018         	goto	u2910
  8157  003170  EFBC  F018         u2911:
  8158  003174                     	goto	l3097
  8159  003174  EFAD  F018         u2910:
  8160  003178                     	goto	l3101
  8161  003178  EFC0  F018         	
  8162                           l656:
  8163  00317C                     	goto	l3101
  8164  00317C  EFC0  F018         	line	21
  8165                           	
  8166                           l657:
  8167  003180                     	line	22
  8168                           	
  8169                           l3101:
  8170  003180                     	bcf	status,0
  8171  003180  90D8               	rlcf	((c:___lldiv@quotient)),c
  8172  003182  3609               	rlcf	((c:___lldiv@quotient+1)),c
  8173  003184  360A               	rlcf	((c:___lldiv@quotient+2)),c
  8174  003186  360B               	rlcf	((c:___lldiv@quotient+3)),c
  8175  003188  360C               	line	23
  8176                           	
  8177                           l3103:
  8178  00318A                     		movf	((c:___lldiv@divisor)),c,w
  8179  00318A  5005               	subwf	((c:___lldiv@dividend)),c,w
  8180  00318C  5C01               	movf	((c:___lldiv@divisor+1)),c,w
  8181  00318E  5006               	subwfb	((c:___lldiv@dividend+1)),c,w
  8182  003190  5802               	movf	((c:___lldiv@divisor+2)),c,w
  8183  003192  5007               	subwfb	((c:___lldiv@dividend+2)),c,w
  8184  003194  5803               	movf	((c:___lldiv@divisor+3)),c,w
  8185  003196  5008               	subwfb	((c:___lldiv@dividend+3)),c,w
  8186  003198  5804               	btfss	status,0
  8187  00319A  A0D8               	goto	u2921
  8188  00319C  EFD2  F018         	goto	u2920
  8189  0031A0  EFD4  F018         
  8190                           u2921:
  8191  0031A4                     	goto	l3109
  8192  0031A4  EFDF  F018         u2920:
  8193  0031A8                     	line	24
  8194                           	
  8195                           l3105:
  8196  0031A8                     	movf	((c:___lldiv@divisor)),c,w
  8197  0031A8  5005               	subwf	((c:___lldiv@dividend)),c
  8198  0031AA  5E01               	movf	((c:___lldiv@divisor+1)),c,w
  8199  0031AC  5006               	subwfb	((c:___lldiv@dividend+1)),c
  8200  0031AE  5A02               	movf	((c:___lldiv@divisor+2)),c,w
  8201  0031B0  5007               	subwfb	((c:___lldiv@dividend+2)),c
  8202  0031B2  5A03               	movf	((c:___lldiv@divisor+3)),c,w
  8203  0031B4  5008               	subwfb	((c:___lldiv@dividend+3)),c
  8204  0031B6  5A04               	line	25
  8205                           	
  8206                           l3107:
  8207  0031B8                     	bsf	(0+(0/8)+(c:___lldiv@quotient)),c,(0)&7
  8208  0031B8  8009               	goto	l3109
  8209  0031BA  EFDF  F018         	line	26
  8210                           	
  8211                           l658:
  8212  0031BE                     	line	27
  8213                           	
  8214                           l3109:
  8215  0031BE                     	bcf	status,0
  8216  0031BE  90D8               	rrcf	((c:___lldiv@divisor+3)),c
  8217  0031C0  3208               	rrcf	((c:___lldiv@divisor+2)),c
  8218  0031C2  3207               	rrcf	((c:___lldiv@divisor+1)),c
  8219  0031C4  3206               	rrcf	((c:___lldiv@divisor)),c
  8220  0031C6  3205               	line	28
  8221                           	
  8222                           l3111:
  8223  0031C8                     	decfsz	((c:___lldiv@counter)),c
  8224  0031C8  2E0D               	
  8225                           	goto	l3101
  8226  0031CA  EFC0  F018         	goto	l653
  8227  0031CE  EFE9  F018         	
  8228                           l659:
  8229  0031D2                     	line	29
  8230                           	
  8231                           l653:
  8232  0031D2                     	line	30
  8233                           	movff	(c:___lldiv@quotient),(c:?___lldiv)
  8234  0031D2  C009  F001         	movff	(c:___lldiv@quotient+1),(c:?___lldiv+1)
  8235  0031D6  C00A  F002         	movff	(c:___lldiv@quotient+2),(c:?___lldiv+2)
  8236  0031DA  C00B  F003         	movff	(c:___lldiv@quotient+3),(c:?___lldiv+3)
  8237  0031DE  C00C  F004         	line	31
  8238                           	
  8239                           l660:
  8240  0031E2                     	return	;funcret
  8241  0031E2  0012               	opt stack 0
  8242                           GLOBAL	__end_of___lldiv
  8243                           	__end_of___lldiv:
  8244  0031E4                     	signat	___lldiv,8316
  8245                           	global	___fltol
  8246                           
  8247 ;; *************** function ___fltol *****************
  8248 ;; Defined at:
  8249 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fltol.c"
  8250 ;; Parameters:    Size  Location     Type
  8251 ;;  f1              4   48[COMRAM] unsigned long 
  8252 ;; Auto vars:     Size  Location     Type
  8253 ;;  exp1            1   57[COMRAM] unsigned char 
  8254 ;;  sign1           1   56[COMRAM] unsigned char 
  8255 ;; Return value:  Size  Location     Type
  8256 ;;                  4   48[COMRAM] long 
  8257 ;; Registers used:
  8258 ;;		wreg, status,2, status,0
  8259 ;; Tracked objects:
  8260 ;;		On entry : 0/0
  8261 ;;		On exit  : 0/0
  8262 ;;		Unchanged: 0/0
  8263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8264 ;;      Params:         4       0       0       0       0       0       0       0       0
  8265 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8266 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8267 ;;      Totals:        10       0       0       0       0       0       0       0       0
  8268 ;;Total ram usage:       10 bytes
  8269 ;; Hardware stack levels used:    1
  8270 ;; This function calls:
  8271 ;;		Nothing
  8272 ;; This function is called by:
  8273 ;;		_sprintf
  8274 ;; This function uses a non-reentrant model
  8275 ;;
  8276                           psect	text14,class=CODE,space=0,reloc=2,group=1
  8277                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fltol.c"
  8278                           	line	43
  8279                           global __ptext14
  8280                           __ptext14:
  8281  002CD0                     psect	text14
  8282                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fltol.c"
  8283                           	line	43
  8284                           	global	__size_of___fltol
  8285                           	__size_of___fltol	equ	__end_of___fltol-___fltol
  8286  0000                     	
  8287                           ___fltol:
  8288  002CD0                     ;incstack = 0
  8289                           	opt	stack 29
  8290                           	line	47
  8291                           	
  8292                           l3047:
  8293  002CD0                     	rlcf	((c:___fltol@f1+2)),c,w
  8294  002CD0  3433               	rlcf	((c:___fltol@f1+3)),c,w
  8295  002CD2  3434               	movwf	((c:___fltol@exp1)),c
  8296  002CD4  6E3A               	movf	((c:___fltol@exp1)),c,w
  8297  002CD6  503A               	btfss	status,2
  8298  002CD8  A4D8               	goto	u2831
  8299  002CDA  EF71  F016         	goto	u2830
  8300  002CDE  EF73  F016         u2831:
  8301  002CE2                     	goto	l3053
  8302  002CE2  EF7F  F016         u2830:
  8303  002CE6                     	line	48
  8304                           	
  8305                           l3049:
  8306  002CE6                     	movlw	low(0)
  8307  002CE6  0E00               	movwf	((c:?___fltol)),c
  8308  002CE8  6E31               	movlw	high(0)
  8309  002CEA  0E00               	movwf	((c:?___fltol+1)),c
  8310  002CEC  6E32               	movlw	low highword(0)
  8311  002CEE  0E00               	movwf	((c:?___fltol+2)),c
  8312  002CF0  6E33               	movlw	high highword(0)
  8313  002CF2  0E00               	movwf	((c:?___fltol+3)),c
  8314  002CF4  6E34               	goto	l512
  8315  002CF6  EF10  F017         	
  8316                           l3051:
  8317  002CFA                     	goto	l512
  8318  002CFA  EF10  F017         	
  8319                           l511:
  8320  002CFE                     	line	49
  8321                           	
  8322                           l3053:
  8323  002CFE                     	movff	(c:___fltol@f1),??___fltol+0+0
  8324  002CFE  C031  F035         	movff	(c:___fltol@f1+1),??___fltol+0+0+1
  8325  002D02  C032  F036         	movff	(c:___fltol@f1+2),??___fltol+0+0+2
  8326  002D06  C033  F037         	movff	(c:___fltol@f1+3),??___fltol+0+0+3
  8327  002D0A  C034  F038         	movlw	01Fh+1
  8328  002D0E  0E20               	goto	u2840
  8329  002D10  EF8F  F016         u2845:
  8330  002D14                     	bcf	status,0
  8331  002D14  90D8               	rrcf	(??___fltol+0+3),c
  8332  002D16  3238               	rrcf	(??___fltol+0+2),c
  8333  002D18  3237               	rrcf	(??___fltol+0+1),c
  8334  002D1A  3236               	rrcf	(??___fltol+0+0),c
  8335  002D1C  3235               u2840:
  8336  002D1E                     	decfsz	wreg
  8337  002D1E  2EE8               	goto	u2845
  8338  002D20  EF8A  F016         	movf	(??___fltol+0+0),c,w
  8339  002D24  5035               	movwf	((c:___fltol@sign1)),c
  8340  002D26  6E39               	line	50
  8341                           	
  8342                           l3055:
  8343  002D28                     	bsf	(0+(23/8)+(c:___fltol@f1)),c,(23)&7
  8344  002D28  8E33               	line	51
  8345                           	
  8346                           l3057:
  8347  002D2A                     	movlw	0FFh
  8348  002D2A  0EFF               	andwf	((c:___fltol@f1)),c
  8349  002D2C  1631               	movlw	0FFh
  8350  002D2E  0EFF               	andwf	((c:___fltol@f1+1)),c
  8351  002D30  1632               	movlw	0FFh
  8352  002D32  0EFF               	andwf	((c:___fltol@f1+2)),c
  8353  002D34  1633               	movlw	0
  8354  002D36  0E00               	andwf	((c:___fltol@f1+3)),c
  8355  002D38  1634               	line	52
  8356                           	
  8357                           l3059:
  8358  002D3A                     	movlw	(096h)&0ffh
  8359  002D3A  0E96               	subwf	((c:___fltol@exp1)),c
  8360  002D3C  5E3A               	line	53
  8361                           	
  8362                           l3061:
  8363  002D3E                     	btfsc	((c:___fltol@exp1)),c,7
  8364  002D3E  BE3A               	goto	u2850
  8365  002D40  EFA6  F016         	goto	u2851
  8366  002D44  EFA4  F016         
  8367                           u2851:
  8368  002D48                     	goto	l3073
  8369  002D48  EFCA  F016         u2850:
  8370  002D4C                     	line	54
  8371                           	
  8372                           l3063:
  8373  002D4C                     		movf	((c:___fltol@exp1)),c,w
  8374  002D4C  503A               	xorlw	80h
  8375  002D4E  0A80               	addlw	-(80h^-23)
  8376  002D50  0F97               	btfsc	status,0
  8377  002D52  B0D8               	goto	u2861
  8378  002D54  EFAE  F016         	goto	u2860
  8379  002D58  EFB0  F016         
  8380                           u2861:
  8381  002D5C                     	goto	l3069
  8382  002D5C  EFBE  F016         u2860:
  8383  002D60                     	line	55
  8384                           	
  8385                           l3065:
  8386  002D60                     	movlw	low(0)
  8387  002D60  0E00               	movwf	((c:?___fltol)),c
  8388  002D62  6E31               	movlw	high(0)
  8389  002D64  0E00               	movwf	((c:?___fltol+1)),c
  8390  002D66  6E32               	movlw	low highword(0)
  8391  002D68  0E00               	movwf	((c:?___fltol+2)),c
  8392  002D6A  6E33               	movlw	high highword(0)
  8393  002D6C  0E00               	movwf	((c:?___fltol+3)),c
  8394  002D6E  6E34               	goto	l512
  8395  002D70  EF10  F017         	
  8396                           l3067:
  8397  002D74                     	goto	l512
  8398  002D74  EF10  F017         	
  8399                           l514:
  8400  002D78                     	goto	l3069
  8401  002D78  EFBE  F016         	line	56
  8402                           	
  8403                           l515:
  8404  002D7C                     	line	57
  8405                           	
  8406                           l3069:
  8407  002D7C                     	bcf	status,0
  8408  002D7C  90D8               	rrcf	((c:___fltol@f1+3)),c
  8409  002D7E  3234               	rrcf	((c:___fltol@f1+2)),c
  8410  002D80  3233               	rrcf	((c:___fltol@f1+1)),c
  8411  002D82  3232               	rrcf	((c:___fltol@f1)),c
  8412  002D84  3231               	line	58
  8413                           	
  8414                           l3071:
  8415  002D86                     	incfsz	((c:___fltol@exp1)),c
  8416  002D86  3E3A               	
  8417                           	goto	l3069
  8418  002D88  EFBE  F016         	goto	l3083
  8419  002D8C  EFF4  F016         	
  8420                           l516:
  8421  002D90                     	line	59
  8422                           	goto	l3083
  8423  002D90  EFF4  F016         	
  8424                           l513:
  8425  002D94                     	line	60
  8426                           	
  8427                           l3073:
  8428  002D94                     		movlw	020h-1
  8429  002D94  0E1F               	cpfsgt	((c:___fltol@exp1)),c
  8430  002D96  643A               	goto	u2871
  8431  002D98  EFD0  F016         	goto	u2870
  8432  002D9C  EFD2  F016         
  8433                           u2871:
  8434  002DA0                     	goto	l3081
  8435  002DA0  EFE8  F016         u2870:
  8436  002DA4                     	line	61
  8437                           	
  8438                           l3075:
  8439  002DA4                     	movlw	low(0)
  8440  002DA4  0E00               	movwf	((c:?___fltol)),c
  8441  002DA6  6E31               	movlw	high(0)
  8442  002DA8  0E00               	movwf	((c:?___fltol+1)),c
  8443  002DAA  6E32               	movlw	low highword(0)
  8444  002DAC  0E00               	movwf	((c:?___fltol+2)),c
  8445  002DAE  6E33               	movlw	high highword(0)
  8446  002DB0  0E00               	movwf	((c:?___fltol+3)),c
  8447  002DB2  6E34               	goto	l512
  8448  002DB4  EF10  F017         	
  8449                           l3077:
  8450  002DB8                     	goto	l512
  8451  002DB8  EF10  F017         	
  8452                           l518:
  8453  002DBC                     	line	62
  8454                           	goto	l3081
  8455  002DBC  EFE8  F016         	
  8456                           l520:
  8457  002DC0                     	line	63
  8458                           	
  8459                           l3079:
  8460  002DC0                     	bcf	status,0
  8461  002DC0  90D8               	rlcf	((c:___fltol@f1)),c
  8462  002DC2  3631               	rlcf	((c:___fltol@f1+1)),c
  8463  002DC4  3632               	rlcf	((c:___fltol@f1+2)),c
  8464  002DC6  3633               	rlcf	((c:___fltol@f1+3)),c
  8465  002DC8  3634               	line	64
  8466                           	decf	((c:___fltol@exp1)),c
  8467  002DCA  063A               	goto	l3081
  8468  002DCC  EFE8  F016         	line	65
  8469                           	
  8470                           l519:
  8471  002DD0                     	line	62
  8472                           	
  8473                           l3081:
  8474  002DD0                     	movf	((c:___fltol@exp1)),c,w
  8475  002DD0  503A               	btfss	status,2
  8476  002DD2  A4D8               	goto	u2881
  8477  002DD4  EFEE  F016         	goto	u2880
  8478  002DD8  EFF0  F016         u2881:
  8479  002DDC                     	goto	l3079
  8480  002DDC  EFE0  F016         u2880:
  8481  002DE0                     	goto	l3083
  8482  002DE0  EFF4  F016         	
  8483                           l521:
  8484  002DE4                     	goto	l3083
  8485  002DE4  EFF4  F016         	line	66
  8486                           	
  8487                           l517:
  8488  002DE8                     	line	67
  8489                           	
  8490                           l3083:
  8491  002DE8                     	movf	((c:___fltol@sign1)),c,w
  8492  002DE8  5039               	btfsc	status,2
  8493  002DEA  B4D8               	goto	u2891
  8494  002DEC  EFFA  F016         	goto	u2890
  8495  002DF0  EFFC  F016         u2891:
  8496  002DF4                     	goto	l3087
  8497  002DF4  EF06  F017         u2890:
  8498  002DF8                     	line	68
  8499                           	
  8500                           l3085:
  8501  002DF8                     	comf	((c:___fltol@f1+3)),c
  8502  002DF8  1E34               	comf	((c:___fltol@f1+2)),c
  8503  002DFA  1E33               	comf	((c:___fltol@f1+1)),c
  8504  002DFC  1E32               	negf	((c:___fltol@f1)),c
  8505  002DFE  6C31               	movlw	0
  8506  002E00  0E00               	addwfc	((c:___fltol@f1+1)),c
  8507  002E02  2232               	addwfc	((c:___fltol@f1+2)),c
  8508  002E04  2233               	addwfc	((c:___fltol@f1+3)),c
  8509  002E06  2234               	goto	l3087
  8510  002E08  EF06  F017         	
  8511                           l522:
  8512  002E0C                     	line	69
  8513                           	
  8514                           l3087:
  8515  002E0C                     	movff	(c:___fltol@f1),(c:?___fltol)
  8516  002E0C  C031  F031         	movff	(c:___fltol@f1+1),(c:?___fltol+1)
  8517  002E10  C032  F032         	movff	(c:___fltol@f1+2),(c:?___fltol+2)
  8518  002E14  C033  F033         	movff	(c:___fltol@f1+3),(c:?___fltol+3)
  8519  002E18  C034  F034         	goto	l512
  8520  002E1C  EF10  F017         	
  8521                           l3089:
  8522  002E20                     	line	70
  8523                           	
  8524                           l512:
  8525  002E20                     	return	;funcret
  8526  002E20  0012               	opt stack 0
  8527                           GLOBAL	__end_of___fltol
  8528                           	__end_of___fltol:
  8529  002E22                     	signat	___fltol,4220
  8530                           	global	___flsub
  8531                           
  8532 ;; *************** function ___flsub *****************
  8533 ;; Defined at:
  8534 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
  8535 ;; Parameters:    Size  Location     Type
  8536 ;;  b               4   72[COMRAM] long 
  8537 ;;  a               4   76[COMRAM] long 
  8538 ;; Auto vars:     Size  Location     Type
  8539 ;;		None
  8540 ;; Return value:  Size  Location     Type
  8541 ;;                  4   72[COMRAM] long 
  8542 ;; Registers used:
  8543 ;;		wreg, status,2, status,0, cstack
  8544 ;; Tracked objects:
  8545 ;;		On entry : 0/0
  8546 ;;		On exit  : 0/0
  8547 ;;		Unchanged: 0/0
  8548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8549 ;;      Params:         8       0       0       0       0       0       0       0       0
  8550 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8551 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8552 ;;      Totals:         8       0       0       0       0       0       0       0       0
  8553 ;;Total ram usage:        8 bytes
  8554 ;; Hardware stack levels used:    1
  8555 ;; Hardware stack levels required when called:    1
  8556 ;; This function calls:
  8557 ;;		___fladd
  8558 ;; This function is called by:
  8559 ;;		_sprintf
  8560 ;; This function uses a non-reentrant model
  8561 ;;
  8562                           psect	text15,class=CODE,space=0,reloc=2,group=1
  8563                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
  8564                           	line	245
  8565                           global __ptext15
  8566                           __ptext15:
  8567  00350E                     psect	text15
  8568                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
  8569                           	line	245
  8570                           	global	__size_of___flsub
  8571                           	__size_of___flsub	equ	__end_of___flsub-___flsub
  8572  0000                     	
  8573                           ___flsub:
  8574  00350E                     ;incstack = 0
  8575                           	opt	stack 28
  8576                           	line	248
  8577                           	
  8578                           l3011:
  8579  00350E                     	movlw	0
  8580  00350E  0E00               	xorwf	((c:___flsub@a)),c
  8581  003510  1A4D               	movlw	0
  8582  003512  0E00               	xorwf	((c:___flsub@a+1)),c
  8583  003514  1A4E               	movlw	0
  8584  003516  0E00               	xorwf	((c:___flsub@a+2)),c
  8585  003518  1A4F               	movlw	080h
  8586  00351A  0E80               	xorwf	((c:___flsub@a+3)),c
  8587  00351C  1A50               	line	249
  8588                           	
  8589                           l3013:
  8590  00351E                     	movff	(c:___flsub@b),(c:___fladd@b)
  8591  00351E  C049  F035         	movff	(c:___flsub@b+1),(c:___fladd@b+1)
  8592  003522  C04A  F036         	movff	(c:___flsub@b+2),(c:___fladd@b+2)
  8593  003526  C04B  F037         	movff	(c:___flsub@b+3),(c:___fladd@b+3)
  8594  00352A  C04C  F038         	movff	(c:___flsub@a),(c:___fladd@a)
  8595  00352E  C04D  F039         	movff	(c:___flsub@a+1),(c:___fladd@a+1)
  8596  003532  C04E  F03A         	movff	(c:___flsub@a+2),(c:___fladd@a+2)
  8597  003536  C04F  F03B         	movff	(c:___flsub@a+3),(c:___fladd@a+3)
  8598  00353A  C050  F03C         	call	___fladd	;wreg free
  8599  00353E  EC7B  F009         	movff	0+?___fladd,(c:?___flsub)
  8600  003542  C035  F049         	movff	1+?___fladd,(c:?___flsub+1)
  8601  003546  C036  F04A         	movff	2+?___fladd,(c:?___flsub+2)
  8602  00354A  C037  F04B         	movff	3+?___fladd,(c:?___flsub+3)
  8603  00354E  C038  F04C         	
  8604                           	goto	l789
  8605  003552  EFAB  F01A         	
  8606                           l3015:
  8607  003556                     	line	250
  8608                           	
  8609                           l789:
  8610  003556                     	return	;funcret
  8611  003556  0012               	opt stack 0
  8612                           GLOBAL	__end_of___flsub
  8613                           	__end_of___flsub:
  8614  003558                     	signat	___flsub,8316
  8615                           	global	___fladd
  8616                           
  8617 ;; *************** function ___fladd *****************
  8618 ;; Defined at:
  8619 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
  8620 ;; Parameters:    Size  Location     Type
  8621 ;;  b               4   52[COMRAM] long 
  8622 ;;  a               4   56[COMRAM] long 
  8623 ;; Auto vars:     Size  Location     Type
  8624 ;;  grs             1   71[COMRAM] unsigned char 
  8625 ;;  bexp            1   70[COMRAM] unsigned char 
  8626 ;;  aexp            1   69[COMRAM] unsigned char 
  8627 ;;  signs           1   68[COMRAM] unsigned char 
  8628 ;; Return value:  Size  Location     Type
  8629 ;;                  4   52[COMRAM] unsigned char 
  8630 ;; Registers used:
  8631 ;;		wreg, status,2, status,0
  8632 ;; Tracked objects:
  8633 ;;		On entry : 0/0
  8634 ;;		On exit  : 0/0
  8635 ;;		Unchanged: 0/0
  8636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8637 ;;      Params:         8       0       0       0       0       0       0       0       0
  8638 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8639 ;;      Temps:          8       0       0       0       0       0       0       0       0
  8640 ;;      Totals:        20       0       0       0       0       0       0       0       0
  8641 ;;Total ram usage:       20 bytes
  8642 ;; Hardware stack levels used:    1
  8643 ;; This function calls:
  8644 ;;		Nothing
  8645 ;; This function is called by:
  8646 ;;		_sprintf
  8647 ;;		___flsub
  8648 ;; This function uses a non-reentrant model
  8649 ;;
  8650                           psect	text16,class=CODE,space=0,reloc=2,group=1
  8651                           	line	10
  8652                           global __ptext16
  8653                           __ptext16:
  8654  0012F6                     psect	text16
  8655                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
  8656                           	line	10
  8657                           	global	__size_of___fladd
  8658                           	__size_of___fladd	equ	__end_of___fladd-___fladd
  8659  0000                     	
  8660                           ___fladd:
  8661  0012F6                     ;incstack = 0
  8662                           	opt	stack 28
  8663                           	line	21
  8664                           	
  8665                           l2293:
  8666  0012F6                     	movf	(0+((c:___fladd@b)+03h)),c,w
  8667  0012F6  5038               	andlw	low(080h)
  8668  0012F8  0B80               	movwf	((c:___fladd@signs)),c
  8669  0012FA  6E45               	line	22
  8670                           	movf	(0+((c:___fladd@b)+03h)),c,w
  8671  0012FC  5038               	addwf	(0+((c:___fladd@b)+03h)),c,w
  8672  0012FE  2438               	movwf	((c:___fladd@bexp)),c
  8673  001300  6E47               	line	23
  8674                           	
  8675                           l2295:
  8676  001302                     	
  8677                           	btfss	(0+((c:___fladd@b)+02h)),c,(7)&7
  8678  001302  AE37               	goto	u1811
  8679  001304  EF86  F009         	goto	u1810
  8680  001308  EF88  F009         u1811:
  8681  00130C                     	goto	l2299
  8682  00130C  EF8B  F009         u1810:
  8683  001310                     	line	24
  8684                           	
  8685                           l2297:
  8686  001310                     	bsf	(0+(0/8)+(c:___fladd@bexp)),c,(0)&7
  8687  001310  8047               	goto	l2299
  8688  001312  EF8B  F009         	line	25
  8689                           	
  8690                           l735:
  8691  001316                     	line	28
  8692                           	
  8693                           l2299:
  8694  001316                     	movf	((c:___fladd@bexp)),c,w
  8695  001316  5047               	btfsc	status,2
  8696  001318  B4D8               	goto	u1821
  8697  00131A  EF91  F009         	goto	u1820
  8698  00131E  EF93  F009         u1821:
  8699  001322                     	goto	l2309
  8700  001322  EFAA  F009         u1820:
  8701  001326                     	line	30
  8702                           	
  8703                           l2301:
  8704  001326                     		incf	((c:___fladd@bexp)),c,w
  8705  001326  2847               	btfss	status,2
  8706  001328  A4D8               	goto	u1831
  8707  00132A  EF99  F009         	goto	u1830
  8708  00132E  EF9B  F009         
  8709                           u1831:
  8710  001332                     	goto	l2305
  8711  001332  EFA5  F009         u1830:
  8712  001336                     	line	32
  8713                           	
  8714                           l2303:
  8715  001336                     	movlw	low(normalize32(0.0000000000000000))
  8716  001336  0E00               	movwf	((c:___fladd@b)),c
  8717  001338  6E35               	movlw	high(normalize32(0.0000000000000000))
  8718  00133A  0E00               	movwf	((c:___fladd@b+1)),c
  8719  00133C  6E36               	movlw	low highword(normalize32(0.0000000000000000))
  8720  00133E  0E00               	movwf	((c:___fladd@b+2)),c
  8721  001340  6E37               	movlw	high highword(normalize32(0.0000000000000000))
  8722  001342  0E00               	movwf	((c:___fladd@b+3)),c
  8723  001344  6E38               	goto	l2305
  8724  001346  EFA5  F009         	line	33
  8725                           	
  8726                           l737:
  8727  00134A                     	line	35
  8728                           	
  8729                           l2305:
  8730  00134A                     	bsf	(0+(23/8)+(c:___fladd@b)),c,(23)&7
  8731  00134A  8E37               	line	37
  8732                           	
  8733                           l2307:
  8734  00134C                     	movlw	low(0)
  8735  00134C  0E00               	movwf	(0+((c:___fladd@b)+03h)),c
  8736  00134E  6E38               	line	38
  8737                           	goto	l2311
  8738  001350  EFB4  F009         	line	39
  8739                           	
  8740                           l736:
  8741  001354                     	line	41
  8742                           	
  8743                           l2309:
  8744  001354                     	movlw	low(normalize32(0.0000000000000000))
  8745  001354  0E00               	movwf	((c:___fladd@b)),c
  8746  001356  6E35               	movlw	high(normalize32(0.0000000000000000))
  8747  001358  0E00               	movwf	((c:___fladd@b+1)),c
  8748  00135A  6E36               	movlw	low highword(normalize32(0.0000000000000000))
  8749  00135C  0E00               	movwf	((c:___fladd@b+2)),c
  8750  00135E  6E37               	movlw	high highword(normalize32(0.0000000000000000))
  8751  001360  0E00               	movwf	((c:___fladd@b+3)),c
  8752  001362  6E38               	goto	l2311
  8753  001364  EFB4  F009         	line	42
  8754                           	
  8755                           l738:
  8756  001368                     	line	44
  8757                           	
  8758                           l2311:
  8759  001368                     	movf	(0+((c:___fladd@a)+03h)),c,w
  8760  001368  503C               	andlw	low(080h)
  8761  00136A  0B80               	movwf	((c:___fladd@aexp)),c
  8762  00136C  6E46               	line	46
  8763                           	
  8764                           l2313:
  8765  00136E                     	movf	((c:___fladd@signs)),c,w
  8766  00136E  5045               xorwf	((c:___fladd@aexp)),c,w
  8767  001370  1846               	btfsc	status,2
  8768  001372  B4D8               	goto	u1841
  8769  001374  EFBE  F009         	goto	u1840
  8770  001378  EFC0  F009         
  8771                           u1841:
  8772  00137C                     	goto	l2317
  8773  00137C  EFC3  F009         u1840:
  8774  001380                     	line	47
  8775                           	
  8776                           l2315:
  8777  001380                     	bsf	(0+(6/8)+(c:___fladd@signs)),c,(6)&7
  8778  001380  8C45               	goto	l2317
  8779  001382  EFC3  F009         	line	48
  8780                           	
  8781                           l739:
  8782  001386                     	line	49
  8783                           	
  8784                           l2317:
  8785  001386                     	movf	(0+((c:___fladd@a)+03h)),c,w
  8786  001386  503C               	addwf	(0+((c:___fladd@a)+03h)),c,w
  8787  001388  243C               	movwf	((c:___fladd@aexp)),c
  8788  00138A  6E46               	line	50
  8789                           	
  8790                           l2319:
  8791  00138C                     	
  8792                           	btfss	(0+((c:___fladd@a)+02h)),c,(7)&7
  8793  00138C  AE3B               	goto	u1851
  8794  00138E  EFCB  F009         	goto	u1850
  8795  001392  EFCD  F009         u1851:
  8796  001396                     	goto	l2323
  8797  001396  EFD0  F009         u1850:
  8798  00139A                     	line	51
  8799                           	
  8800                           l2321:
  8801  00139A                     	bsf	(0+(0/8)+(c:___fladd@aexp)),c,(0)&7
  8802  00139A  8046               	goto	l2323
  8803  00139C  EFD0  F009         	line	52
  8804                           	
  8805                           l740:
  8806  0013A0                     	line	55
  8807                           	
  8808                           l2323:
  8809  0013A0                     	movf	((c:___fladd@aexp)),c,w
  8810  0013A0  5046               	btfsc	status,2
  8811  0013A2  B4D8               	goto	u1861
  8812  0013A4  EFD6  F009         	goto	u1860
  8813  0013A8  EFD8  F009         u1861:
  8814  0013AC                     	goto	l2333
  8815  0013AC  EFEF  F009         u1860:
  8816  0013B0                     	line	57
  8817                           	
  8818                           l2325:
  8819  0013B0                     		incf	((c:___fladd@aexp)),c,w
  8820  0013B0  2846               	btfss	status,2
  8821  0013B2  A4D8               	goto	u1871
  8822  0013B4  EFDE  F009         	goto	u1870
  8823  0013B8  EFE0  F009         
  8824                           u1871:
  8825  0013BC                     	goto	l2329
  8826  0013BC  EFEA  F009         u1870:
  8827  0013C0                     	line	59
  8828                           	
  8829                           l2327:
  8830  0013C0                     	movlw	low(normalize32(0.0000000000000000))
  8831  0013C0  0E00               	movwf	((c:___fladd@a)),c
  8832  0013C2  6E39               	movlw	high(normalize32(0.0000000000000000))
  8833  0013C4  0E00               	movwf	((c:___fladd@a+1)),c
  8834  0013C6  6E3A               	movlw	low highword(normalize32(0.0000000000000000))
  8835  0013C8  0E00               	movwf	((c:___fladd@a+2)),c
  8836  0013CA  6E3B               	movlw	high highword(normalize32(0.0000000000000000))
  8837  0013CC  0E00               	movwf	((c:___fladd@a+3)),c
  8838  0013CE  6E3C               	goto	l2329
  8839  0013D0  EFEA  F009         	line	60
  8840                           	
  8841                           l742:
  8842  0013D4                     	line	62
  8843                           	
  8844                           l2329:
  8845  0013D4                     	bsf	(0+(23/8)+(c:___fladd@a)),c,(23)&7
  8846  0013D4  8E3B               	line	64
  8847                           	
  8848                           l2331:
  8849  0013D6                     	movlw	low(0)
  8850  0013D6  0E00               	movwf	(0+((c:___fladd@a)+03h)),c
  8851  0013D8  6E3C               	line	65
  8852                           	goto	l2335
  8853  0013DA  EFF9  F009         	line	66
  8854                           	
  8855                           l741:
  8856  0013DE                     	line	68
  8857                           	
  8858                           l2333:
  8859  0013DE                     	movlw	low(normalize32(0.0000000000000000))
  8860  0013DE  0E00               	movwf	((c:___fladd@a)),c
  8861  0013E0  6E39               	movlw	high(normalize32(0.0000000000000000))
  8862  0013E2  0E00               	movwf	((c:___fladd@a+1)),c
  8863  0013E4  6E3A               	movlw	low highword(normalize32(0.0000000000000000))
  8864  0013E6  0E00               	movwf	((c:___fladd@a+2)),c
  8865  0013E8  6E3B               	movlw	high highword(normalize32(0.0000000000000000))
  8866  0013EA  0E00               	movwf	((c:___fladd@a+3)),c
  8867  0013EC  6E3C               	goto	l2335
  8868  0013EE  EFF9  F009         	line	69
  8869                           	
  8870                           l743:
  8871  0013F2                     	line	75
  8872                           	
  8873                           l2335:
  8874  0013F2                     		movf	((c:___fladd@bexp)),c,w
  8875  0013F2  5047               	subwf	((c:___fladd@aexp)),c,w
  8876  0013F4  5C46               	btfsc	status,0
  8877  0013F6  B0D8               	goto	u1881
  8878  0013F8  EF00  F00A         	goto	u1880
  8879  0013FC  EF02  F00A         
  8880                           u1881:
  8881  001400                     	goto	l2371
  8882  001400  EF2D  F00A         u1880:
  8883  001404                     	line	77
  8884                           	
  8885                           l2337:
  8886  001404                     	
  8887                           	btfss	((c:___fladd@signs)),c,(6)&7
  8888  001404  AC45               	goto	u1891
  8889  001406  EF07  F00A         	goto	u1890
  8890  00140A  EF09  F00A         u1891:
  8891  00140E                     	goto	l2341
  8892  00140E  EF0D  F00A         u1890:
  8893  001412                     	line	78
  8894                           	
  8895                           l2339:
  8896  001412                     	movlw	(080h)&0ffh
  8897  001412  0E80               	xorwf	((c:___fladd@signs)),c
  8898  001414  1A45               	goto	l2341
  8899  001416  EF0D  F00A         	line	79
  8900                           	
  8901                           l745:
  8902  00141A                     	line	81
  8903                           	
  8904                           l2341:
  8905  00141A                     	movff	(c:___fladd@bexp),(c:___fladd@grs)
  8906  00141A  C047  F048         	line	82
  8907                           	
  8908                           l2343:
  8909  00141E                     	movff	(c:___fladd@aexp),(c:___fladd@bexp)
  8910  00141E  C046  F047         	line	83
  8911                           	
  8912                           l2345:
  8913  001422                     	movff	(c:___fladd@grs),(c:___fladd@aexp)
  8914  001422  C048  F046         	line	84
  8915                           	
  8916                           l2347:
  8917  001426                     	movff	(c:___fladd@b),(c:___fladd@grs)
  8918  001426  C035  F048         	line	85
  8919                           	
  8920                           l2349:
  8921  00142A                     	movff	(c:___fladd@a),(c:___fladd@b)
  8922  00142A  C039  F035         	line	86
  8923                           	
  8924                           l2351:
  8925  00142E                     	movff	(c:___fladd@grs),(c:___fladd@a)
  8926  00142E  C048  F039         	line	87
  8927                           	
  8928                           l2353:
  8929  001432                     	movff	0+((c:___fladd@b)+01h),(c:___fladd@grs)
  8930  001432  C036  F048         	line	88
  8931                           	
  8932                           l2355:
  8933  001436                     	movff	0+((c:___fladd@a)+01h),0+((c:___fladd@b)+01h)
  8934  001436  C03A  F036         	line	89
  8935                           	
  8936                           l2357:
  8937  00143A                     	movff	(c:___fladd@grs),0+((c:___fladd@a)+01h)
  8938  00143A  C048  F03A         	line	90
  8939                           	
  8940                           l2359:
  8941  00143E                     	movff	0+((c:___fladd@b)+02h),(c:___fladd@grs)
  8942  00143E  C037  F048         	line	91
  8943                           	
  8944                           l2361:
  8945  001442                     	movff	0+((c:___fladd@a)+02h),0+((c:___fladd@b)+02h)
  8946  001442  C03B  F037         	line	92
  8947                           	
  8948                           l2363:
  8949  001446                     	movff	(c:___fladd@grs),0+((c:___fladd@a)+02h)
  8950  001446  C048  F03B         	line	93
  8951                           	
  8952                           l2365:
  8953  00144A                     	movff	0+((c:___fladd@b)+03h),(c:___fladd@grs)
  8954  00144A  C038  F048         	line	94
  8955                           	
  8956                           l2367:
  8957  00144E                     	movff	0+((c:___fladd@a)+03h),0+((c:___fladd@b)+03h)
  8958  00144E  C03C  F038         	line	95
  8959                           	
  8960                           l2369:
  8961  001452                     	movff	(c:___fladd@grs),0+((c:___fladd@a)+03h)
  8962  001452  C048  F03C         	goto	l2371
  8963  001456  EF2D  F00A         	line	96
  8964                           	
  8965                           l744:
  8966  00145A                     	line	98
  8967                           	
  8968                           l2371:
  8969  00145A                     	movlw	low(0)
  8970  00145A  0E00               	movwf	((c:___fladd@grs)),c
  8971  00145C  6E48               	line	100
  8972                           	
  8973                           l2373:
  8974  00145E                     	movf	((c:___fladd@bexp)),c,w
  8975  00145E  5047               	movwf	(??___fladd+0+0)&0ffh,c
  8976  001460  6E3D               	clrf	(??___fladd+0+0+1)&0ffh,c
  8977  001462  6A3E               
  8978                           	comf	(??___fladd+0+0),c
  8979  001464  1E3D               	comf	(??___fladd+0+1),c
  8980  001466  1E3E               	infsnz	(??___fladd+0+0),c
  8981  001468  4A3D               	incf	(??___fladd+0+1),c
  8982  00146A  2A3E               	movf	((c:___fladd@aexp)),c,w
  8983  00146C  5046               	movwf	(??___fladd+2+0)&0ffh,c
  8984  00146E  6E3F               	clrf	(??___fladd+2+0+1)&0ffh,c
  8985  001470  6A40               
  8986                           	movf	(??___fladd+0+0),c,w
  8987  001472  503D               	addwf	(??___fladd+2+0),c
  8988  001474  263F               	movf	(??___fladd+0+1),c,w
  8989  001476  503E               	addwfc	(??___fladd+2+1),c
  8990  001478  2240               	btfsc	(??___fladd+2+1),c,7
  8991  00147A  BE40               	goto	u1901
  8992  00147C  EF49  F00A         	movf	(??___fladd+2+1),c,w
  8993  001480  5040               	bnz	u1900
  8994  001482  E109               	movlw	26
  8995  001484  0E1A               	subwf	 (??___fladd+2+0),c,w
  8996  001486  5C3F               	btfss	status,0
  8997  001488  A0D8               	goto	u1901
  8998  00148A  EF49  F00A         	goto	u1900
  8999  00148E  EF4B  F00A         
  9000                           u1901:
  9001  001492                     	goto	l748
  9002  001492  EF88  F00A         u1900:
  9003  001496                     	line	101
  9004                           	
  9005                           l2375:
  9006  001496                     	movf	((c:___fladd@b)),c,w
  9007  001496  5035               iorwf	((c:___fladd@b+1)),c,w
  9008  001498  1036               iorwf	((c:___fladd@b+2)),c,w
  9009  00149A  1037               iorwf	((c:___fladd@b+3)),c,w
  9010  00149C  1038               	btfss	status,2
  9011  00149E  A4D8               	goto	u1911
  9012  0014A0  EF54  F00A         	goto	u1910
  9013  0014A4  EF57  F00A         
  9014                           u1911:
  9015  0014A8                     	movlw	1
  9016  0014A8  0E01               	goto	u1920
  9017  0014AA  EF58  F00A         u1910:
  9018  0014AE                     	movlw	0
  9019  0014AE  0E00               u1920:
  9020  0014B0                     	movwf	((c:___fladd@grs)),c
  9021  0014B0  6E48               	line	102
  9022                           	
  9023                           l2377:
  9024  0014B2                     	movlw	low(0)
  9025  0014B2  0E00               	movwf	((c:___fladd@b)),c
  9026  0014B4  6E35               	movlw	high(0)
  9027  0014B6  0E00               	movwf	((c:___fladd@b+1)),c
  9028  0014B8  6E36               	movlw	low highword(0)
  9029  0014BA  0E00               	movwf	((c:___fladd@b+2)),c
  9030  0014BC  6E37               	movlw	high highword(0)
  9031  0014BE  0E00               	movwf	((c:___fladd@b+3)),c
  9032  0014C0  6E38               	line	103
  9033                           	
  9034                           l2379:
  9035  0014C2                     	movff	(c:___fladd@aexp),(c:___fladd@bexp)
  9036  0014C2  C046  F047         	line	104
  9037                           	goto	l747
  9038  0014C6  EF93  F00A         	line	105
  9039                           	
  9040                           l746:
  9041  0014CA                     	line	106
  9042                           	goto	l748
  9043  0014CA  EF88  F00A         	
  9044                           l749:
  9045  0014CE                     	line	109
  9046                           	
  9047                           	btfss	((c:___fladd@grs)),c,(0)&7
  9048  0014CE  A048               	goto	u1931
  9049  0014D0  EF6C  F00A         	goto	u1930
  9050  0014D4  EF6E  F00A         u1931:
  9051  0014D8                     	goto	l2383
  9052  0014D8  EF74  F00A         u1930:
  9053  0014DC                     	line	110
  9054                           	
  9055                           l2381:
  9056  0014DC                     	bcf	status,0
  9057  0014DC  90D8               	rrcf	((c:___fladd@grs)),c,w
  9058  0014DE  3048               	iorlw	low(01h)
  9059  0014E0  0901               	movwf	((c:___fladd@grs)),c
  9060  0014E2  6E48               	line	111
  9061                           	goto	l2385
  9062  0014E4  EF78  F00A         	line	112
  9063                           	
  9064                           l750:
  9065  0014E8                     	line	113
  9066                           	
  9067                           l2383:
  9068  0014E8                     	bcf status,0
  9069  0014E8  90D8               	rrcf	((c:___fladd@grs)),c
  9070  0014EA  3248               
  9071                           	goto	l2385
  9072  0014EC  EF78  F00A         	line	114
  9073                           	
  9074                           l751:
  9075  0014F0                     	line	115
  9076                           	
  9077                           l2385:
  9078  0014F0                     	
  9079                           	btfss	((c:___fladd@b)),c,(0)&7
  9080  0014F0  A035               	goto	u1941
  9081  0014F2  EF7D  F00A         	goto	u1940
  9082  0014F6  EF7F  F00A         u1941:
  9083  0014FA                     	goto	l2389
  9084  0014FA  EF82  F00A         u1940:
  9085  0014FE                     	line	116
  9086                           	
  9087                           l2387:
  9088  0014FE                     	bsf	(0+(7/8)+(c:___fladd@grs)),c,(7)&7
  9089  0014FE  8E48               	goto	l2389
  9090  001500  EF82  F00A         	line	117
  9091                           	
  9092                           l752:
  9093  001504                     	line	118
  9094                           	
  9095                           l2389:
  9096  001504                     	rlcf	((c:___fladd@b+3)),c,w
  9097  001504  3438               	rrcf	((c:___fladd@b+3)),c
  9098  001506  3238               	rrcf	((c:___fladd@b+2)),c
  9099  001508  3237               	rrcf	((c:___fladd@b+1)),c
  9100  00150A  3236               	rrcf	((c:___fladd@b)),c
  9101  00150C  3235               	line	119
  9102                           	
  9103                           l2391:
  9104  00150E                     	incf	((c:___fladd@bexp)),c
  9105  00150E  2A47               	line	120
  9106                           	
  9107                           l748:
  9108  001510                     	line	106
  9109                           		movf	((c:___fladd@aexp)),c,w
  9110  001510  5046               	subwf	((c:___fladd@bexp)),c,w
  9111  001512  5C47               	btfss	status,0
  9112  001514  A0D8               	goto	u1951
  9113  001516  EF8F  F00A         	goto	u1950
  9114  00151A  EF91  F00A         
  9115                           u1951:
  9116  00151E                     	goto	l749
  9117  00151E  EF67  F00A         u1950:
  9118  001522                     	goto	l747
  9119  001522  EF93  F00A         	
  9120                           l753:
  9121  001526                     	line	121
  9122                           	
  9123                           l747:
  9124  001526                     	line	124
  9125                           	
  9126                           	btfsc	((c:___fladd@signs)),c,(6)&7
  9127  001526  BC45               	goto	u1961
  9128  001528  EF98  F00A         	goto	u1960
  9129  00152C  EF9A  F00A         u1961:
  9130  001530                     	goto	l2417
  9131  001530  EFE3  F00A         u1960:
  9132  001534                     	line	127
  9133                           	
  9134                           l2393:
  9135  001534                     	movf	((c:___fladd@bexp)),c,w
  9136  001534  5047               	btfss	status,2
  9137  001536  A4D8               	goto	u1971
  9138  001538  EFA0  F00A         	goto	u1970
  9139  00153C  EFA2  F00A         u1971:
  9140  001540                     	goto	l2399
  9141  001540  EFAE  F00A         u1970:
  9142  001544                     	line	128
  9143                           	
  9144                           l2395:
  9145  001544                     	movlw	low(normalize32(0.0000000000000000))
  9146  001544  0E00               	movwf	((c:?___fladd)),c
  9147  001546  6E35               	movlw	high(normalize32(0.0000000000000000))
  9148  001548  0E00               	movwf	((c:?___fladd+1)),c
  9149  00154A  6E36               	movlw	low highword(normalize32(0.0000000000000000))
  9150  00154C  0E00               	movwf	((c:?___fladd+2)),c
  9151  00154E  6E37               	movlw	high highword(normalize32(0.0000000000000000))
  9152  001550  0E00               	movwf	((c:?___fladd+3)),c
  9153  001552  6E38               	goto	l756
  9154  001554  EF3D  F00C         	
  9155                           l2397:
  9156  001558                     	goto	l756
  9157  001558  EF3D  F00C         	line	129
  9158                           	
  9159                           l755:
  9160  00155C                     	line	132
  9161                           	
  9162                           l2399:
  9163  00155C                     	movf	((c:___fladd@a)),c,w
  9164  00155C  5039               	addwf	((c:___fladd@b)),c
  9165  00155E  2635               	movf	((c:___fladd@a+1)),c,w
  9166  001560  503A               	addwfc	((c:___fladd@b+1)),c
  9167  001562  2236               	movf	((c:___fladd@a+2)),c,w
  9168  001564  503B               	addwfc	((c:___fladd@b+2)),c
  9169  001566  2237               	movf	((c:___fladd@a+3)),c,w
  9170  001568  503C               	addwfc	((c:___fladd@b+3)),c
  9171  00156A  2238               	line	134
  9172                           	
  9173                           l2401:
  9174  00156C                     	
  9175                           	btfss	((c:___fladd@b+3)),c,(24)&7
  9176  00156C  A038               	goto	u1981
  9177  00156E  EFBB  F00A         	goto	u1980
  9178  001572  EFBD  F00A         u1981:
  9179  001576                     	goto	l2453
  9180  001576  EF93  F00B         u1980:
  9181  00157A                     	line	135
  9182                           	
  9183                           l2403:
  9184  00157A                     	
  9185                           	btfss	((c:___fladd@grs)),c,(0)&7
  9186  00157A  A048               	goto	u1991
  9187  00157C  EFC2  F00A         	goto	u1990
  9188  001580  EFC4  F00A         u1991:
  9189  001584                     	goto	l2407
  9190  001584  EFCB  F00A         u1990:
  9191  001588                     	line	136
  9192                           	
  9193                           l2405:
  9194  001588                     	bcf status,0
  9195  001588  90D8               	rrcf	((c:___fladd@grs)),c
  9196  00158A  3248               
  9197                           	movf	((c:___fladd@grs)),c,w
  9198  00158C  5048               	iorlw	low(01h)
  9199  00158E  0901               	movwf	((c:___fladd@grs)),c
  9200  001590  6E48               	line	137
  9201                           	goto	l2409
  9202  001592  EFCF  F00A         	line	138
  9203                           	
  9204                           l758:
  9205  001596                     	line	139
  9206                           	
  9207                           l2407:
  9208  001596                     	bcf status,0
  9209  001596  90D8               	rrcf	((c:___fladd@grs)),c
  9210  001598  3248               
  9211                           	goto	l2409
  9212  00159A  EFCF  F00A         	line	140
  9213                           	
  9214                           l759:
  9215  00159E                     	line	141
  9216                           	
  9217                           l2409:
  9218  00159E                     	
  9219                           	btfss	((c:___fladd@b)),c,(0)&7
  9220  00159E  A035               	goto	u2001
  9221  0015A0  EFD4  F00A         	goto	u2000
  9222  0015A4  EFD6  F00A         u2001:
  9223  0015A8                     	goto	l2413
  9224  0015A8  EFD9  F00A         u2000:
  9225  0015AC                     	line	142
  9226                           	
  9227                           l2411:
  9228  0015AC                     	bsf	(0+(7/8)+(c:___fladd@grs)),c,(7)&7
  9229  0015AC  8E48               	goto	l2413
  9230  0015AE  EFD9  F00A         	line	143
  9231                           	
  9232                           l760:
  9233  0015B2                     	line	144
  9234                           	
  9235                           l2413:
  9236  0015B2                     	rlcf	((c:___fladd@b+3)),c,w
  9237  0015B2  3438               	rrcf	((c:___fladd@b+3)),c
  9238  0015B4  3238               	rrcf	((c:___fladd@b+2)),c
  9239  0015B6  3237               	rrcf	((c:___fladd@b+1)),c
  9240  0015B8  3236               	rrcf	((c:___fladd@b)),c
  9241  0015BA  3235               	line	145
  9242                           	
  9243                           l2415:
  9244  0015BC                     	incf	((c:___fladd@bexp)),c
  9245  0015BC  2A47               	goto	l2453
  9246  0015BE  EF93  F00B         	line	146
  9247                           	
  9248                           l757:
  9249  0015C2                     	line	148
  9250                           	goto	l2453
  9251  0015C2  EF93  F00B         	line	149
  9252                           	
  9253                           l754:
  9254  0015C6                     	line	153
  9255                           	
  9256                           l2417:
  9257  0015C6                     		movf	((c:___fladd@a)),c,w
  9258  0015C6  5039               	subwf	((c:___fladd@b)),c,w
  9259  0015C8  5C35               	movf	((c:___fladd@a+1)),c,w
  9260  0015CA  503A               	subwfb	((c:___fladd@b+1)),c,w
  9261  0015CC  5836               	movf	((c:___fladd@a+2)),c,w
  9262  0015CE  503B               	subwfb	((c:___fladd@b+2)),c,w
  9263  0015D0  5837               	movf	((c:___fladd@b+3)),c,w
  9264  0015D2  5038               	xorlw	80h
  9265  0015D4  0A80               	movwf	(??___fladd+0+0)&0ffh,c
  9266  0015D6  6E3D               	movf	((c:___fladd@a+3)),c,w
  9267  0015D8  503C               	xorlw	80h
  9268  0015DA  0A80               	subwfb	(??___fladd+0+0)&0ffh,c,w
  9269  0015DC  583D               	btfsc	status,0
  9270  0015DE  B0D8               	goto	u2011
  9271  0015E0  EFF4  F00A         	goto	u2010
  9272  0015E4  EFF6  F00A         
  9273                           u2011:
  9274  0015E8                     	goto	l2427
  9275  0015E8  EF34  F00B         u2010:
  9276  0015EC                     	line	154
  9277                           	
  9278                           l2419:
  9279  0015EC                     	movff	(c:___fladd@b),??___fladd+0+0
  9280  0015EC  C035  F03D         	movff	(c:___fladd@b+1),??___fladd+0+0+1
  9281  0015F0  C036  F03E         	movff	(c:___fladd@b+2),??___fladd+0+0+2
  9282  0015F4  C037  F03F         	movff	(c:___fladd@b+3),??___fladd+0+0+3
  9283  0015F8  C038  F040         	comf	(??___fladd+0+0),c
  9284  0015FC  1E3D               	comf	(??___fladd+0+1),c
  9285  0015FE  1E3E               	comf	(??___fladd+0+2),c
  9286  001600  1E3F               	comf	(??___fladd+0+3),c
  9287  001602  1E40               	incf	(??___fladd+0+0),c
  9288  001604  2A3D               	movlw	0
  9289  001606  0E00               	addwfc	(??___fladd+0+1),c
  9290  001608  223E               	addwfc	(??___fladd+0+2),c
  9291  00160A  223F               	addwfc	(??___fladd+0+3),c
  9292  00160C  2240               	movf	((c:___fladd@a)),c,w
  9293  00160E  5039               	addwf	(??___fladd+0+0),c,w
  9294  001610  243D               	movwf	(??___fladd+4+0)&0ffh,c
  9295  001612  6E41               	movf	((c:___fladd@a+1)),c,w
  9296  001614  503A               	addwfc	(??___fladd+0+1),c,w
  9297  001616  203E               	movwf	1+(??___fladd+4+0)&0ffh,c
  9298  001618  6E42               	
  9299                           	movf	((c:___fladd@a+2)),c,w
  9300  00161A  503B               	addwfc	(??___fladd+0+2),c,w
  9301  00161C  203F               	movwf	2+(??___fladd+4+0)&0ffh,c
  9302  00161E  6E43               	
  9303                           	movf	((c:___fladd@a+3)),c,w
  9304  001620  503C               	addwfc	(??___fladd+0+3),c,w
  9305  001622  2040               	movwf	3+(??___fladd+4+0)&0ffh,c
  9306  001624  6E44               	movlw	0FFh
  9307  001626  0EFF               	addwf	(??___fladd+4+0),c,w
  9308  001628  2441               	movwf	((c:___fladd@b)),c
  9309  00162A  6E35               	movlw	0FFh
  9310  00162C  0EFF               	addwfc	(??___fladd+4+1),c,w
  9311  00162E  2042               	movwf	1+((c:___fladd@b)),c
  9312  001630  6E36               	
  9313                           	movlw	0FFh
  9314  001632  0EFF               	addwfc	(??___fladd+4+2),c,w
  9315  001634  2043               	movwf	2+((c:___fladd@b)),c
  9316  001636  6E37               	
  9317                           	movlw	0FFh
  9318  001638  0EFF               	addwfc	(??___fladd+4+3),c,w
  9319  00163A  2044               	movwf	3+((c:___fladd@b)),c
  9320  00163C  6E38               	line	155
  9321                           	movlw	(080h)&0ffh
  9322  00163E  0E80               	xorwf	((c:___fladd@signs)),c
  9323  001640  1A45               	line	156
  9324                           	
  9325                           l2421:
  9326  001642                     	negf	((c:___fladd@grs)),c
  9327  001642  6C48               	line	157
  9328                           	
  9329                           l2423:
  9330  001644                     	movf	((c:___fladd@grs)),c,w
  9331  001644  5048               	btfss	status,2
  9332  001646  A4D8               	goto	u2021
  9333  001648  EF28  F00B         	goto	u2020
  9334  00164C  EF2A  F00B         u2021:
  9335  001650                     	goto	l764
  9336  001650  EF3C  F00B         u2020:
  9337  001654                     	line	158
  9338                           	
  9339                           l2425:
  9340  001654                     	movlw	low(01h)
  9341  001654  0E01               	addwf	((c:___fladd@b)),c
  9342  001656  2635               	movlw	0
  9343  001658  0E00               	addwfc	((c:___fladd@b+1)),c
  9344  00165A  2236               	addwfc	((c:___fladd@b+2)),c
  9345  00165C  2237               	addwfc	((c:___fladd@b+3)),c
  9346  00165E  2238               	goto	l764
  9347  001660  EF3C  F00B         	line	159
  9348                           	
  9349                           l763:
  9350  001664                     	line	160
  9351                           	goto	l764
  9352  001664  EF3C  F00B         	line	161
  9353                           	
  9354                           l762:
  9355  001668                     	line	162
  9356                           	
  9357                           l2427:
  9358  001668                     	movf	((c:___fladd@a)),c,w
  9359  001668  5039               	subwf	((c:___fladd@b)),c
  9360  00166A  5E35               	movf	((c:___fladd@a+1)),c,w
  9361  00166C  503A               	subwfb	((c:___fladd@b+1)),c
  9362  00166E  5A36               	movf	((c:___fladd@a+2)),c,w
  9363  001670  503B               	subwfb	((c:___fladd@b+2)),c
  9364  001672  5A37               	movf	((c:___fladd@a+3)),c,w
  9365  001674  503C               	subwfb	((c:___fladd@b+3)),c
  9366  001676  5A38               	line	163
  9367                           	
  9368                           l764:
  9369  001678                     	line	166
  9370                           	movf	((c:___fladd@b)),c,w
  9371  001678  5035               iorwf	((c:___fladd@b+1)),c,w
  9372  00167A  1036               iorwf	((c:___fladd@b+2)),c,w
  9373  00167C  1037               iorwf	((c:___fladd@b+3)),c,w
  9374  00167E  1038               	btfss	status,2
  9375  001680  A4D8               	goto	u2031
  9376  001682  EF45  F00B         	goto	u2030
  9377  001686  EF47  F00B         
  9378                           u2031:
  9379  00168A                     	goto	l2451
  9380  00168A  EF88  F00B         u2030:
  9381  00168E                     	
  9382                           l2429:
  9383  00168E                     	movf	((c:___fladd@grs)),c,w
  9384  00168E  5048               	btfss	status,2
  9385  001690  A4D8               	goto	u2041
  9386  001692  EF4D  F00B         	goto	u2040
  9387  001696  EF4F  F00B         u2041:
  9388  00169A                     	goto	l2451
  9389  00169A  EF88  F00B         u2040:
  9390  00169E                     	line	167
  9391                           	
  9392                           l2431:
  9393  00169E                     	movlw	low(normalize32(0.0000000000000000))
  9394  00169E  0E00               	movwf	((c:?___fladd)),c
  9395  0016A0  6E35               	movlw	high(normalize32(0.0000000000000000))
  9396  0016A2  0E00               	movwf	((c:?___fladd+1)),c
  9397  0016A4  6E36               	movlw	low highword(normalize32(0.0000000000000000))
  9398  0016A6  0E00               	movwf	((c:?___fladd+2)),c
  9399  0016A8  6E37               	movlw	high highword(normalize32(0.0000000000000000))
  9400  0016AA  0E00               	movwf	((c:?___fladd+3)),c
  9401  0016AC  6E38               	goto	l756
  9402  0016AE  EF3D  F00C         	
  9403                           l2433:
  9404  0016B2                     	goto	l756
  9405  0016B2  EF3D  F00C         	line	168
  9406                           	
  9407                           l765:
  9408  0016B6                     	line	171
  9409                           	goto	l2451
  9410  0016B6  EF88  F00B         	
  9411                           l767:
  9412  0016BA                     	line	172
  9413                           	
  9414                           l2435:
  9415  0016BA                     	bcf	status,0
  9416  0016BA  90D8               	rlcf	((c:___fladd@b)),c
  9417  0016BC  3635               	rlcf	((c:___fladd@b+1)),c
  9418  0016BE  3636               	rlcf	((c:___fladd@b+2)),c
  9419  0016C0  3637               	rlcf	((c:___fladd@b+3)),c
  9420  0016C2  3638               	line	173
  9421                           	
  9422                           l2437:
  9423  0016C4                     	
  9424                           	btfss	((c:___fladd@grs)),c,(7)&7
  9425  0016C4  AE48               	goto	u2051
  9426  0016C6  EF67  F00B         	goto	u2050
  9427  0016CA  EF69  F00B         u2051:
  9428  0016CE                     	goto	l2441
  9429  0016CE  EF6C  F00B         u2050:
  9430  0016D2                     	line	174
  9431                           	
  9432                           l2439:
  9433  0016D2                     	bsf	(0+(0/8)+(c:___fladd@b)),c,(0)&7
  9434  0016D2  8035               	goto	l2441
  9435  0016D4  EF6C  F00B         	line	175
  9436                           	
  9437                           l768:
  9438  0016D8                     	line	176
  9439                           	
  9440                           l2441:
  9441  0016D8                     	
  9442                           	btfss	((c:___fladd@grs)),c,(0)&7
  9443  0016D8  A048               	goto	u2061
  9444  0016DA  EF71  F00B         	goto	u2060
  9445  0016DE  EF73  F00B         u2061:
  9446  0016E2                     	goto	l2445
  9447  0016E2  EF77  F00B         u2060:
  9448  0016E6                     	line	177
  9449                           	
  9450                           l2443:
  9451  0016E6                     	bsf	status,0
  9452  0016E6  80D8               	
  9453                           	rlcf	((c:___fladd@grs)),c
  9454  0016E8  3648               	line	178
  9455                           	goto	l2447
  9456  0016EA  EF7B  F00B         	line	179
  9457                           	
  9458                           l769:
  9459  0016EE                     	line	180
  9460                           	
  9461                           l2445:
  9462  0016EE                     	bcf status,0
  9463  0016EE  90D8               	rlcf	((c:___fladd@grs)),c
  9464  0016F0  3648               
  9465                           	goto	l2447
  9466  0016F2  EF7B  F00B         	line	181
  9467                           	
  9468                           l770:
  9469  0016F6                     	line	182
  9470                           	
  9471                           l2447:
  9472  0016F6                     	movf	((c:___fladd@bexp)),c,w
  9473  0016F6  5047               	btfsc	status,2
  9474  0016F8  B4D8               	goto	u2071
  9475  0016FA  EF81  F00B         	goto	u2070
  9476  0016FE  EF83  F00B         u2071:
  9477  001702                     	goto	l2451
  9478  001702  EF88  F00B         u2070:
  9479  001706                     	line	183
  9480                           	
  9481                           l2449:
  9482  001706                     	decf	((c:___fladd@bexp)),c
  9483  001706  0647               	goto	l2451
  9484  001708  EF88  F00B         	line	184
  9485                           	
  9486                           l771:
  9487  00170C                     	goto	l2451
  9488  00170C  EF88  F00B         	line	185
  9489                           	
  9490                           l766:
  9491  001710                     	line	171
  9492                           	
  9493                           l2451:
  9494  001710                     	
  9495                           	btfss	((c:___fladd@b+2)),c,(23)&7
  9496  001710  AE37               	goto	u2081
  9497  001712  EF8D  F00B         	goto	u2080
  9498  001716  EF8F  F00B         u2081:
  9499  00171A                     	goto	l2435
  9500  00171A  EF5D  F00B         u2080:
  9501  00171E                     	goto	l2453
  9502  00171E  EF93  F00B         	
  9503                           l772:
  9504  001722                     	goto	l2453
  9505  001722  EF93  F00B         	line	186
  9506                           	
  9507                           l761:
  9508  001726                     	line	192
  9509                           	
  9510                           l2453:
  9511  001726                     	movlw	low(0)
  9512  001726  0E00               	movwf	((c:___fladd@aexp)),c
  9513  001728  6E46               	line	193
  9514                           	
  9515                           l2455:
  9516  00172A                     	
  9517                           	btfss	((c:___fladd@grs)),c,(7)&7
  9518  00172A  AE48               	goto	u2091
  9519  00172C  EF9A  F00B         	goto	u2090
  9520  001730  EF9C  F00B         u2091:
  9521  001734                     	goto	l773
  9522  001734  EFB8  F00B         u2090:
  9523  001738                     	line	194
  9524                           	
  9525                           l2457:
  9526  001738                     	movff	(c:___fladd@grs),??___fladd+0+0
  9527  001738  C048  F03D         	movlw	07Fh
  9528  00173C  0E7F               	andwf	(??___fladd+0+0),c
  9529  00173E  163D               	btfsc	status,2
  9530  001740  B4D8               	goto	u2101
  9531  001742  EFA5  F00B         	goto	u2100
  9532  001746  EFA7  F00B         u2101:
  9533  00174A                     	goto	l774
  9534  00174A  EFAB  F00B         u2100:
  9535  00174E                     	line	195
  9536                           	
  9537                           l2459:
  9538  00174E                     	movlw	low(01h)
  9539  00174E  0E01               	movwf	((c:___fladd@aexp)),c
  9540  001750  6E46               	line	196
  9541                           	goto	l773
  9542  001752  EFB8  F00B         	line	197
  9543                           	
  9544                           l774:
  9545  001756                     	line	198
  9546                           	
  9547                           	btfss	((c:___fladd@b)),c,(0)&7
  9548  001756  A035               	goto	u2111
  9549  001758  EFB0  F00B         	goto	u2110
  9550  00175C  EFB2  F00B         u2111:
  9551  001760                     	goto	l773
  9552  001760  EFB8  F00B         u2110:
  9553  001764                     	line	199
  9554                           	
  9555                           l2461:
  9556  001764                     	movlw	low(01h)
  9557  001764  0E01               	movwf	((c:___fladd@aexp)),c
  9558  001766  6E46               	goto	l773
  9559  001768  EFB8  F00B         	line	200
  9560                           	
  9561                           l776:
  9562  00176C                     	goto	l773
  9563  00176C  EFB8  F00B         	line	201
  9564                           	
  9565                           l775:
  9566  001770                     	line	202
  9567                           	
  9568                           l773:
  9569  001770                     	line	203
  9570                           	movf	((c:___fladd@aexp)),c,w
  9571  001770  5046               	btfsc	status,2
  9572  001772  B4D8               	goto	u2121
  9573  001774  EFBE  F00B         	goto	u2120
  9574  001778  EFC0  F00B         u2121:
  9575  00177C                     	goto	l2471
  9576  00177C  EFF1  F00B         u2120:
  9577  001780                     	line	204
  9578                           	
  9579                           l2463:
  9580  001780                     	movlw	low(01h)
  9581  001780  0E01               	addwf	((c:___fladd@b)),c
  9582  001782  2635               	movlw	0
  9583  001784  0E00               	addwfc	((c:___fladd@b+1)),c
  9584  001786  2236               	addwfc	((c:___fladd@b+2)),c
  9585  001788  2237               	addwfc	((c:___fladd@b+3)),c
  9586  00178A  2238               	line	205
  9587                           	
  9588                           l2465:
  9589  00178C                     	
  9590                           	btfss	((c:___fladd@b+3)),c,(24)&7
  9591  00178C  A038               	goto	u2131
  9592  00178E  EFCB  F00B         	goto	u2130
  9593  001792  EFCD  F00B         u2131:
  9594  001796                     	goto	l2471
  9595  001796  EFF1  F00B         u2130:
  9596  00179A                     	line	206
  9597                           	
  9598                           l2467:
  9599  00179A                     	movff	(c:___fladd@b),??___fladd+0+0
  9600  00179A  C035  F03D         	movff	(c:___fladd@b+1),??___fladd+0+0+1
  9601  00179E  C036  F03E         	movff	(c:___fladd@b+2),??___fladd+0+0+2
  9602  0017A2  C037  F03F         	movff	(c:___fladd@b+3),??___fladd+0+0+3
  9603  0017A6  C038  F040         	rlcf	(??___fladd+0+3),c,w
  9604  0017AA  3440               	rrcf	(??___fladd+0+3),c
  9605  0017AC  3240               	rrcf	(??___fladd+0+2),c
  9606  0017AE  323F               	rrcf	(??___fladd+0+1),c
  9607  0017B0  323E               	rrcf	(??___fladd+0+0),c
  9608  0017B2  323D               	movff	??___fladd+0+0,(c:___fladd@b)
  9609  0017B4  C03D  F035         	movff	??___fladd+0+1,(c:___fladd@b+1)
  9610  0017B8  C03E  F036         	movff	??___fladd+0+2,(c:___fladd@b+2)
  9611  0017BC  C03F  F037         	movff	??___fladd+0+3,(c:___fladd@b+3)
  9612  0017C0  C040  F038         	line	207
  9613                           		incf	((c:___fladd@bexp)),c,w
  9614  0017C4  2847               	btfsc	status,2
  9615  0017C6  B4D8               	goto	u2141
  9616  0017C8  EFE8  F00B         	goto	u2140
  9617  0017CC  EFEA  F00B         
  9618                           u2141:
  9619  0017D0                     	goto	l2471
  9620  0017D0  EFF1  F00B         u2140:
  9621  0017D4                     	line	208
  9622                           	
  9623                           l2469:
  9624  0017D4                     	incf	((c:___fladd@bexp)),c
  9625  0017D4  2A47               	goto	l2471
  9626  0017D6  EFF1  F00B         	line	209
  9627                           	
  9628                           l779:
  9629  0017DA                     	goto	l2471
  9630  0017DA  EFF1  F00B         	line	210
  9631                           	
  9632                           l778:
  9633  0017DE                     	goto	l2471
  9634  0017DE  EFF1  F00B         	line	211
  9635                           	
  9636                           l777:
  9637  0017E2                     	line	215
  9638                           	
  9639                           l2471:
  9640  0017E2                     		incf	((c:___fladd@bexp)),c,w
  9641  0017E2  2847               	btfsc	status,2
  9642  0017E4  B4D8               	goto	u2151
  9643  0017E6  EFF7  F00B         	goto	u2150
  9644  0017EA  EFF9  F00B         
  9645                           u2151:
  9646  0017EE                     	goto	l2475
  9647  0017EE  EF03  F00C         u2150:
  9648  0017F2                     	
  9649                           l2473:
  9650  0017F2                     	movf	((c:___fladd@bexp)),c,w
  9651  0017F2  5047               	btfss	status,2
  9652  0017F4  A4D8               	goto	u2161
  9653  0017F6  EFFF  F00B         	goto	u2160
  9654  0017FA  EF01  F00C         u2161:
  9655  0017FE                     	goto	l2479
  9656  0017FE  EF19  F00C         u2160:
  9657  001802                     	goto	l2475
  9658  001802  EF03  F00C         	
  9659                           l782:
  9660  001806                     	line	216
  9661                           	
  9662                           l2475:
  9663  001806                     	movlw	low(0)
  9664  001806  0E00               	movwf	((c:___fladd@b)),c
  9665  001808  6E35               	movlw	high(0)
  9666  00180A  0E00               	movwf	((c:___fladd@b+1)),c
  9667  00180C  6E36               	movlw	low highword(0)
  9668  00180E  0E00               	movwf	((c:___fladd@b+2)),c
  9669  001810  6E37               	movlw	high highword(0)
  9670  001812  0E00               	movwf	((c:___fladd@b+3)),c
  9671  001814  6E38               	line	218
  9672                           	movf	((c:___fladd@bexp)),c,w
  9673  001816  5047               	btfss	status,2
  9674  001818  A4D8               	goto	u2171
  9675  00181A  EF11  F00C         	goto	u2170
  9676  00181E  EF13  F00C         u2171:
  9677  001822                     	goto	l2479
  9678  001822  EF19  F00C         u2170:
  9679  001826                     	line	219
  9680                           	
  9681                           l2477:
  9682  001826                     	movlw	low(0)
  9683  001826  0E00               	movwf	((c:___fladd@signs)),c
  9684  001828  6E45               	goto	l2479
  9685  00182A  EF19  F00C         	line	220
  9686                           	
  9687                           l783:
  9688  00182E                     	goto	l2479
  9689  00182E  EF19  F00C         	line	221
  9690                           	
  9691                           l780:
  9692  001832                     	line	225
  9693                           	
  9694                           l2479:
  9695  001832                     	
  9696                           	btfss	((c:___fladd@bexp)),c,(0)&7
  9697  001832  A047               	goto	u2181
  9698  001834  EF1E  F00C         	goto	u2180
  9699  001838  EF20  F00C         u2181:
  9700  00183C                     	goto	l2483
  9701  00183C  EF23  F00C         u2180:
  9702  001840                     	line	226
  9703                           	
  9704                           l2481:
  9705  001840                     	bsf	(0+(7/8)+0+((c:___fladd@b)+02h)),c,(7)&7
  9706  001840  8E37               	line	227
  9707                           	goto	l2485
  9708  001842  EF26  F00C         	line	229
  9709                           	
  9710                           l784:
  9711  001846                     	line	230
  9712                           	
  9713                           l2483:
  9714  001846                     	bcf	(0+(7/8)+0+((c:___fladd@b)+02h)),c,(7)&7
  9715  001846  9E37               	goto	l2485
  9716  001848  EF26  F00C         	line	231
  9717                           	
  9718                           l785:
  9719  00184C                     	line	232
  9720                           	
  9721                           l2485:
  9722  00184C                     	bcf	status,0
  9723  00184C  90D8               	rrcf	((c:___fladd@bexp)),c,w
  9724  00184E  3047               	movwf	(0+((c:___fladd@b)+03h)),c
  9725  001850  6E38               	line	233
  9726                           	
  9727                           l2487:
  9728  001852                     	
  9729                           	btfss	((c:___fladd@signs)),c,(7)&7
  9730  001852  AE45               	goto	u2191
  9731  001854  EF2E  F00C         	goto	u2190
  9732  001858  EF30  F00C         u2191:
  9733  00185C                     	goto	l2491
  9734  00185C  EF33  F00C         u2190:
  9735  001860                     	line	234
  9736                           	
  9737                           l2489:
  9738  001860                     	bsf	(0+(7/8)+0+((c:___fladd@b)+03h)),c,(7)&7
  9739  001860  8E38               	goto	l2491
  9740  001862  EF33  F00C         	line	235
  9741                           	
  9742                           l786:
  9743  001866                     	line	236
  9744                           	
  9745                           l2491:
  9746  001866                     	movff	(c:___fladd@b),(c:?___fladd)
  9747  001866  C035  F035         	movff	(c:___fladd@b+1),(c:?___fladd+1)
  9748  00186A  C036  F036         	movff	(c:___fladd@b+2),(c:?___fladd+2)
  9749  00186E  C037  F037         	movff	(c:___fladd@b+3),(c:?___fladd+3)
  9750  001872  C038  F038         	goto	l756
  9751  001876  EF3D  F00C         	
  9752                           l2493:
  9753  00187A                     	line	237
  9754                           	
  9755                           l756:
  9756  00187A                     	return	;funcret
  9757  00187A  0012               	opt stack 0
  9758                           GLOBAL	__end_of___fladd
  9759                           	__end_of___fladd:
  9760  00187C                     	signat	___fladd,8316
  9761                           	global	___flneg
  9762                           
  9763 ;; *************** function ___flneg *****************
  9764 ;; Defined at:
  9765 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flneg.c"
  9766 ;; Parameters:    Size  Location     Type
  9767 ;;  f1              4    0[COMRAM] unsigned char 
  9768 ;; Auto vars:     Size  Location     Type
  9769 ;;		None
  9770 ;; Return value:  Size  Location     Type
  9771 ;;                  4    0[COMRAM] unsigned char 
  9772 ;; Registers used:
  9773 ;;		wreg, status,2, status,0
  9774 ;; Tracked objects:
  9775 ;;		On entry : 0/0
  9776 ;;		On exit  : 0/0
  9777 ;;		Unchanged: 0/0
  9778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9779 ;;      Params:         4       0       0       0       0       0       0       0       0
  9780 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9781 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9782 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9783 ;;Total ram usage:        4 bytes
  9784 ;; Hardware stack levels used:    1
  9785 ;; This function calls:
  9786 ;;		Nothing
  9787 ;; This function is called by:
  9788 ;;		_sprintf
  9789 ;; This function uses a non-reentrant model
  9790 ;;
  9791                           psect	text17,class=CODE,space=0,reloc=2,group=1
  9792                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flneg.c"
  9793                           	line	15
  9794                           global __ptext17
  9795                           __ptext17:
  9796  003620                     psect	text17
  9797                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flneg.c"
  9798                           	line	15
  9799                           	global	__size_of___flneg
  9800                           	__size_of___flneg	equ	__end_of___flneg-___flneg
  9801  0000                     	
  9802                           ___flneg:
  9803  003620                     ;incstack = 0
  9804                           	opt	stack 29
  9805                           	line	17
  9806                           	
  9807                           l3039:
  9808  003620                     	movf	((c:___flneg@f1)),c,w
  9809  003620  5001               iorwf	((c:___flneg@f1+1)),c,w
  9810  003622  1002               iorwf	((c:___flneg@f1+2)),c,w
  9811  003624  1003               iorwf	((c:___flneg@f1+3)),c,w
  9812  003626  1004               	btfsc	status,2
  9813  003628  B4D8               	goto	u2821
  9814  00362A  EF19  F01B         	goto	u2820
  9815  00362E  EF1B  F01B         
  9816                           u2821:
  9817  003632                     	goto	l3043
  9818  003632  EF25  F01B         u2820:
  9819  003636                     	line	18
  9820                           	
  9821                           l3041:
  9822  003636                     	movlw	0
  9823  003636  0E00               	xorwf	((c:___flneg@f1)),c
  9824  003638  1A01               	movlw	0
  9825  00363A  0E00               	xorwf	((c:___flneg@f1+1)),c
  9826  00363C  1A02               	movlw	0
  9827  00363E  0E00               	xorwf	((c:___flneg@f1+2)),c
  9828  003640  1A03               	movlw	080h
  9829  003642  0E80               	xorwf	((c:___flneg@f1+3)),c
  9830  003644  1A04               	goto	l3043
  9831  003646  EF25  F01B         	
  9832                           l488:
  9833  00364A                     	line	19
  9834                           	
  9835                           l3043:
  9836  00364A                     	movff	(c:___flneg@f1),(c:?___flneg)
  9837  00364A  C001  F001         	movff	(c:___flneg@f1+1),(c:?___flneg+1)
  9838  00364E  C002  F002         	movff	(c:___flneg@f1+2),(c:?___flneg+2)
  9839  003652  C003  F003         	movff	(c:___flneg@f1+3),(c:?___flneg+3)
  9840  003656  C004  F004         	goto	l489
  9841  00365A  EF2F  F01B         	
  9842                           l3045:
  9843  00365E                     	line	20
  9844                           	
  9845                           l489:
  9846  00365E                     	return	;funcret
  9847  00365E  0012               	opt stack 0
  9848                           GLOBAL	__end_of___flneg
  9849                           	__end_of___flneg:
  9850  003660                     	signat	___flneg,4220
  9851                           	global	___flge
  9852                           
  9853 ;; *************** function ___flge *****************
  9854 ;; Defined at:
  9855 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flge.c"
  9856 ;; Parameters:    Size  Location     Type
  9857 ;;  ff1             4    0[COMRAM] unsigned char 
  9858 ;;  ff2             4    4[COMRAM] unsigned char 
  9859 ;; Auto vars:     Size  Location     Type
  9860 ;;		None
  9861 ;; Return value:  Size  Location     Type
  9862 ;;		None               void
  9863 ;; Registers used:
  9864 ;;		wreg, status,2, status,0
  9865 ;; Tracked objects:
  9866 ;;		On entry : 0/0
  9867 ;;		On exit  : 0/0
  9868 ;;		Unchanged: 0/0
  9869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9870 ;;      Params:         8       0       0       0       0       0       0       0       0
  9871 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9872 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9873 ;;      Totals:        12       0       0       0       0       0       0       0       0
  9874 ;;Total ram usage:       12 bytes
  9875 ;; Hardware stack levels used:    1
  9876 ;; This function calls:
  9877 ;;		Nothing
  9878 ;; This function is called by:
  9879 ;;		_sprintf
  9880 ;; This function uses a non-reentrant model
  9881 ;;
  9882                           psect	text18,class=CODE,space=0,reloc=2,group=1
  9883                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flge.c"
  9884                           	line	4
  9885                           global __ptext18
  9886                           __ptext18:
  9887  002B68                     psect	text18
  9888                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flge.c"
  9889                           	line	4
  9890                           	global	__size_of___flge
  9891                           	__size_of___flge	equ	__end_of___flge-___flge
  9892  0000                     	
  9893                           ___flge:
  9894  002B68                     ;incstack = 0
  9895                           	opt	stack 29
  9896                           	line	7
  9897                           	
  9898                           l3017:
  9899  002B68                     	movlw	0
  9900  002B68  0E00               	andwf	((c:___flge@ff1)),c,w
  9901  002B6A  1401               	movwf	(??___flge+0+0)&0ffh,c
  9902  002B6C  6E09               	movlw	0
  9903  002B6E  0E00               	andwf	((c:___flge@ff1+1)),c,w
  9904  002B70  1402               	movwf	1+(??___flge+0+0)&0ffh,c
  9905  002B72  6E0A               	
  9906                           	movlw	080h
  9907  002B74  0E80               	andwf	((c:___flge@ff1+2)),c,w
  9908  002B76  1403               	movwf	2+(??___flge+0+0)&0ffh,c
  9909  002B78  6E0B               	
  9910                           	movlw	07Fh
  9911  002B7A  0E7F               	andwf	((c:___flge@ff1+3)),c,w
  9912  002B7C  1404               	movwf	3+(??___flge+0+0)&0ffh,c
  9913  002B7E  6E0C               	movf	(??___flge+0+0),c,w
  9914  002B80  5009               iorwf	(??___flge+0+1),c,w
  9915  002B82  100A               iorwf	(??___flge+0+2),c,w
  9916  002B84  100B               iorwf	(??___flge+0+3),c,w
  9917  002B86  100C               	btfss	status,2
  9918  002B88  A4D8               	goto	u2771
  9919  002B8A  EFC9  F015         	goto	u2770
  9920  002B8E  EFCB  F015         
  9921                           u2771:
  9922  002B92                     	goto	l3021
  9923  002B92  EFD5  F015         u2770:
  9924  002B96                     	line	8
  9925                           	
  9926                           l3019:
  9927  002B96                     	movlw	low(0)
  9928  002B96  0E00               	movwf	((c:___flge@ff1)),c
  9929  002B98  6E01               	movlw	high(0)
  9930  002B9A  0E00               	movwf	((c:___flge@ff1+1)),c
  9931  002B9C  6E02               	movlw	low highword(0)
  9932  002B9E  0E00               	movwf	((c:___flge@ff1+2)),c
  9933  002BA0  6E03               	movlw	high highword(0)
  9934  002BA2  0E00               	movwf	((c:___flge@ff1+3)),c
  9935  002BA4  6E04               	goto	l3021
  9936  002BA6  EFD5  F015         	
  9937                           l481:
  9938  002BAA                     	line	9
  9939                           	
  9940                           l3021:
  9941  002BAA                     	movlw	0
  9942  002BAA  0E00               	andwf	((c:___flge@ff2)),c,w
  9943  002BAC  1405               	movwf	(??___flge+0+0)&0ffh,c
  9944  002BAE  6E09               	movlw	0
  9945  002BB0  0E00               	andwf	((c:___flge@ff2+1)),c,w
  9946  002BB2  1406               	movwf	1+(??___flge+0+0)&0ffh,c
  9947  002BB4  6E0A               	
  9948                           	movlw	080h
  9949  002BB6  0E80               	andwf	((c:___flge@ff2+2)),c,w
  9950  002BB8  1407               	movwf	2+(??___flge+0+0)&0ffh,c
  9951  002BBA  6E0B               	
  9952                           	movlw	07Fh
  9953  002BBC  0E7F               	andwf	((c:___flge@ff2+3)),c,w
  9954  002BBE  1408               	movwf	3+(??___flge+0+0)&0ffh,c
  9955  002BC0  6E0C               	movf	(??___flge+0+0),c,w
  9956  002BC2  5009               iorwf	(??___flge+0+1),c,w
  9957  002BC4  100A               iorwf	(??___flge+0+2),c,w
  9958  002BC6  100B               iorwf	(??___flge+0+3),c,w
  9959  002BC8  100C               	btfss	status,2
  9960  002BCA  A4D8               	goto	u2781
  9961  002BCC  EFEA  F015         	goto	u2780
  9962  002BD0  EFEC  F015         
  9963                           u2781:
  9964  002BD4                     	goto	l3025
  9965  002BD4  EFF6  F015         u2780:
  9966  002BD8                     	line	10
  9967                           	
  9968                           l3023:
  9969  002BD8                     	movlw	low(0)
  9970  002BD8  0E00               	movwf	((c:___flge@ff2)),c
  9971  002BDA  6E05               	movlw	high(0)
  9972  002BDC  0E00               	movwf	((c:___flge@ff2+1)),c
  9973  002BDE  6E06               	movlw	low highword(0)
  9974  002BE0  0E00               	movwf	((c:___flge@ff2+2)),c
  9975  002BE2  6E07               	movlw	high highword(0)
  9976  002BE4  0E00               	movwf	((c:___flge@ff2+3)),c
  9977  002BE6  6E08               	goto	l3025
  9978  002BE8  EFF6  F015         	
  9979                           l482:
  9980  002BEC                     	line	12
  9981                           	
  9982                           l3025:
  9983  002BEC                     	
  9984                           	btfss	((c:___flge@ff1+3)),c,(31)&7
  9985  002BEC  AE04               	goto	u2791
  9986  002BEE  EFFB  F015         	goto	u2790
  9987  002BF2  EFFD  F015         u2791:
  9988  002BF6                     	goto	l3029
  9989  002BF6  EF1C  F016         u2790:
  9990  002BFA                     	line	13
  9991                           	
  9992                           l3027:
  9993  002BFA                     	movff	(c:___flge@ff1),??___flge+0+0
  9994  002BFA  C001  F009         	movff	(c:___flge@ff1+1),??___flge+0+0+1
  9995  002BFE  C002  F00A         	movff	(c:___flge@ff1+2),??___flge+0+0+2
  9996  002C02  C003  F00B         	movff	(c:___flge@ff1+3),??___flge+0+0+3
  9997  002C06  C004  F00C         	comf	(??___flge+0+0),c
  9998  002C0A  1E09               	comf	(??___flge+0+1),c
  9999  002C0C  1E0A               	comf	(??___flge+0+2),c
 10000  002C0E  1E0B               	comf	(??___flge+0+3),c
 10001  002C10  1E0C               	incf	(??___flge+0+0),c
 10002  002C12  2A09               	movlw	0
 10003  002C14  0E00               	addwfc	(??___flge+0+1),c
 10004  002C16  220A               	addwfc	(??___flge+0+2),c
 10005  002C18  220B               	addwfc	(??___flge+0+3),c
 10006  002C1A  220C               	movlw	0
 10007  002C1C  0E00               	addwf	(??___flge+0+0),c,w
 10008  002C1E  2409               	movwf	((c:___flge@ff1)),c
 10009  002C20  6E01               	movlw	0
 10010  002C22  0E00               	addwfc	(??___flge+0+1),c,w
 10011  002C24  200A               	movwf	1+((c:___flge@ff1)),c
 10012  002C26  6E02               	
 10013                           	movlw	0
 10014  002C28  0E00               	addwfc	(??___flge+0+2),c,w
 10015  002C2A  200B               	movwf	2+((c:___flge@ff1)),c
 10016  002C2C  6E03               	
 10017                           	movlw	080h
 10018  002C2E  0E80               	addwfc	(??___flge+0+3),c,w
 10019  002C30  200C               	movwf	3+((c:___flge@ff1)),c
 10020  002C32  6E04               	goto	l3029
 10021  002C34  EF1C  F016         	
 10022                           l483:
 10023  002C38                     	line	14
 10024                           	
 10025                           l3029:
 10026  002C38                     	
 10027                           	btfss	((c:___flge@ff2+3)),c,(31)&7
 10028  002C38  AE08               	goto	u2801
 10029  002C3A  EF21  F016         	goto	u2800
 10030  002C3E  EF23  F016         u2801:
 10031  002C42                     	goto	l484
 10032  002C42  EF40  F016         u2800:
 10033  002C46                     	line	15
 10034                           	
 10035                           l3031:
 10036  002C46                     	movff	(c:___flge@ff2),??___flge+0+0
 10037  002C46  C005  F009         	movff	(c:___flge@ff2+1),??___flge+0+0+1
 10038  002C4A  C006  F00A         	movff	(c:___flge@ff2+2),??___flge+0+0+2
 10039  002C4E  C007  F00B         	movff	(c:___flge@ff2+3),??___flge+0+0+3
 10040  002C52  C008  F00C         	comf	(??___flge+0+0),c
 10041  002C56  1E09               	comf	(??___flge+0+1),c
 10042  002C58  1E0A               	comf	(??___flge+0+2),c
 10043  002C5A  1E0B               	comf	(??___flge+0+3),c
 10044  002C5C  1E0C               	incf	(??___flge+0+0),c
 10045  002C5E  2A09               	movlw	0
 10046  002C60  0E00               	addwfc	(??___flge+0+1),c
 10047  002C62  220A               	addwfc	(??___flge+0+2),c
 10048  002C64  220B               	addwfc	(??___flge+0+3),c
 10049  002C66  220C               	movlw	0
 10050  002C68  0E00               	addwf	(??___flge+0+0),c,w
 10051  002C6A  2409               	movwf	((c:___flge@ff2)),c
 10052  002C6C  6E05               	movlw	0
 10053  002C6E  0E00               	addwfc	(??___flge+0+1),c,w
 10054  002C70  200A               	movwf	1+((c:___flge@ff2)),c
 10055  002C72  6E06               	
 10056                           	movlw	0
 10057  002C74  0E00               	addwfc	(??___flge+0+2),c,w
 10058  002C76  200B               	movwf	2+((c:___flge@ff2)),c
 10059  002C78  6E07               	
 10060                           	movlw	080h
 10061  002C7A  0E80               	addwfc	(??___flge+0+3),c,w
 10062  002C7C  200C               	movwf	3+((c:___flge@ff2)),c
 10063  002C7E  6E08               	
 10064                           l484:
 10065  002C80                     	line	16
 10066                           	movlw	0
 10067  002C80  0E00               	xorwf	((c:___flge@ff1)),c
 10068  002C82  1A01               	movlw	0
 10069  002C84  0E00               	xorwf	((c:___flge@ff1+1)),c
 10070  002C86  1A02               	movlw	0
 10071  002C88  0E00               	xorwf	((c:___flge@ff1+2)),c
 10072  002C8A  1A03               	movlw	080h
 10073  002C8C  0E80               	xorwf	((c:___flge@ff1+3)),c
 10074  002C8E  1A04               	line	17
 10075                           	movlw	0
 10076  002C90  0E00               	xorwf	((c:___flge@ff2)),c
 10077  002C92  1A05               	movlw	0
 10078  002C94  0E00               	xorwf	((c:___flge@ff2+1)),c
 10079  002C96  1A06               	movlw	0
 10080  002C98  0E00               	xorwf	((c:___flge@ff2+2)),c
 10081  002C9A  1A07               	movlw	080h
 10082  002C9C  0E80               	xorwf	((c:___flge@ff2+3)),c
 10083  002C9E  1A08               	line	18
 10084                           		movf	((c:___flge@ff2)),c,w
 10085  002CA0  5005               	subwf	((c:___flge@ff1)),c,w
 10086  002CA2  5C01               	movf	((c:___flge@ff2+1)),c,w
 10087  002CA4  5006               	subwfb	((c:___flge@ff1+1)),c,w
 10088  002CA6  5802               	movf	((c:___flge@ff2+2)),c,w
 10089  002CA8  5007               	subwfb	((c:___flge@ff1+2)),c,w
 10090  002CAA  5803               	movf	((c:___flge@ff2+3)),c,w
 10091  002CAC  5008               	subwfb	((c:___flge@ff1+3)),c,w
 10092  002CAE  5804               	btfsc	status,0
 10093  002CB0  B0D8               	goto	u2811
 10094  002CB2  EF5D  F016         	goto	u2810
 10095  002CB6  EF5F  F016         
 10096                           u2811:
 10097  002CBA                     	goto	l3035
 10098  002CBA  EF62  F016         u2810:
 10099  002CBE                     	
 10100                           l3033:
 10101  002CBE                     	bcf	status,0
 10102  002CBE  90D8               	goto	l485
 10103  002CC0  EF67  F016         	
 10104                           l2287:
 10105  002CC4                     	
 10106                           l3035:
 10107  002CC4                     	bsf	status,0
 10108  002CC4  80D8               	goto	l485
 10109  002CC6  EF67  F016         	
 10110                           l2289:
 10111  002CCA                     	goto	l485
 10112  002CCA  EF67  F016         	
 10113                           l3037:
 10114  002CCE                     	line	19
 10115                           	
 10116                           l485:
 10117  002CCE                     	return	;funcret
 10118  002CCE  0012               	opt stack 0
 10119                           GLOBAL	__end_of___flge
 10120                           	__end_of___flge:
 10121  002CD0                     	signat	___flge,8312
 10122                           	global	_putsXLCD
 10123                           
 10124 ;; *************** function _putsXLCD *****************
 10125 ;; Defined at:
 10126 ;;		line 510 in file "nxlcd.c"
 10127 ;; Parameters:    Size  Location     Type
 10128 ;;  buffer          2    1[COMRAM] PTR unsigned char 
 10129 ;;		 -> STR_6(4), STR_5(4), STR_4(4), main@tempStr(16), 
 10130 ;;		 -> main@phStr(16), main@umidadeStr(16), 
 10131 ;; Auto vars:     Size  Location     Type
 10132 ;;		None
 10133 ;; Return value:  Size  Location     Type
 10134 ;;                  1    wreg      void 
 10135 ;; Registers used:
 10136 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10137 ;; Tracked objects:
 10138 ;;		On entry : 0/0
 10139 ;;		On exit  : 0/0
 10140 ;;		Unchanged: 0/0
 10141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10142 ;;      Params:         2       0       0       0       0       0       0       0       0
 10143 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10144 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10145 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10146 ;;Total ram usage:        2 bytes
 10147 ;; Hardware stack levels used:    1
 10148 ;; Hardware stack levels required when called:    2
 10149 ;; This function calls:
 10150 ;;		_BusyXLCD
 10151 ;;		_WriteDataXLCD
 10152 ;; This function is called by:
 10153 ;;		_main
 10154 ;; This function uses a non-reentrant model
 10155 ;;
 10156                           psect	text19,class=CODE,space=0,reloc=2,group=0
 10157                           	file	"nxlcd.c"
 10158                           	line	510
 10159                           global __ptext19
 10160                           __ptext19:
 10161  003280                     psect	text19
 10162                           	file	"nxlcd.c"
 10163                           	line	510
 10164                           	global	__size_of_putsXLCD
 10165                           	__size_of_putsXLCD	equ	__end_of_putsXLCD-_putsXLCD
 10166  0000                     	
 10167                           _putsXLCD:
 10168  003280                     ;incstack = 0
 10169                           	opt	stack 28
 10170                           	line	512
 10171                           	
 10172                           l3481:
 10173  003280                     ;nxlcd.c: 512: while(*buffer)
 10174                           	goto	l3489
 10175  003280  EF68  F019         	
 10176                           l152:
 10177  003284                     	line	514
 10178                           ;nxlcd.c: 513: {
 10179                           ;nxlcd.c: 514: while(BusyXLCD());
 10180                           	goto	l3483
 10181  003284  EF46  F019         	
 10182                           l154:
 10183  003288                     	goto	l3483
 10184  003288  EF46  F019         	
 10185                           l153:
 10186  00328C                     	
 10187                           l3483:
 10188  00328C                     	call	_BusyXLCD	;wreg free
 10189  00328C  EC0B  F01A         	iorlw	0
 10190  003290  0900               	btfss	status,2
 10191  003292  A4D8               	goto	u3551
 10192  003294  EF4E  F019         	goto	u3550
 10193  003298  EF50  F019         u3551:
 10194  00329C                     	goto	l3483
 10195  00329C  EF46  F019         u3550:
 10196  0032A0                     	goto	l3485
 10197  0032A0  EF52  F019         	
 10198                           l155:
 10199  0032A4                     	line	515
 10200                           	
 10201                           l3485:
 10202  0032A4                     ;nxlcd.c: 515: WriteDataXLCD(*buffer);
 10203                           	movff	(c:putsXLCD@buffer),tblptrl
 10204  0032A4  C002  FFF6         	movff	(c:putsXLCD@buffer+1),tblptrh
 10205  0032A8  C003  FFF7         	clrf	tblptru
 10206  0032AC  6AF8               	
 10207                           	movlw	high __ramtop-1
 10208  0032AE  0E07               	cpfsgt	tblptrh
 10209  0032B0  64F7               	bra	u3567
 10210  0032B2  D003               	tblrd	*
 10211  0032B4  0008               	
 10212                           	movf	tablat,w
 10213  0032B6  50F5               	bra	u3560
 10214  0032B8  D005               u3567:
 10215  0032BA                     	movff	tblptrl,fsr1l
 10216  0032BA  CFF6 FFE1          	movff	tblptrh,fsr1h
 10217  0032BE  CFF7 FFE2          	movf	indf1,w
 10218  0032C2  50E7               u3560:
 10219  0032C4                     	
 10220                           	call	_WriteDataXLCD
 10221  0032C4  ECCE  F01A         	line	516
 10222                           	
 10223                           l3487:
 10224  0032C8                     ;nxlcd.c: 516: buffer++;
 10225                           	infsnz	((c:putsXLCD@buffer)),c
 10226  0032C8  4A02               	incf	((c:putsXLCD@buffer+1)),c
 10227  0032CA  2A03               	goto	l3489
 10228  0032CC  EF68  F019         	line	517
 10229                           	
 10230                           l151:
 10231  0032D0                     	line	512
 10232                           	
 10233                           l3489:
 10234  0032D0                     	movff	(c:putsXLCD@buffer),tblptrl
 10235  0032D0  C002  FFF6         	movff	(c:putsXLCD@buffer+1),tblptrh
 10236  0032D4  C003  FFF7         	clrf	tblptru
 10237  0032D8  6AF8               	
 10238                           	movlw	high __ramtop-1
 10239  0032DA  0E07               	cpfsgt	tblptrh
 10240  0032DC  64F7               	bra	u3577
 10241  0032DE  D003               	tblrd	*
 10242  0032E0  0008               	
 10243                           	movf	tablat,w
 10244  0032E2  50F5               	bra	u3570
 10245  0032E4  D005               u3577:
 10246  0032E6                     	movff	tblptrl,fsr1l
 10247  0032E6  CFF6 FFE1          	movff	tblptrh,fsr1h
 10248  0032EA  CFF7 FFE2          	movf	indf1,w
 10249  0032EE  50E7               u3570:
 10250  0032F0                     	iorlw	0
 10251  0032F0  0900               	btfss	status,2
 10252  0032F2  A4D8               	goto	u3581
 10253  0032F4  EF7E  F019         	goto	u3580
 10254  0032F8  EF80  F019         u3581:
 10255  0032FC                     	goto	l3483
 10256  0032FC  EF46  F019         u3580:
 10257  003300                     	goto	l157
 10258  003300  EF82  F019         	
 10259                           l156:
 10260  003304                     	line	519
 10261                           ;nxlcd.c: 517: }
 10262                           ;nxlcd.c: 518: return;
 10263                           	
 10264                           l157:
 10265  003304                     	return	;funcret
 10266  003304  0012               	opt stack 0
 10267                           GLOBAL	__end_of_putsXLCD
 10268                           	__end_of_putsXLCD:
 10269  003306                     	signat	_putsXLCD,4217
 10270                           	global	_WriteDataXLCD
 10271                           
 10272 ;; *************** function _WriteDataXLCD *****************
 10273 ;; Defined at:
 10274 ;;		line 449 in file "nxlcd.c"
 10275 ;; Parameters:    Size  Location     Type
 10276 ;;  data            1    wreg     unsigned char 
 10277 ;; Auto vars:     Size  Location     Type
 10278 ;;  data            1    0[COMRAM] unsigned char 
 10279 ;; Return value:  Size  Location     Type
 10280 ;;                  1    wreg      void 
 10281 ;; Registers used:
 10282 ;;		wreg, status,2, status,0, cstack
 10283 ;; Tracked objects:
 10284 ;;		On entry : 0/0
 10285 ;;		On exit  : 0/0
 10286 ;;		Unchanged: 0/0
 10287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10288 ;;      Params:         0       0       0       0       0       0       0       0       0
 10289 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10290 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10291 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10292 ;;Total ram usage:        1 bytes
 10293 ;; Hardware stack levels used:    1
 10294 ;; Hardware stack levels required when called:    1
 10295 ;; This function calls:
 10296 ;;		_DelayFor18TCY
 10297 ;; This function is called by:
 10298 ;;		_putsXLCD
 10299 ;;		_putrsXLCD
 10300 ;; This function uses a non-reentrant model
 10301 ;;
 10302                           psect	text20,class=CODE,space=0,reloc=2,group=0
 10303                           	line	449
 10304                           global __ptext20
 10305                           __ptext20:
 10306  00359C                     psect	text20
 10307                           	file	"nxlcd.c"
 10308                           	line	449
 10309                           	global	__size_of_WriteDataXLCD
 10310                           	__size_of_WriteDataXLCD	equ	__end_of_WriteDataXLCD-_WriteDataXLCD
 10311  0000                     	
 10312                           _WriteDataXLCD:
 10313  00359C                     ;incstack = 0
 10314                           	opt	stack 28
 10315                           ;WriteDataXLCD@data stored from wreg
 10316                           	movwf	((c:WriteDataXLCD@data)),c
 10317  00359C  6E01               	line	464
 10318                           	
 10319                           l2793:
 10320  00359E                     ;nxlcd.c: 464: TRISD &= 0x0f;
 10321                           	movlw	(0Fh)&0ffh
 10322  00359E  0E0F               	andwf	((c:3989)),c	;volatile
 10323  0035A0  1695               	line	465
 10324                           ;nxlcd.c: 465: PORTD &= 0x0f;
 10325                           	movlw	(0Fh)&0ffh
 10326  0035A2  0E0F               	andwf	((c:3971)),c	;volatile
 10327  0035A4  1683               	line	466
 10328                           ;nxlcd.c: 466: PORTD |= data&0xf0;
 10329                           	movf	((c:WriteDataXLCD@data)),c,w
 10330  0035A6  5001               	andlw	low(0F0h)
 10331  0035A8  0BF0               	iorwf	((c:3971)),c	;volatile
 10332  0035AA  1283               	line	472
 10333                           	
 10334                           l2795:
 10335  0035AC                     ;nxlcd.c: 472: LATEbits.LATE0 = 1;
 10336                           	bsf	((c:3981)),c,0	;volatile
 10337  0035AC  808D               	line	473
 10338                           	
 10339                           l2797:
 10340  0035AE                     ;nxlcd.c: 473: LATEbits.LATE2 = 0;
 10341                           	bcf	((c:3981)),c,2	;volatile
 10342  0035AE  948D               	line	474
 10343                           	
 10344                           l2799:
 10345  0035B0                     ;nxlcd.c: 474: DelayFor18TCY();
 10346                           	call	_DelayFor18TCY	;wreg free
 10347  0035B0  EC73  F01B         	line	475
 10348                           	
 10349                           l2801:
 10350  0035B4                     ;nxlcd.c: 475: LATEbits.LATE1 = 1;
 10351                           	bsf	((c:3981)),c,1	;volatile
 10352  0035B4  828D               	line	476
 10353                           	
 10354                           l2803:
 10355  0035B6                     ;nxlcd.c: 476: DelayFor18TCY();
 10356                           	call	_DelayFor18TCY	;wreg free
 10357  0035B6  EC73  F01B         	line	477
 10358                           	
 10359                           l2805:
 10360  0035BA                     ;nxlcd.c: 477: LATEbits.LATE1 = 0;
 10361                           	bcf	((c:3981)),c,1	;volatile
 10362  0035BA  928D               	line	479
 10363                           ;nxlcd.c: 479: PORTD &= 0x0f;
 10364                           	movlw	(0Fh)&0ffh
 10365  0035BC  0E0F               	andwf	((c:3971)),c	;volatile
 10366  0035BE  1683               	line	480
 10367                           ;nxlcd.c: 480: PORTD |= ((data<<4)&0xf0);
 10368                           	swapf	((c:WriteDataXLCD@data)),c,w
 10369  0035C0  3801               	andlw	(0ffh shl 4) & 0ffh
 10370  0035C2  0BF0               	andlw	low(0F0h)
 10371  0035C4  0BF0               	iorwf	((c:3971)),c	;volatile
 10372  0035C6  1283               	line	485
 10373                           	
 10374                           l2807:
 10375  0035C8                     ;nxlcd.c: 485: DelayFor18TCY();
 10376                           	call	_DelayFor18TCY	;wreg free
 10377  0035C8  EC73  F01B         	line	486
 10378                           	
 10379                           l2809:
 10380  0035CC                     ;nxlcd.c: 486: LATEbits.LATE1 = 1;
 10381                           	bsf	((c:3981)),c,1	;volatile
 10382  0035CC  828D               	line	487
 10383                           	
 10384                           l2811:
 10385  0035CE                     ;nxlcd.c: 487: DelayFor18TCY();
 10386                           	call	_DelayFor18TCY	;wreg free
 10387  0035CE  EC73  F01B         	line	488
 10388                           	
 10389                           l2813:
 10390  0035D2                     ;nxlcd.c: 488: LATEbits.LATE1 = 0;
 10391                           	bcf	((c:3981)),c,1	;volatile
 10392  0035D2  928D               	line	490
 10393                           ;nxlcd.c: 490: TRISD |= 0xf0;
 10394                           	movlw	(0F0h)&0ffh
 10395  0035D4  0EF0               	iorwf	((c:3989)),c	;volatile
 10396  0035D6  1295               	goto	l148
 10397  0035D8  EFEE  F01A         	line	495
 10398                           	
 10399                           l2815:
 10400  0035DC                     	line	496
 10401                           ;nxlcd.c: 495: return;
 10402                           	
 10403                           l148:
 10404  0035DC                     	return	;funcret
 10405  0035DC  0012               	opt stack 0
 10406                           GLOBAL	__end_of_WriteDataXLCD
 10407                           	__end_of_WriteDataXLCD:
 10408  0035DE                     	signat	_WriteDataXLCD,4217
 10409                           	global	_controleTc
 10410                           
 10411 ;; *************** function _controleTc *****************
 10412 ;; Defined at:
 10413 ;;		line 50 in file "newmain.c"
 10414 ;; Parameters:    Size  Location     Type
 10415 ;;  Tc              2    0[COMRAM] int 
 10416 ;; Auto vars:     Size  Location     Type
 10417 ;;		None
 10418 ;; Return value:  Size  Location     Type
 10419 ;;                  1    wreg      void 
 10420 ;; Registers used:
 10421 ;;		wreg, status,2, status,0
 10422 ;; Tracked objects:
 10423 ;;		On entry : 0/0
 10424 ;;		On exit  : 0/0
 10425 ;;		Unchanged: 0/0
 10426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10427 ;;      Params:         2       0       0       0       0       0       0       0       0
 10428 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10429 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10430 ;;      Totals:         3       0       0       0       0       0       0       0       0
 10431 ;;Total ram usage:        3 bytes
 10432 ;; Hardware stack levels used:    1
 10433 ;; This function calls:
 10434 ;;		Nothing
 10435 ;; This function is called by:
 10436 ;;		_main
 10437 ;; This function uses a non-reentrant model
 10438 ;;
 10439                           psect	text21,class=CODE,space=0,reloc=2,group=0
 10440                           	file	"newmain.c"
 10441                           	line	50
 10442                           global __ptext21
 10443                           __ptext21:
 10444  003362                     psect	text21
 10445                           	file	"newmain.c"
 10446                           	line	50
 10447                           	global	__size_of_controleTc
 10448                           	__size_of_controleTc	equ	__end_of_controleTc-_controleTc
 10449  0000                     	
 10450                           _controleTc:
 10451  003362                     ;incstack = 0
 10452                           	opt	stack 30
 10453                           	line	51
 10454                           	
 10455                           l3193:
 10456  003362                     ;newmain.c: 51: if (Tc < limite_Tc) {
 10457                           		movf	((c:_limite_Tc)),c,w
 10458  003362  505B               	subwf	((c:controleTc@Tc)),c,w
 10459  003364  5C01               	movf	((c:controleTc@Tc+1)),c,w
 10460  003366  5002               	xorlw	80h
 10461  003368  0A80               	movwf	(??_controleTc+0+0)&0ffh,c
 10462  00336A  6E03               	movf	((c:_limite_Tc+1)),c,w
 10463  00336C  505C               	xorlw	80h
 10464  00336E  0A80               	subwfb	(??_controleTc+0+0)&0ffh,c,w
 10465  003370  5803               	btfsc	status,0
 10466  003372  B0D8               	goto	u3111
 10467  003374  EFBE  F019         	goto	u3110
 10468  003378  EFC0  F019         
 10469                           u3111:
 10470  00337C                     	goto	l63
 10471  00337C  EFDA  F019         u3110:
 10472  003380                     	goto	l3197
 10473  003380  EFC7  F019         	line	52
 10474                           	
 10475                           l3195:
 10476  003384                     ;newmain.c: 52: while(Tc < limite_Tc){PORTCbits.RC2 = 1;}
 10477                           	goto	l3197
 10478  003384  EFC7  F019         	
 10479                           l65:
 10480  003388                     	bsf	((c:3970)),c,2	;volatile
 10481  003388  8482               	goto	l3197
 10482  00338A  EFC7  F019         	
 10483                           l64:
 10484  00338E                     	
 10485                           l3197:
 10486  00338E                     		movf	((c:_limite_Tc)),c,w
 10487  00338E  505B               	subwf	((c:controleTc@Tc)),c,w
 10488  003390  5C01               	movf	((c:controleTc@Tc+1)),c,w
 10489  003392  5002               	xorlw	80h
 10490  003394  0A80               	movwf	(??_controleTc+0+0)&0ffh,c
 10491  003396  6E03               	movf	((c:_limite_Tc+1)),c,w
 10492  003398  505C               	xorlw	80h
 10493  00339A  0A80               	subwfb	(??_controleTc+0+0)&0ffh,c,w
 10494  00339C  5803               	btfss	status,0
 10495  00339E  A0D8               	goto	u3121
 10496  0033A0  EFD4  F019         	goto	u3120
 10497  0033A4  EFD6  F019         
 10498                           u3121:
 10499  0033A8                     	goto	l65
 10500  0033A8  EFC4  F019         u3120:
 10501  0033AC                     	goto	l68
 10502  0033AC  EFDD  F019         	
 10503                           l66:
 10504  0033B0                     	line	53
 10505                           ;newmain.c: 53: } else {
 10506                           	goto	l68
 10507  0033B0  EFDD  F019         	
 10508                           l63:
 10509  0033B4                     	line	54
 10510                           ;newmain.c: 54: PORTCbits.RC2 = 0;
 10511                           	bcf	((c:3970)),c,2	;volatile
 10512  0033B4  9482               	goto	l68
 10513  0033B6  EFDD  F019         	line	55
 10514                           	
 10515                           l67:
 10516  0033BA                     	line	56
 10517                           	
 10518                           l68:
 10519  0033BA                     	return	;funcret
 10520  0033BA  0012               	opt stack 0
 10521                           GLOBAL	__end_of_controleTc
 10522                           	__end_of_controleTc:
 10523  0033BC                     	signat	_controleTc,4217
 10524                           	global	_controlePh
 10525                           
 10526 ;; *************** function _controlePh *****************
 10527 ;; Defined at:
 10528 ;;		line 42 in file "newmain.c"
 10529 ;; Parameters:    Size  Location     Type
 10530 ;;  Ph              2    0[COMRAM] int 
 10531 ;; Auto vars:     Size  Location     Type
 10532 ;;		None
 10533 ;; Return value:  Size  Location     Type
 10534 ;;                  1    wreg      void 
 10535 ;; Registers used:
 10536 ;;		wreg, status,2, status,0
 10537 ;; Tracked objects:
 10538 ;;		On entry : 0/0
 10539 ;;		On exit  : 0/0
 10540 ;;		Unchanged: 0/0
 10541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10542 ;;      Params:         2       0       0       0       0       0       0       0       0
 10543 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10544 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10545 ;;      Totals:         3       0       0       0       0       0       0       0       0
 10546 ;;Total ram usage:        3 bytes
 10547 ;; Hardware stack levels used:    1
 10548 ;; This function calls:
 10549 ;;		Nothing
 10550 ;; This function is called by:
 10551 ;;		_main
 10552 ;; This function uses a non-reentrant model
 10553 ;;
 10554                           psect	text22,class=CODE,space=0,reloc=2,group=0
 10555                           	line	42
 10556                           global __ptext22
 10557                           __ptext22:
 10558  003306                     psect	text22
 10559                           	file	"newmain.c"
 10560                           	line	42
 10561                           	global	__size_of_controlePh
 10562                           	__size_of_controlePh	equ	__end_of_controlePh-_controlePh
 10563  0000                     	
 10564                           _controlePh:
 10565  003306                     ;incstack = 0
 10566                           	opt	stack 30
 10567                           	line	43
 10568                           	
 10569                           l3187:
 10570  003306                     ;newmain.c: 43: if (Ph < limite_Ph) {
 10571                           	movlb	0	; () banked
 10572  003306  0100               		movf	((_limite_Ph))&0ffh,w
 10573  003308  51B3               	subwf	((c:controlePh@Ph)),c,w
 10574  00330A  5C01               	movf	((c:controlePh@Ph+1)),c,w
 10575  00330C  5002               	xorlw	80h
 10576  00330E  0A80               	movwf	(??_controlePh+0+0)&0ffh,c
 10577  003310  6E03               	movf	((_limite_Ph+1))&0ffh,w
 10578  003312  51B4               	xorlw	80h
 10579  003314  0A80               	subwfb	(??_controlePh+0+0)&0ffh,c,w
 10580  003316  5803               	btfsc	status,0
 10581  003318  B0D8               	goto	u3091
 10582  00331A  EF91  F019         	goto	u3090
 10583  00331E  EF93  F019         
 10584                           u3091:
 10585  003322                     	goto	l55
 10586  003322  EFAD  F019         u3090:
 10587  003326                     	goto	l3191
 10588  003326  EF9A  F019         	line	44
 10589                           	
 10590                           l3189:; BSR set to: 0
 10591  00332A                     
 10592                           ;newmain.c: 44: while(Ph < limite_Ph){PORTCbits.RC1 = 1;}
 10593                           	goto	l3191
 10594  00332A  EF9A  F019         	
 10595                           l57:; BSR set to: 0
 10596  00332E                     
 10597                           	bsf	((c:3970)),c,1	;volatile
 10598  00332E  8282               	goto	l3191
 10599  003330  EF9A  F019         	
 10600                           l56:; BSR set to: 0
 10601  003334                     
 10602                           	
 10603                           l3191:; BSR set to: 0
 10604  003334                     
 10605                           		movf	((_limite_Ph))&0ffh,w
 10606  003334  51B3               	subwf	((c:controlePh@Ph)),c,w
 10607  003336  5C01               	movf	((c:controlePh@Ph+1)),c,w
 10608  003338  5002               	xorlw	80h
 10609  00333A  0A80               	movwf	(??_controlePh+0+0)&0ffh,c
 10610  00333C  6E03               	movf	((_limite_Ph+1))&0ffh,w
 10611  00333E  51B4               	xorlw	80h
 10612  003340  0A80               	subwfb	(??_controlePh+0+0)&0ffh,c,w
 10613  003342  5803               	btfss	status,0
 10614  003344  A0D8               	goto	u3101
 10615  003346  EFA7  F019         	goto	u3100
 10616  00334A  EFA9  F019         
 10617                           u3101:
 10618  00334E                     	goto	l57
 10619  00334E  EF97  F019         u3100:
 10620  003352                     	goto	l60
 10621  003352  EFB0  F019         	
 10622                           l58:; BSR set to: 0
 10623  003356                     
 10624                           	line	45
 10625                           ;newmain.c: 45: } else {
 10626                           	goto	l60
 10627  003356  EFB0  F019         	
 10628                           l55:; BSR set to: 0
 10629  00335A                     
 10630                           	line	46
 10631                           ;newmain.c: 46: PORTCbits.RC1 = 0;
 10632                           	bcf	((c:3970)),c,1	;volatile
 10633  00335A  9282               	goto	l60
 10634  00335C  EFB0  F019         	line	47
 10635                           	
 10636                           l59:; BSR set to: 0
 10637  003360                     
 10638                           	line	48
 10639                           	
 10640                           l60:; BSR set to: 0
 10641  003360                     
 10642                           	return	;funcret
 10643  003360  0012               	opt stack 0
 10644                           GLOBAL	__end_of_controlePh
 10645                           	__end_of_controlePh:
 10646  003362                     	signat	_controlePh,4217
 10647                           	global	_controleAgua
 10648                           
 10649 ;; *************** function _controleAgua *****************
 10650 ;; Defined at:
 10651 ;;		line 34 in file "newmain.c"
 10652 ;; Parameters:    Size  Location     Type
 10653 ;;  UR              2    0[COMRAM] int 
 10654 ;; Auto vars:     Size  Location     Type
 10655 ;;		None
 10656 ;; Return value:  Size  Location     Type
 10657 ;;                  1    wreg      void 
 10658 ;; Registers used:
 10659 ;;		wreg, status,2, status,0
 10660 ;; Tracked objects:
 10661 ;;		On entry : 0/0
 10662 ;;		On exit  : 0/0
 10663 ;;		Unchanged: 0/0
 10664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10665 ;;      Params:         2       0       0       0       0       0       0       0       0
 10666 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10667 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10668 ;;      Totals:         3       0       0       0       0       0       0       0       0
 10669 ;;Total ram usage:        3 bytes
 10670 ;; Hardware stack levels used:    1
 10671 ;; This function calls:
 10672 ;;		Nothing
 10673 ;; This function is called by:
 10674 ;;		_main
 10675 ;; This function uses a non-reentrant model
 10676 ;;
 10677                           psect	text23,class=CODE,space=0,reloc=2,group=0
 10678                           	line	34
 10679                           global __ptext23
 10680                           __ptext23:
 10681  0033BC                     psect	text23
 10682                           	file	"newmain.c"
 10683                           	line	34
 10684                           	global	__size_of_controleAgua
 10685                           	__size_of_controleAgua	equ	__end_of_controleAgua-_controleAgua
 10686  0000                     	
 10687                           _controleAgua:; BSR set to: 0
 10688  0033BC                     
 10689                           ;incstack = 0
 10690                           	opt	stack 30
 10691                           	line	35
 10692                           	
 10693                           l3181:
 10694  0033BC                     ;newmain.c: 35: if (UR < limite_UR) {
 10695                           		movf	((c:_limite_UR)),c,w
 10696  0033BC  505D               	subwf	((c:controleAgua@UR)),c,w
 10697  0033BE  5C01               	movf	((c:controleAgua@UR+1)),c,w
 10698  0033C0  5002               	xorlw	80h
 10699  0033C2  0A80               	movwf	(??_controleAgua+0+0)&0ffh,c
 10700  0033C4  6E03               	movf	((c:_limite_UR+1)),c,w
 10701  0033C6  505E               	xorlw	80h
 10702  0033C8  0A80               	subwfb	(??_controleAgua+0+0)&0ffh,c,w
 10703  0033CA  5803               	btfsc	status,0
 10704  0033CC  B0D8               	goto	u3071
 10705  0033CE  EFEB  F019         	goto	u3070
 10706  0033D2  EFED  F019         
 10707                           u3071:
 10708  0033D6                     	goto	l47
 10709  0033D6  EF07  F01A         u3070:
 10710  0033DA                     	goto	l3185
 10711  0033DA  EFF4  F019         	line	36
 10712                           	
 10713                           l3183:
 10714  0033DE                     ;newmain.c: 36: while(UR < limite_UR){PORTCbits.RC0 = 1;}
 10715                           	goto	l3185
 10716  0033DE  EFF4  F019         	
 10717                           l49:
 10718  0033E2                     	bsf	((c:3970)),c,0	;volatile
 10719  0033E2  8082               	goto	l3185
 10720  0033E4  EFF4  F019         	
 10721                           l48:
 10722  0033E8                     	
 10723                           l3185:
 10724  0033E8                     		movf	((c:_limite_UR)),c,w
 10725  0033E8  505D               	subwf	((c:controleAgua@UR)),c,w
 10726  0033EA  5C01               	movf	((c:controleAgua@UR+1)),c,w
 10727  0033EC  5002               	xorlw	80h
 10728  0033EE  0A80               	movwf	(??_controleAgua+0+0)&0ffh,c
 10729  0033F0  6E03               	movf	((c:_limite_UR+1)),c,w
 10730  0033F2  505E               	xorlw	80h
 10731  0033F4  0A80               	subwfb	(??_controleAgua+0+0)&0ffh,c,w
 10732  0033F6  5803               	btfss	status,0
 10733  0033F8  A0D8               	goto	u3081
 10734  0033FA  EF01  F01A         	goto	u3080
 10735  0033FE  EF03  F01A         
 10736                           u3081:
 10737  003402                     	goto	l49
 10738  003402  EFF1  F019         u3080:
 10739  003406                     	goto	l52
 10740  003406  EF0A  F01A         	
 10741                           l50:
 10742  00340A                     	line	37
 10743                           ;newmain.c: 37: } else {
 10744                           	goto	l52
 10745  00340A  EF0A  F01A         	
 10746                           l47:
 10747  00340E                     	line	38
 10748                           ;newmain.c: 38: PORTCbits.RC0 = 0;
 10749                           	bcf	((c:3970)),c,0	;volatile
 10750  00340E  9082               	goto	l52
 10751  003410  EF0A  F01A         	line	39
 10752                           	
 10753                           l51:
 10754  003414                     	line	40
 10755                           	
 10756                           l52:
 10757  003414                     	return	;funcret
 10758  003414  0012               	opt stack 0
 10759                           GLOBAL	__end_of_controleAgua
 10760                           	__end_of_controleAgua:
 10761  003416                     	signat	_controleAgua,4217
 10762                           	global	_OpenXLCD
 10763                           
 10764 ;; *************** function _OpenXLCD *****************
 10765 ;; Defined at:
 10766 ;;		line 41 in file "nxlcd.c"
 10767 ;; Parameters:    Size  Location     Type
 10768 ;;  lcdtype         1    wreg     unsigned char 
 10769 ;; Auto vars:     Size  Location     Type
 10770 ;;  lcdtype         1    1[COMRAM] unsigned char 
 10771 ;; Return value:  Size  Location     Type
 10772 ;;                  1    wreg      void 
 10773 ;; Registers used:
 10774 ;;		wreg, status,2, status,0, cstack
 10775 ;; Tracked objects:
 10776 ;;		On entry : 0/0
 10777 ;;		On exit  : 0/0
 10778 ;;		Unchanged: 0/0
 10779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10780 ;;      Params:         0       0       0       0       0       0       0       0       0
 10781 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10782 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10783 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10784 ;;Total ram usage:        1 bytes
 10785 ;; Hardware stack levels used:    1
 10786 ;; Hardware stack levels required when called:    2
 10787 ;; This function calls:
 10788 ;;		_BusyXLCD
 10789 ;;		_DelayPORXLCD
 10790 ;;		_DelayXLCD
 10791 ;;		_SetDDRamAddr
 10792 ;;		_WriteCmdXLCD
 10793 ;; This function is called by:
 10794 ;;		_main
 10795 ;; This function uses a non-reentrant model
 10796 ;;
 10797                           psect	text24,class=CODE,space=0,reloc=2,group=0
 10798                           	file	"nxlcd.c"
 10799                           	line	41
 10800                           global __ptext24
 10801                           __ptext24:
 10802  002E22                     psect	text24
 10803                           	file	"nxlcd.c"
 10804                           	line	41
 10805                           	global	__size_of_OpenXLCD
 10806                           	__size_of_OpenXLCD	equ	__end_of_OpenXLCD-_OpenXLCD
 10807  0000                     	
 10808                           _OpenXLCD:
 10809  002E22                     ;incstack = 0
 10810                           	opt	stack 28
 10811                           ;OpenXLCD@lcdtype stored from wreg
 10812                           	movwf	((c:OpenXLCD@lcdtype)),c
 10813  002E22  6E02               	line	50
 10814                           	
 10815                           l3199:
 10816  002E24                     ;nxlcd.c: 50: PORTD &= 0x0f;
 10817                           	movlw	(0Fh)&0ffh
 10818  002E24  0E0F               	andwf	((c:3971)),c	;volatile
 10819  002E26  1683               	line	51
 10820                           ;nxlcd.c: 51: TRISD &= 0x0F;
 10821                           	movlw	(0Fh)&0ffh
 10822  002E28  0E0F               	andwf	((c:3989)),c	;volatile
 10823  002E2A  1695               	line	57
 10824                           	
 10825                           l3201:
 10826  002E2C                     ;nxlcd.c: 57: TRISEbits.TRISE2 = 0;
 10827                           	bcf	((c:3990)),c,2	;volatile
 10828  002E2C  9496               	line	58
 10829                           	
 10830                           l3203:
 10831  002E2E                     ;nxlcd.c: 58: TRISEbits.TRISE0 = 0;
 10832                           	bcf	((c:3990)),c,0	;volatile
 10833  002E2E  9096               	line	59
 10834                           	
 10835                           l3205:
 10836  002E30                     ;nxlcd.c: 59: TRISEbits.TRISE1 = 0;
 10837                           	bcf	((c:3990)),c,1	;volatile
 10838  002E30  9296               	line	60
 10839                           	
 10840                           l3207:
 10841  002E32                     ;nxlcd.c: 60: LATEbits.LATE2 = 0;
 10842                           	bcf	((c:3981)),c,2	;volatile
 10843  002E32  948D               	line	61
 10844                           	
 10845                           l3209:
 10846  002E34                     ;nxlcd.c: 61: LATEbits.LATE0 = 0;
 10847                           	bcf	((c:3981)),c,0	;volatile
 10848  002E34  908D               	line	62
 10849                           	
 10850                           l3211:
 10851  002E36                     ;nxlcd.c: 62: LATEbits.LATE1 = 0;
 10852                           	bcf	((c:3981)),c,1	;volatile
 10853  002E36  928D               	line	65
 10854                           	
 10855                           l3213:
 10856  002E38                     ;nxlcd.c: 65: DelayPORXLCD();
 10857                           	call	_DelayPORXLCD	;wreg free
 10858  002E38  EC6B  F01B         	line	67
 10859                           	
 10860                           l3215:
 10861  002E3C                     ;nxlcd.c: 67: WriteCmdXLCD(0x30);
 10862                           	movlw	(030h)&0ffh
 10863  002E3C  0E30               	
 10864                           	call	_WriteCmdXLCD
 10865  002E3E  ECEF  F01A         	line	68
 10866                           	
 10867                           l3217:
 10868  002E42                     ;nxlcd.c: 68: DelayXLCD();
 10869                           	call	_DelayXLCD	;wreg free
 10870  002E42  EC62  F01B         	line	69
 10871                           	
 10872                           l3219:
 10873  002E46                     ;nxlcd.c: 69: DelayXLCD();
 10874                           	call	_DelayXLCD	;wreg free
 10875  002E46  EC62  F01B         	line	70
 10876                           	
 10877                           l3221:
 10878  002E4A                     ;nxlcd.c: 70: WriteCmdXLCD(0x30);
 10879                           	movlw	(030h)&0ffh
 10880  002E4A  0E30               	
 10881                           	call	_WriteCmdXLCD
 10882  002E4C  ECEF  F01A         	line	71
 10883                           	
 10884                           l3223:
 10885  002E50                     ;nxlcd.c: 71: DelayXLCD();
 10886                           	call	_DelayXLCD	;wreg free
 10887  002E50  EC62  F01B         	line	72
 10888                           	
 10889                           l3225:
 10890  002E54                     ;nxlcd.c: 72: DelayXLCD();
 10891                           	call	_DelayXLCD	;wreg free
 10892  002E54  EC62  F01B         	line	73
 10893                           	
 10894                           l3227:
 10895  002E58                     ;nxlcd.c: 73: WriteCmdXLCD(0x32);
 10896                           	movlw	(032h)&0ffh
 10897  002E58  0E32               	
 10898                           	call	_WriteCmdXLCD
 10899  002E5A  ECEF  F01A         	line	74
 10900                           ;nxlcd.c: 74: while( BusyXLCD() );
 10901                           	goto	l3229
 10902  002E5E  EF33  F017         	
 10903                           l105:
 10904  002E62                     	goto	l3229
 10905  002E62  EF33  F017         	
 10906                           l104:
 10907  002E66                     	
 10908                           l3229:
 10909  002E66                     	call	_BusyXLCD	;wreg free
 10910  002E66  EC0B  F01A         	iorlw	0
 10911  002E6A  0900               	btfss	status,2
 10912  002E6C  A4D8               	goto	u3131
 10913  002E6E  EF3B  F017         	goto	u3130
 10914  002E72  EF3D  F017         u3131:
 10915  002E76                     	goto	l3229
 10916  002E76  EF33  F017         u3130:
 10917  002E7A                     	goto	l3231
 10918  002E7A  EF43  F017         	
 10919                           l106:
 10920  002E7E                     	line	79
 10921                           ;nxlcd.c: 79: while(BusyXLCD());
 10922                           	goto	l3231
 10923  002E7E  EF43  F017         	
 10924                           l108:
 10925  002E82                     	goto	l3231
 10926  002E82  EF43  F017         	
 10927                           l107:
 10928  002E86                     	
 10929                           l3231:
 10930  002E86                     	call	_BusyXLCD	;wreg free
 10931  002E86  EC0B  F01A         	iorlw	0
 10932  002E8A  0900               	btfss	status,2
 10933  002E8C  A4D8               	goto	u3141
 10934  002E8E  EF4B  F017         	goto	u3140
 10935  002E92  EF4D  F017         u3141:
 10936  002E96                     	goto	l3231
 10937  002E96  EF43  F017         u3140:
 10938  002E9A                     	goto	l3233
 10939  002E9A  EF4F  F017         	
 10940                           l109:
 10941  002E9E                     	line	80
 10942                           	
 10943                           l3233:
 10944  002E9E                     ;nxlcd.c: 80: WriteCmdXLCD(lcdtype);
 10945                           	movf	((c:OpenXLCD@lcdtype)),c,w
 10946  002E9E  5002               	
 10947                           	call	_WriteCmdXLCD
 10948  002EA0  ECEF  F01A         	line	83
 10949                           ;nxlcd.c: 83: while(BusyXLCD());
 10950                           	goto	l3235
 10951  002EA4  EF56  F017         	
 10952                           l111:
 10953  002EA8                     	goto	l3235
 10954  002EA8  EF56  F017         	
 10955                           l110:
 10956  002EAC                     	
 10957                           l3235:
 10958  002EAC                     	call	_BusyXLCD	;wreg free
 10959  002EAC  EC0B  F01A         	iorlw	0
 10960  002EB0  0900               	btfss	status,2
 10961  002EB2  A4D8               	goto	u3151
 10962  002EB4  EF5E  F017         	goto	u3150
 10963  002EB8  EF60  F017         u3151:
 10964  002EBC                     	goto	l3235
 10965  002EBC  EF56  F017         u3150:
 10966  002EC0                     	goto	l3237
 10967  002EC0  EF62  F017         	
 10968                           l112:
 10969  002EC4                     	line	84
 10970                           	
 10971                           l3237:
 10972  002EC4                     ;nxlcd.c: 84: WriteCmdXLCD(0b00001011&0b00001101&0b00001110);
 10973                           	movlw	(08h)&0ffh
 10974  002EC4  0E08               	
 10975                           	call	_WriteCmdXLCD
 10976  002EC6  ECEF  F01A         	line	85
 10977                           ;nxlcd.c: 85: while(BusyXLCD());
 10978                           	goto	l3239
 10979  002ECA  EF69  F017         	
 10980                           l114:
 10981  002ECE                     	goto	l3239
 10982  002ECE  EF69  F017         	
 10983                           l113:
 10984  002ED2                     	
 10985                           l3239:
 10986  002ED2                     	call	_BusyXLCD	;wreg free
 10987  002ED2  EC0B  F01A         	iorlw	0
 10988  002ED6  0900               	btfss	status,2
 10989  002ED8  A4D8               	goto	u3161
 10990  002EDA  EF71  F017         	goto	u3160
 10991  002EDE  EF73  F017         u3161:
 10992  002EE2                     	goto	l3239
 10993  002EE2  EF69  F017         u3160:
 10994  002EE6                     	goto	l3241
 10995  002EE6  EF75  F017         	
 10996                           l115:
 10997  002EEA                     	line	86
 10998                           	
 10999                           l3241:
 11000  002EEA                     ;nxlcd.c: 86: WriteCmdXLCD(0b00001111&0b00001111&0b00001111);
 11001                           	movlw	(0Fh)&0ffh
 11002  002EEA  0E0F               	
 11003                           	call	_WriteCmdXLCD
 11004  002EEC  ECEF  F01A         	line	89
 11005                           ;nxlcd.c: 89: while(BusyXLCD());
 11006                           	goto	l3243
 11007  002EF0  EF7C  F017         	
 11008                           l117:
 11009  002EF4                     	goto	l3243
 11010  002EF4  EF7C  F017         	
 11011                           l116:
 11012  002EF8                     	
 11013                           l3243:
 11014  002EF8                     	call	_BusyXLCD	;wreg free
 11015  002EF8  EC0B  F01A         	iorlw	0
 11016  002EFC  0900               	btfss	status,2
 11017  002EFE  A4D8               	goto	u3171
 11018  002F00  EF84  F017         	goto	u3170
 11019  002F04  EF86  F017         u3171:
 11020  002F08                     	goto	l3243
 11021  002F08  EF7C  F017         u3170:
 11022  002F0C                     	goto	l3245
 11023  002F0C  EF88  F017         	
 11024                           l118:
 11025  002F10                     	line	90
 11026                           	
 11027                           l3245:
 11028  002F10                     ;nxlcd.c: 90: WriteCmdXLCD(0x01);
 11029                           	movlw	(01h)&0ffh
 11030  002F10  0E01               	
 11031                           	call	_WriteCmdXLCD
 11032  002F12  ECEF  F01A         	line	93
 11033                           ;nxlcd.c: 93: while(BusyXLCD());
 11034                           	goto	l3247
 11035  002F16  EF8F  F017         	
 11036                           l120:
 11037  002F1A                     	goto	l3247
 11038  002F1A  EF8F  F017         	
 11039                           l119:
 11040  002F1E                     	
 11041                           l3247:
 11042  002F1E                     	call	_BusyXLCD	;wreg free
 11043  002F1E  EC0B  F01A         	iorlw	0
 11044  002F22  0900               	btfss	status,2
 11045  002F24  A4D8               	goto	u3181
 11046  002F26  EF97  F017         	goto	u3180
 11047  002F2A  EF99  F017         u3181:
 11048  002F2E                     	goto	l3247
 11049  002F2E  EF8F  F017         u3180:
 11050  002F32                     	goto	l3249
 11051  002F32  EF9B  F017         	
 11052                           l121:
 11053  002F36                     	line	94
 11054                           	
 11055                           l3249:
 11056  002F36                     ;nxlcd.c: 94: WriteCmdXLCD(0b00000100);
 11057                           	movlw	(04h)&0ffh
 11058  002F36  0E04               	
 11059                           	call	_WriteCmdXLCD
 11060  002F38  ECEF  F01A         	line	97
 11061                           ;nxlcd.c: 97: while(BusyXLCD());
 11062                           	goto	l3251
 11063  002F3C  EFA2  F017         	
 11064                           l123:
 11065  002F40                     	goto	l3251
 11066  002F40  EFA2  F017         	
 11067                           l122:
 11068  002F44                     	
 11069                           l3251:
 11070  002F44                     	call	_BusyXLCD	;wreg free
 11071  002F44  EC0B  F01A         	iorlw	0
 11072  002F48  0900               	btfss	status,2
 11073  002F4A  A4D8               	goto	u3191
 11074  002F4C  EFAA  F017         	goto	u3190
 11075  002F50  EFAC  F017         u3191:
 11076  002F54                     	goto	l3251
 11077  002F54  EFA2  F017         u3190:
 11078  002F58                     	goto	l3253
 11079  002F58  EFAE  F017         	
 11080                           l124:
 11081  002F5C                     	line	98
 11082                           	
 11083                           l3253:
 11084  002F5C                     ;nxlcd.c: 98: SetDDRamAddr(0x80);
 11085                           	movlw	(080h)&0ffh
 11086  002F5C  0E80               	
 11087                           	call	_SetDDRamAddr
 11088  002F5E  ECAC  F01A         	goto	l125
 11089  002F62  EFB3  F017         	line	100
 11090                           	
 11091                           l3255:
 11092  002F66                     	line	101
 11093                           ;nxlcd.c: 100: return;
 11094                           	
 11095                           l125:
 11096  002F66                     	return	;funcret
 11097  002F66  0012               	opt stack 0
 11098                           GLOBAL	__end_of_OpenXLCD
 11099                           	__end_of_OpenXLCD:
 11100  002F68                     	signat	_OpenXLCD,4217
 11101                           	global	_WriteCmdXLCD
 11102                           
 11103 ;; *************** function _WriteCmdXLCD *****************
 11104 ;; Defined at:
 11105 ;;		line 388 in file "nxlcd.c"
 11106 ;; Parameters:    Size  Location     Type
 11107 ;;  cmd             1    wreg     unsigned char 
 11108 ;; Auto vars:     Size  Location     Type
 11109 ;;  cmd             1    0[COMRAM] unsigned char 
 11110 ;; Return value:  Size  Location     Type
 11111 ;;                  1    wreg      void 
 11112 ;; Registers used:
 11113 ;;		wreg, status,2, status,0, cstack
 11114 ;; Tracked objects:
 11115 ;;		On entry : 0/0
 11116 ;;		On exit  : 0/0
 11117 ;;		Unchanged: 0/0
 11118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11119 ;;      Params:         0       0       0       0       0       0       0       0       0
 11120 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11121 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11122 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11123 ;;Total ram usage:        1 bytes
 11124 ;; Hardware stack levels used:    1
 11125 ;; Hardware stack levels required when called:    1
 11126 ;; This function calls:
 11127 ;;		_DelayFor18TCY
 11128 ;; This function is called by:
 11129 ;;		_main
 11130 ;;		_OpenXLCD
 11131 ;; This function uses a non-reentrant model
 11132 ;;
 11133                           psect	text25,class=CODE,space=0,reloc=2,group=0
 11134                           	line	388
 11135                           global __ptext25
 11136                           __ptext25:
 11137  0035DE                     psect	text25
 11138                           	file	"nxlcd.c"
 11139                           	line	388
 11140                           	global	__size_of_WriteCmdXLCD
 11141                           	__size_of_WriteCmdXLCD	equ	__end_of_WriteCmdXLCD-_WriteCmdXLCD
 11142  0000                     	
 11143                           _WriteCmdXLCD:
 11144  0035DE                     ;incstack = 0
 11145                           	opt	stack 29
 11146                           ;WriteCmdXLCD@cmd stored from wreg
 11147                           	movwf	((c:WriteCmdXLCD@cmd)),c
 11148  0035DE  6E01               	line	403
 11149                           	
 11150                           l2705:
 11151  0035E0                     ;nxlcd.c: 403: TRISD &= 0x0f;
 11152                           	movlw	(0Fh)&0ffh
 11153  0035E0  0E0F               	andwf	((c:3989)),c	;volatile
 11154  0035E2  1695               	line	404
 11155                           ;nxlcd.c: 404: PORTD &= 0x0f;
 11156                           	movlw	(0Fh)&0ffh
 11157  0035E4  0E0F               	andwf	((c:3971)),c	;volatile
 11158  0035E6  1683               	line	405
 11159                           ;nxlcd.c: 405: PORTD |= cmd&0xf0;
 11160                           	movf	((c:WriteCmdXLCD@cmd)),c,w
 11161  0035E8  5001               	andlw	low(0F0h)
 11162  0035EA  0BF0               	iorwf	((c:3971)),c	;volatile
 11163  0035EC  1283               	line	411
 11164                           	
 11165                           l2707:
 11166  0035EE                     ;nxlcd.c: 411: LATEbits.LATE2 = 0;
 11167                           	bcf	((c:3981)),c,2	;volatile
 11168  0035EE  948D               	line	412
 11169                           	
 11170                           l2709:
 11171  0035F0                     ;nxlcd.c: 412: LATEbits.LATE0 = 0;
 11172                           	bcf	((c:3981)),c,0	;volatile
 11173  0035F0  908D               	line	413
 11174                           	
 11175                           l2711:
 11176  0035F2                     ;nxlcd.c: 413: DelayFor18TCY();
 11177                           	call	_DelayFor18TCY	;wreg free
 11178  0035F2  EC73  F01B         	line	414
 11179                           	
 11180                           l2713:
 11181  0035F6                     ;nxlcd.c: 414: LATEbits.LATE1 = 1;
 11182                           	bsf	((c:3981)),c,1	;volatile
 11183  0035F6  828D               	line	415
 11184                           	
 11185                           l2715:
 11186  0035F8                     ;nxlcd.c: 415: DelayFor18TCY();
 11187                           	call	_DelayFor18TCY	;wreg free
 11188  0035F8  EC73  F01B         	line	416
 11189                           	
 11190                           l2717:
 11191  0035FC                     ;nxlcd.c: 416: LATEbits.LATE1 = 0;
 11192                           	bcf	((c:3981)),c,1	;volatile
 11193  0035FC  928D               	line	418
 11194                           ;nxlcd.c: 418: PORTD &= 0x0f;
 11195                           	movlw	(0Fh)&0ffh
 11196  0035FE  0E0F               	andwf	((c:3971)),c	;volatile
 11197  003600  1683               	line	419
 11198                           ;nxlcd.c: 419: PORTD |= (cmd<<4)&0xf0;
 11199                           	swapf	((c:WriteCmdXLCD@cmd)),c,w
 11200  003602  3801               	andlw	(0ffh shl 4) & 0ffh
 11201  003604  0BF0               	andlw	low(0F0h)
 11202  003606  0BF0               	iorwf	((c:3971)),c	;volatile
 11203  003608  1283               	line	424
 11204                           	
 11205                           l2719:
 11206  00360A                     ;nxlcd.c: 424: DelayFor18TCY();
 11207                           	call	_DelayFor18TCY	;wreg free
 11208  00360A  EC73  F01B         	line	425
 11209                           	
 11210                           l2721:
 11211  00360E                     ;nxlcd.c: 425: LATEbits.LATE1 = 1;
 11212                           	bsf	((c:3981)),c,1	;volatile
 11213  00360E  828D               	line	426
 11214                           	
 11215                           l2723:
 11216  003610                     ;nxlcd.c: 426: DelayFor18TCY();
 11217                           	call	_DelayFor18TCY	;wreg free
 11218  003610  EC73  F01B         	line	427
 11219                           	
 11220                           l2725:
 11221  003614                     ;nxlcd.c: 427: LATEbits.LATE1 = 0;
 11222                           	bcf	((c:3981)),c,1	;volatile
 11223  003614  928D               	line	429
 11224                           ;nxlcd.c: 429: TRISD |= 0xf0;
 11225                           	movlw	(0F0h)&0ffh
 11226  003616  0EF0               	iorwf	((c:3989)),c	;volatile
 11227  003618  1295               	goto	l145
 11228  00361A  EF0F  F01B         	line	434
 11229                           	
 11230                           l2727:
 11231  00361E                     	line	435
 11232                           ;nxlcd.c: 434: return;
 11233                           	
 11234                           l145:
 11235  00361E                     	return	;funcret
 11236  00361E  0012               	opt stack 0
 11237                           GLOBAL	__end_of_WriteCmdXLCD
 11238                           	__end_of_WriteCmdXLCD:
 11239  003620                     	signat	_WriteCmdXLCD,4217
 11240                           	global	_SetDDRamAddr
 11241                           
 11242 ;; *************** function _SetDDRamAddr *****************
 11243 ;; Defined at:
 11244 ;;		line 171 in file "nxlcd.c"
 11245 ;; Parameters:    Size  Location     Type
 11246 ;;  DDaddr          1    wreg     unsigned char 
 11247 ;; Auto vars:     Size  Location     Type
 11248 ;;  DDaddr          1    0[COMRAM] unsigned char 
 11249 ;; Return value:  Size  Location     Type
 11250 ;;                  1    wreg      void 
 11251 ;; Registers used:
 11252 ;;		wreg, status,2, status,0, cstack
 11253 ;; Tracked objects:
 11254 ;;		On entry : 0/0
 11255 ;;		On exit  : 0/0
 11256 ;;		Unchanged: 0/0
 11257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11258 ;;      Params:         0       0       0       0       0       0       0       0       0
 11259 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11260 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11261 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11262 ;;Total ram usage:        1 bytes
 11263 ;; Hardware stack levels used:    1
 11264 ;; Hardware stack levels required when called:    1
 11265 ;; This function calls:
 11266 ;;		_DelayFor18TCY
 11267 ;; This function is called by:
 11268 ;;		_OpenXLCD
 11269 ;; This function uses a non-reentrant model
 11270 ;;
 11271                           psect	text26,class=CODE,space=0,reloc=2,group=0
 11272                           	line	171
 11273                           global __ptext26
 11274                           __ptext26:
 11275  003558                     psect	text26
 11276                           	file	"nxlcd.c"
 11277                           	line	171
 11278                           	global	__size_of_SetDDRamAddr
 11279                           	__size_of_SetDDRamAddr	equ	__end_of_SetDDRamAddr-_SetDDRamAddr
 11280  0000                     	
 11281                           _SetDDRamAddr:
 11282  003558                     ;incstack = 0
 11283                           	opt	stack 28
 11284                           ;SetDDRamAddr@DDaddr stored from wreg
 11285                           	movwf	((c:SetDDRamAddr@DDaddr)),c
 11286  003558  6E01               	line	186
 11287                           	
 11288                           l2769:
 11289  00355A                     ;nxlcd.c: 186: TRISD &= 0x0f;
 11290                           	movlw	(0Fh)&0ffh
 11291  00355A  0E0F               	andwf	((c:3989)),c	;volatile
 11292  00355C  1695               	line	187
 11293                           ;nxlcd.c: 187: PORTD &= 0x0f;
 11294                           	movlw	(0Fh)&0ffh
 11295  00355E  0E0F               	andwf	((c:3971)),c	;volatile
 11296  003560  1683               	line	188
 11297                           ;nxlcd.c: 188: PORTD |= ((DDaddr | 0b10000000) & 0xf0);
 11298                           	movf	((c:SetDDRamAddr@DDaddr)),c,w
 11299  003562  5001               	iorlw	low(080h)
 11300  003564  0980               	andlw	low(0F0h)
 11301  003566  0BF0               	iorwf	((c:3971)),c	;volatile
 11302  003568  1283               	line	194
 11303                           	
 11304                           l2771:
 11305  00356A                     ;nxlcd.c: 194: LATEbits.LATE2 = 0;
 11306                           	bcf	((c:3981)),c,2	;volatile
 11307  00356A  948D               	line	195
 11308                           	
 11309                           l2773:
 11310  00356C                     ;nxlcd.c: 195: LATEbits.LATE0 = 0;
 11311                           	bcf	((c:3981)),c,0	;volatile
 11312  00356C  908D               	line	196
 11313                           	
 11314                           l2775:
 11315  00356E                     ;nxlcd.c: 196: DelayFor18TCY();
 11316                           	call	_DelayFor18TCY	;wreg free
 11317  00356E  EC73  F01B         	line	197
 11318                           	
 11319                           l2777:
 11320  003572                     ;nxlcd.c: 197: LATEbits.LATE1 = 1;
 11321                           	bsf	((c:3981)),c,1	;volatile
 11322  003572  828D               	line	198
 11323                           	
 11324                           l2779:
 11325  003574                     ;nxlcd.c: 198: DelayFor18TCY();
 11326                           	call	_DelayFor18TCY	;wreg free
 11327  003574  EC73  F01B         	line	199
 11328                           	
 11329                           l2781:
 11330  003578                     ;nxlcd.c: 199: LATEbits.LATE1 = 0;
 11331                           	bcf	((c:3981)),c,1	;volatile
 11332  003578  928D               	line	201
 11333                           ;nxlcd.c: 201: PORTD &= 0x0f;
 11334                           	movlw	(0Fh)&0ffh
 11335  00357A  0E0F               	andwf	((c:3971)),c	;volatile
 11336  00357C  1683               	line	202
 11337                           ;nxlcd.c: 202: PORTD |= ((DDaddr<<4)&0xf0);
 11338                           	swapf	((c:SetDDRamAddr@DDaddr)),c,w
 11339  00357E  3801               	andlw	(0ffh shl 4) & 0ffh
 11340  003580  0BF0               	andlw	low(0F0h)
 11341  003582  0BF0               	iorwf	((c:3971)),c	;volatile
 11342  003584  1283               	line	207
 11343                           	
 11344                           l2783:
 11345  003586                     ;nxlcd.c: 207: DelayFor18TCY();
 11346                           	call	_DelayFor18TCY	;wreg free
 11347  003586  EC73  F01B         	line	208
 11348                           	
 11349                           l2785:
 11350  00358A                     ;nxlcd.c: 208: LATEbits.LATE1 = 1;
 11351                           	bsf	((c:3981)),c,1	;volatile
 11352  00358A  828D               	line	209
 11353                           	
 11354                           l2787:
 11355  00358C                     ;nxlcd.c: 209: DelayFor18TCY();
 11356                           	call	_DelayFor18TCY	;wreg free
 11357  00358C  EC73  F01B         	line	210
 11358                           	
 11359                           l2789:
 11360  003590                     ;nxlcd.c: 210: LATEbits.LATE1 = 0;
 11361                           	bcf	((c:3981)),c,1	;volatile
 11362  003590  928D               	line	212
 11363                           ;nxlcd.c: 212: TRISD |= 0xf0;
 11364                           	movlw	(0F0h)&0ffh
 11365  003592  0EF0               	iorwf	((c:3989)),c	;volatile
 11366  003594  1295               	goto	l131
 11367  003596  EFCD  F01A         	line	217
 11368                           	
 11369                           l2791:
 11370  00359A                     	line	218
 11371                           ;nxlcd.c: 217: return;
 11372                           	
 11373                           l131:
 11374  00359A                     	return	;funcret
 11375  00359A  0012               	opt stack 0
 11376                           GLOBAL	__end_of_SetDDRamAddr
 11377                           	__end_of_SetDDRamAddr:
 11378  00359C                     	signat	_SetDDRamAddr,4217
 11379                           	global	_DelayXLCD
 11380                           
 11381 ;; *************** function _DelayXLCD *****************
 11382 ;; Defined at:
 11383 ;;		line 22 in file "nxlcd.c"
 11384 ;; Parameters:    Size  Location     Type
 11385 ;;		None
 11386 ;; Auto vars:     Size  Location     Type
 11387 ;;		None
 11388 ;; Return value:  Size  Location     Type
 11389 ;;                  1    wreg      void 
 11390 ;; Registers used:
 11391 ;;		wreg
 11392 ;; Tracked objects:
 11393 ;;		On entry : 0/0
 11394 ;;		On exit  : 0/0
 11395 ;;		Unchanged: 0/0
 11396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11397 ;;      Params:         0       0       0       0       0       0       0       0       0
 11398 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11399 ;;      Temps:          1       0       0       0       0       0       0       0       0
 11400 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11401 ;;Total ram usage:        1 bytes
 11402 ;; Hardware stack levels used:    1
 11403 ;; This function calls:
 11404 ;;		Nothing
 11405 ;; This function is called by:
 11406 ;;		_OpenXLCD
 11407 ;; This function uses a non-reentrant model
 11408 ;;
 11409                           psect	text27,class=CODE,space=0,reloc=2,group=0
 11410                           	line	22
 11411                           global __ptext27
 11412                           __ptext27:
 11413  0036C4                     psect	text27
 11414                           	file	"nxlcd.c"
 11415                           	line	22
 11416                           	global	__size_of_DelayXLCD
 11417                           	__size_of_DelayXLCD	equ	__end_of_DelayXLCD-_DelayXLCD
 11418  0000                     	
 11419                           _DelayXLCD:
 11420  0036C4                     ;incstack = 0
 11421                           	opt	stack 29
 11422                           	line	24
 11423                           	
 11424                           l2731:
 11425  0036C4                     ;nxlcd.c: 24: _delay((unsigned long)((5)*(20000000/4000.0)));
 11426                           	opt asmopt_push
 11427                           opt asmopt_off
 11428                           movlw	33
 11429  0036C4  0E21               movwf	(??_DelayXLCD+0+0)&0ffh,c,f
 11430  0036C6  6E01               	movlw	118
 11431  0036C8  0E76               u3637:
 11432  0036CA                     decfsz	wreg,f
 11433  0036CA  2EE8               	bra	u3637
 11434  0036CC  D7FE               	decfsz	(??_DelayXLCD+0+0)&0ffh,c,f
 11435  0036CE  2E01               	bra	u3637
 11436  0036D0  D7FC               	nop2
 11437  0036D2  D000               opt asmopt_pop
 11438                           
 11439                           	line	25
 11440                           	
 11441                           l101:
 11442  0036D4                     	return	;funcret
 11443  0036D4  0012               	opt stack 0
 11444                           GLOBAL	__end_of_DelayXLCD
 11445                           	__end_of_DelayXLCD:
 11446  0036D6                     	signat	_DelayXLCD,89
 11447                           	global	_DelayPORXLCD
 11448                           
 11449 ;; *************** function _DelayPORXLCD *****************
 11450 ;; Defined at:
 11451 ;;		line 17 in file "nxlcd.c"
 11452 ;; Parameters:    Size  Location     Type
 11453 ;;		None
 11454 ;; Auto vars:     Size  Location     Type
 11455 ;;		None
 11456 ;; Return value:  Size  Location     Type
 11457 ;;                  1    wreg      void 
 11458 ;; Registers used:
 11459 ;;		wreg
 11460 ;; Tracked objects:
 11461 ;;		On entry : 0/0
 11462 ;;		On exit  : 0/0
 11463 ;;		Unchanged: 0/0
 11464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11465 ;;      Params:         0       0       0       0       0       0       0       0       0
 11466 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11467 ;;      Temps:          1       0       0       0       0       0       0       0       0
 11468 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11469 ;;Total ram usage:        1 bytes
 11470 ;; Hardware stack levels used:    1
 11471 ;; This function calls:
 11472 ;;		Nothing
 11473 ;; This function is called by:
 11474 ;;		_OpenXLCD
 11475 ;; This function uses a non-reentrant model
 11476 ;;
 11477                           psect	text28,class=CODE,space=0,reloc=2,group=0
 11478                           	line	17
 11479                           global __ptext28
 11480                           __ptext28:
 11481  0036D6                     psect	text28
 11482                           	file	"nxlcd.c"
 11483                           	line	17
 11484                           	global	__size_of_DelayPORXLCD
 11485                           	__size_of_DelayPORXLCD	equ	__end_of_DelayPORXLCD-_DelayPORXLCD
 11486  0000                     	
 11487                           _DelayPORXLCD:
 11488  0036D6                     ;incstack = 0
 11489                           	opt	stack 29
 11490                           	line	19
 11491                           	
 11492                           l2729:
 11493  0036D6                     ;nxlcd.c: 19: _delay((unsigned long)((15)*(20000000/4000.0)));
 11494                           	opt asmopt_push
 11495                           opt asmopt_off
 11496                           movlw	98
 11497  0036D6  0E62               movwf	(??_DelayPORXLCD+0+0)&0ffh,c,f
 11498  0036D8  6E01               	movlw	102
 11499  0036DA  0E66               u3647:
 11500  0036DC                     decfsz	wreg,f
 11501  0036DC  2EE8               	bra	u3647
 11502  0036DE  D7FE               	decfsz	(??_DelayPORXLCD+0+0)&0ffh,c,f
 11503  0036E0  2E01               	bra	u3647
 11504  0036E2  D7FC               opt asmopt_pop
 11505                           
 11506                           	line	20
 11507                           	
 11508                           l98:
 11509  0036E4                     	return	;funcret
 11510  0036E4  0012               	opt stack 0
 11511                           GLOBAL	__end_of_DelayPORXLCD
 11512                           	__end_of_DelayPORXLCD:
 11513  0036E6                     	signat	_DelayPORXLCD,89
 11514                           	global	_BusyXLCD
 11515                           
 11516 ;; *************** function _BusyXLCD *****************
 11517 ;; Defined at:
 11518 ;;		line 227 in file "nxlcd.c"
 11519 ;; Parameters:    Size  Location     Type
 11520 ;;		None
 11521 ;; Auto vars:     Size  Location     Type
 11522 ;;		None
 11523 ;; Return value:  Size  Location     Type
 11524 ;;                  1    wreg      unsigned char 
 11525 ;; Registers used:
 11526 ;;		wreg, cstack
 11527 ;; Tracked objects:
 11528 ;;		On entry : 0/0
 11529 ;;		On exit  : 0/0
 11530 ;;		Unchanged: 0/0
 11531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11532 ;;      Params:         0       0       0       0       0       0       0       0       0
 11533 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11534 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11535 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11536 ;;Total ram usage:        0 bytes
 11537 ;; Hardware stack levels used:    1
 11538 ;; Hardware stack levels required when called:    1
 11539 ;; This function calls:
 11540 ;;		_DelayFor18TCY
 11541 ;; This function is called by:
 11542 ;;		_OpenXLCD
 11543 ;;		_putsXLCD
 11544 ;;		_putrsXLCD
 11545 ;; This function uses a non-reentrant model
 11546 ;;
 11547                           psect	text29,class=CODE,space=0,reloc=2,group=0
 11548                           	line	227
 11549                           global __ptext29
 11550                           __ptext29:
 11551  003416                     psect	text29
 11552                           	file	"nxlcd.c"
 11553                           	line	227
 11554                           	global	__size_of_BusyXLCD
 11555                           	__size_of_BusyXLCD	equ	__end_of_BusyXLCD-_BusyXLCD
 11556  0000                     	
 11557                           _BusyXLCD:
 11558  003416                     ;incstack = 0
 11559                           	opt	stack 28
 11560                           	line	229
 11561                           	
 11562                           l2733:
 11563  003416                     ;nxlcd.c: 229: LATEbits.LATE2 = 1;
 11564                           	bsf	((c:3981)),c,2	;volatile
 11565  003416  848D               	line	230
 11566                           ;nxlcd.c: 230: LATEbits.LATE0 = 0;
 11567                           	bcf	((c:3981)),c,0	;volatile
 11568  003418  908D               	line	231
 11569                           	
 11570                           l2735:
 11571  00341A                     ;nxlcd.c: 231: DelayFor18TCY();
 11572                           	call	_DelayFor18TCY	;wreg free
 11573  00341A  EC73  F01B         	line	232
 11574                           	
 11575                           l2737:
 11576  00341E                     ;nxlcd.c: 232: LATEbits.LATE1 = 1;
 11577                           	bsf	((c:3981)),c,1	;volatile
 11578  00341E  828D               	line	233
 11579                           ;nxlcd.c: 233: DelayFor18TCY();
 11580                           	call	_DelayFor18TCY	;wreg free
 11581  003420  EC73  F01B         	line	249
 11582                           	
 11583                           l2739:
 11584  003424                     ;nxlcd.c: 249: if(PORTD&0x80)
 11585                           	
 11586                           	btfss	((c:3971)),c,(7)&7	;volatile
 11587  003424  AE83               	goto	u2511
 11588  003426  EF17  F01A         	goto	u2510
 11589  00342A  EF19  F01A         u2511:
 11590  00342E                     	goto	l134
 11591  00342E  EF28  F01A         u2510:
 11592  003432                     	line	254
 11593                           	
 11594                           l2741:
 11595  003432                     ;nxlcd.c: 253: {
 11596                           ;nxlcd.c: 254: LATEbits.LATE1 = 0;
 11597                           	bcf	((c:3981)),c,1	;volatile
 11598  003432  928D               	line	255
 11599                           	
 11600                           l2743:
 11601  003434                     ;nxlcd.c: 255: DelayFor18TCY();
 11602                           	call	_DelayFor18TCY	;wreg free
 11603  003434  EC73  F01B         	line	256
 11604                           	
 11605                           l2745:
 11606  003438                     ;nxlcd.c: 256: LATEbits.LATE1 = 1;
 11607                           	bsf	((c:3981)),c,1	;volatile
 11608  003438  828D               	line	257
 11609                           ;nxlcd.c: 257: DelayFor18TCY();
 11610                           	call	_DelayFor18TCY	;wreg free
 11611  00343A  EC73  F01B         	line	258
 11612                           	
 11613                           l2747:
 11614  00343E                     ;nxlcd.c: 258: LATEbits.LATE1 = 0;
 11615                           	bcf	((c:3981)),c,1	;volatile
 11616  00343E  928D               	line	259
 11617                           	
 11618                           l2749:
 11619  003440                     ;nxlcd.c: 259: LATEbits.LATE2 = 0;
 11620                           	bcf	((c:3981)),c,2	;volatile
 11621  003440  948D               	line	260
 11622                           	
 11623                           l2751:
 11624  003442                     ;nxlcd.c: 260: return 1;
 11625                           	movlw	(01h)&0ffh
 11626  003442  0E01               	goto	l135
 11627  003444  EF35  F01A         	
 11628                           l2753:
 11629  003448                     	goto	l135
 11630  003448  EF35  F01A         	line	261
 11631                           	
 11632                           l2755:
 11633  00344C                     ;nxlcd.c: 261: }
 11634                           	goto	l135
 11635  00344C  EF35  F01A         	line	262
 11636                           	
 11637                           l134:
 11638  003450                     	line	264
 11639                           ;nxlcd.c: 262: else
 11640                           ;nxlcd.c: 263: {
 11641                           ;nxlcd.c: 264: LATEbits.LATE1 = 0;
 11642                           	bcf	((c:3981)),c,1	;volatile
 11643  003450  928D               	line	265
 11644                           	
 11645                           l2757:
 11646  003452                     ;nxlcd.c: 265: DelayFor18TCY();
 11647                           	call	_DelayFor18TCY	;wreg free
 11648  003452  EC73  F01B         	line	266
 11649                           	
 11650                           l2759:
 11651  003456                     ;nxlcd.c: 266: LATEbits.LATE1 = 1;
 11652                           	bsf	((c:3981)),c,1	;volatile
 11653  003456  828D               	line	267
 11654                           ;nxlcd.c: 267: DelayFor18TCY();
 11655                           	call	_DelayFor18TCY	;wreg free
 11656  003458  EC73  F01B         	line	268
 11657                           	
 11658                           l2761:
 11659  00345C                     ;nxlcd.c: 268: LATEbits.LATE1 = 0;
 11660                           	bcf	((c:3981)),c,1	;volatile
 11661  00345C  928D               	line	269
 11662                           	
 11663                           l2763:
 11664  00345E                     ;nxlcd.c: 269: LATEbits.LATE2 = 0;
 11665                           	bcf	((c:3981)),c,2	;volatile
 11666  00345E  948D               	line	270
 11667                           	
 11668                           l2765:
 11669  003460                     ;nxlcd.c: 270: return 0;
 11670                           	movlw	(0)&0ffh
 11671  003460  0E00               	goto	l135
 11672  003462  EF35  F01A         	
 11673                           l2767:
 11674  003466                     	goto	l135
 11675  003466  EF35  F01A         	line	271
 11676                           	
 11677                           l136:
 11678  00346A                     	line	273
 11679                           	
 11680                           l135:
 11681  00346A                     	return	;funcret
 11682  00346A  0012               	opt stack 0
 11683                           GLOBAL	__end_of_BusyXLCD
 11684                           	__end_of_BusyXLCD:
 11685  00346C                     	signat	_BusyXLCD,89
 11686                           	global	_DelayFor18TCY
 11687                           
 11688 ;; *************** function _DelayFor18TCY *****************
 11689 ;; Defined at:
 11690 ;;		line 12 in file "nxlcd.c"
 11691 ;; Parameters:    Size  Location     Type
 11692 ;;		None
 11693 ;; Auto vars:     Size  Location     Type
 11694 ;;		None
 11695 ;; Return value:  Size  Location     Type
 11696 ;;                  1    wreg      void 
 11697 ;; Registers used:
 11698 ;;		wreg
 11699 ;; Tracked objects:
 11700 ;;		On entry : 0/0
 11701 ;;		On exit  : 0/0
 11702 ;;		Unchanged: 0/0
 11703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11704 ;;      Params:         0       0       0       0       0       0       0       0       0
 11705 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11706 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11707 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11708 ;;Total ram usage:        0 bytes
 11709 ;; Hardware stack levels used:    1
 11710 ;; This function calls:
 11711 ;;		Nothing
 11712 ;; This function is called by:
 11713 ;;		_SetDDRamAddr
 11714 ;;		_BusyXLCD
 11715 ;;		_WriteCmdXLCD
 11716 ;;		_WriteDataXLCD
 11717 ;;		_SetCGRamAddr
 11718 ;;		_ReadAddrXLCD
 11719 ;;		_ReadDataXLCD
 11720 ;; This function uses a non-reentrant model
 11721 ;;
 11722                           psect	text30,class=CODE,space=0,reloc=2,group=0
 11723                           	line	12
 11724                           global __ptext30
 11725                           __ptext30:
 11726  0036E6                     psect	text30
 11727                           	file	"nxlcd.c"
 11728                           	line	12
 11729                           	global	__size_of_DelayFor18TCY
 11730                           	__size_of_DelayFor18TCY	equ	__end_of_DelayFor18TCY-_DelayFor18TCY
 11731  0000                     	
 11732                           _DelayFor18TCY:
 11733  0036E6                     ;incstack = 0
 11734                           	opt	stack 28
 11735                           	line	14
 11736                           	
 11737                           l2291:
 11738  0036E6                     ;nxlcd.c: 14: _delay((unsigned long)((20)*(20000000/4000000.0)));
 11739                           	opt asmopt_push
 11740                           opt asmopt_off
 11741                           	movlw	33
 11742  0036E6  0E21               u3657:
 11743  0036E8                     decfsz	wreg,f
 11744  0036E8  2EE8               	bra	u3657
 11745  0036EA  D7FE               	nop
 11746  0036EC  F000               opt asmopt_pop
 11747                           
 11748                           	line	15
 11749                           	
 11750                           l95:
 11751  0036EE                     	return	;funcret
 11752  0036EE  0012               	opt stack 0
 11753                           GLOBAL	__end_of_DelayFor18TCY
 11754                           	__end_of_DelayFor18TCY:
 11755  0036F0                     	signat	_DelayFor18TCY,89
 11756                           	global	_LEADC
 11757                           
 11758 ;; *************** function _LEADC *****************
 11759 ;; Defined at:
 11760 ;;		line 26 in file "newmain.c"
 11761 ;; Parameters:    Size  Location     Type
 11762 ;;  channel         1    wreg     unsigned char 
 11763 ;; Auto vars:     Size  Location     Type
 11764 ;;  channel         1    4[COMRAM] unsigned char 
 11765 ;; Return value:  Size  Location     Type
 11766 ;;                  2    0[COMRAM] int 
 11767 ;; Registers used:
 11768 ;;		wreg, status,2, status,0
 11769 ;; Tracked objects:
 11770 ;;		On entry : 0/0
 11771 ;;		On exit  : 0/0
 11772 ;;		Unchanged: 0/0
 11773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11774 ;;      Params:         2       0       0       0       0       0       0       0       0
 11775 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11776 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11777 ;;      Totals:         5       0       0       0       0       0       0       0       0
 11778 ;;Total ram usage:        5 bytes
 11779 ;; Hardware stack levels used:    1
 11780 ;; This function calls:
 11781 ;;		Nothing
 11782 ;; This function is called by:
 11783 ;;		_main
 11784 ;; This function uses a non-reentrant model
 11785 ;;
 11786                           psect	text31,class=CODE,space=0,reloc=2,group=0
 11787                           	file	"newmain.c"
 11788                           	line	26
 11789                           global __ptext31
 11790                           __ptext31:
 11791  00346C                     psect	text31
 11792                           	file	"newmain.c"
 11793                           	line	26
 11794                           	global	__size_of_LEADC
 11795                           	__size_of_LEADC	equ	__end_of_LEADC-_LEADC
 11796  0000                     	
 11797                           _LEADC:
 11798  00346C                     ;incstack = 0
 11799                           	opt	stack 30
 11800                           ;LEADC@channel stored from wreg
 11801                           	movwf	((c:LEADC@channel)),c
 11802  00346C  6E05               	line	27
 11803                           	
 11804                           l3171:
 11805  00346E                     ;newmain.c: 27: ADCON0bits.CHS = channel;
 11806                           	movff	(c:LEADC@channel),??_LEADC+0+0
 11807  00346E  C005  F003         	rlncf	(??_LEADC+0+0),c
 11808  003472  4603               	rlncf	(??_LEADC+0+0),c
 11809  003474  4603               	movf	((c:4034)),c,w	;volatile
 11810  003476  50C2               	xorwf	(??_LEADC+0+0),c,w
 11811  003478  1803               	andlw	not (((1<<4)-1)<<2)
 11812  00347A  0BC3               	xorwf	(??_LEADC+0+0),c,w
 11813  00347C  1803               	movwf	((c:4034)),c	;volatile
 11814  00347E  6EC2               	line	28
 11815                           	
 11816                           l3173:
 11817  003480                     ;newmain.c: 28: _delay((unsigned long)((2)*(20000000/4000.0)));
 11818                           	opt asmopt_push
 11819                           opt asmopt_off
 11820                           movlw	13
 11821  003480  0E0D               movwf	(??_LEADC+0+0)&0ffh,c,f
 11822  003482  6E03               	movlw	252
 11823  003484  0EFC               u3667:
 11824  003486                     decfsz	wreg,f
 11825  003486  2EE8               	bra	u3667
 11826  003488  D7FE               	decfsz	(??_LEADC+0+0)&0ffh,c,f
 11827  00348A  2E03               	bra	u3667
 11828  00348C  D7FC               opt asmopt_pop
 11829                           
 11830                           	line	29
 11831                           	
 11832                           l3175:
 11833  00348E                     ;newmain.c: 29: ADCON0bits.GO = 1;
 11834                           	bsf	((c:4034)),c,1	;volatile
 11835  00348E  82C2               	line	30
 11836                           ;newmain.c: 30: while (ADCON0bits.GO);
 11837                           	goto	l41
 11838  003490  EF4A  F01A         	
 11839                           l42:
 11840  003494                     	
 11841                           l41:
 11842  003494                     	btfsc	((c:4034)),c,1	;volatile
 11843  003494  B2C2               	goto	u3061
 11844  003496  EF4F  F01A         	goto	u3060
 11845  00349A  EF51  F01A         u3061:
 11846  00349E                     	goto	l41
 11847  00349E  EF4A  F01A         u3060:
 11848  0034A2                     	goto	l3177
 11849  0034A2  EF53  F01A         	
 11850                           l43:
 11851  0034A6                     	line	31
 11852                           	
 11853                           l3177:
 11854  0034A6                     ;newmain.c: 31: return (ADRESH << 8) + ADRESL;
 11855                           	movf	((c:4036)),c,w	;volatile
 11856  0034A6  50C4               	movwf	(??_LEADC+0+0+1)&0ffh,c
 11857  0034A8  6E04               	clrf	(??_LEADC+0+0)&0ffh,c
 11858  0034AA  6A03               	movf	((c:4035)),c,w	;volatile
 11859  0034AC  50C3               	addwf	(??_LEADC+0+0),c,w
 11860  0034AE  2403               	movwf	((c:?_LEADC)),c
 11861  0034B0  6E01               	movlw	0
 11862  0034B2  0E00               	addwfc	(??_LEADC+0+1),c,w
 11863  0034B4  2004               	movwf	1+((c:?_LEADC)),c
 11864  0034B6  6E02               	goto	l44
 11865  0034B8  EF5E  F01A         	
 11866                           l3179:
 11867  0034BC                     	line	32
 11868                           	
 11869                           l44:
 11870  0034BC                     	return	;funcret
 11871  0034BC  0012               	opt stack 0
 11872                           GLOBAL	__end_of_LEADC
 11873                           	__end_of_LEADC:
 11874  0034BE                     	signat	_LEADC,4218
 11875                           psect	smallconst
 11876                           	db 0	; dummy byte at the end
 11877  0008AF  00                 	global	__smallconst
 11878                           	global	__mediumconst
 11879                           	GLOBAL	__activetblptr
 11880                           __activetblptr	EQU	2
 11881  0000                     	psect	intsave_regs,class=BIGRAM,space=1,noexec
 11882                           	PSECT	rparam,class=COMRAM,space=1,noexec
 11883                           	GLOBAL	__Lrparam
 11884                           	FNCONF	rparam,??,?
 11885                           	GLOBAL	___rparam_used
 11886                           	___rparam_used EQU 1
 11887  0000                     	GLOBAL	___param_bank
 11888                           	___param_bank EQU 0
 11889  0000                     GLOBAL	__Lparam, __Hparam
 11890                           GLOBAL	__Lrparam, __Hrparam
 11891                           __Lparam	EQU	__Lrparam
 11892  0000                     __Hparam	EQU	__Hrparam
 11893  0000                     	end


Data Sizes:
    Strings     30
    Constant    144
    Data        6
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     90      94
    BANK0           160     77      85
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 1
		 -> sprintf@c(BANK0[1]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_3(CODE[6]), STR_2(CODE[5]), STR_1(CODE[7]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 16
		 -> main@tempStr(BANK0[16]), main@phStr(BANK0[16]), main@umidadeStr(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    putsXLCD@buffer	PTR unsigned char  size(2) Largest target is 16
		 -> STR_6(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), main@tempStr(BANK0[16]), 
		 -> main@phStr(BANK0[16]), main@umidadeStr(BANK0[16]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___awdiv->___awmod
    ___awdiv->___wmul
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _putsXLCD->_WriteDataXLCD
    _OpenXLCD->_DelayPORXLCD
    _OpenXLCD->_DelayXLCD
    _OpenXLCD->_SetDDRamAddr
    _OpenXLCD->_WriteCmdXLCD

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                50    50      0   38747
                                             88 COMRAM     2     2      0
                                             29 BANK0     48    48      0
                              _LEADC
                           _OpenXLCD
                       _WriteCmdXLCD
                            ___awdiv
                             ___wmul
                       _controleAgua
                         _controlePh
                         _controleTc
                           _putsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             40    34      6   34273
                                             80 COMRAM     8     2      6
                                              0 BANK0     29    29      0
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                                9     5      4    8103
                                             39 COMRAM     9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              13     9      4    7905
                                             39 COMRAM    13     9      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    3720
                                             14 COMRAM    25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1664
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    2276
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17     9      8     455
                                              0 COMRAM    17     9      8
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          14     6      8     455
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     919
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     615
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     466
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     457
                                             48 COMRAM    10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2737
                                             72 COMRAM     8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2414
                                             52 COMRAM    20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     638
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _putsXLCD                                             2     0      2     545
                                              1 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteDataXLCD                                        1     1      0      44
                                              0 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (1) _controleTc                                           3     1      2     120
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _controlePh                                           3     1      2     120
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _controleAgua                                         3     1      2     120
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _OpenXLCD                                             1     1      0     110
                                              1 COMRAM     1     1      0
                           _BusyXLCD
                       _DelayPORXLCD
                          _DelayXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (1) _WriteCmdXLCD                                         1     1      0      44
                                              0 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _SetDDRamAddr                                         1     1      0      44
                                              0 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _DelayXLCD                                            1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _DelayPORXLCD                                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _BusyXLCD                                             0     0      0       0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayFor18TCY                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEADC                                                5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LEADC
   _OpenXLCD
     _BusyXLCD
       _DelayFor18TCY
     _DelayPORXLCD
     _DelayXLCD
     _SetDDRamAddr
       _DelayFor18TCY
     _WriteCmdXLCD
       _DelayFor18TCY
   _WriteCmdXLCD
     _DelayFor18TCY
   ___awdiv
     ___awmod (ARG)
     ___wmul (ARG)
   ___wmul
   _controleAgua
   _controlePh
   _controleTc
   _putsXLCD
     _BusyXLCD
       _DelayFor18TCY
     _WriteDataXLCD
       _DelayFor18TCY
   _sprintf
     ___awdiv
       ___awmod (ARG)
       ___wmul (ARG)
     ___fladd
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
           ___wmul (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod (ARG)
     ___flge
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
       ___awmod (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
               ___wmul (ARG)
             ___awmod (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
         ___awmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
           ___wmul (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
         ___wmul (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
         ___awmod (ARG)
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
         ___wmul (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
         ___awmod (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4D      55       5       53.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5A      5E       1       98.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B3      20        0.0%
DATA                 0      0      B3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Jun 11 17:09:01 2024

                     l41 3494                       l42 3494                       l50 340A  
                     l43 34A6                       l51 3414                       l44 34BC  
                     l52 3414                       l60 3360                       l47 340E  
                     l55 335A                       l63 33B4                       l48 33E8  
                     l56 3334                       l64 338E                       l49 33E2  
                     l57 332E                       l65 3388                       l73 246C  
                     l58 3356                       l66 33B0                       l74 2620  
                     l59 3360                       l67 33BA                       l75 2624  
                     l68 33BA                       l76 2624                       l95 36EE  
                     l98 36E4             ___awdiv@sign 000C                       _ph 00AF  
    ___wmul@multiplicand 0003                      l101 36D4                      l110 2EAC  
                    l111 2EA8                      l120 2F1A                      l112 2EC4  
                    l104 2E66                      l121 2F36                      l113 2ED2  
                    l105 2E62                      l201 12BA                      l122 2F44  
                    l114 2ECE                      l106 2E7E                      l210 0990  
                    l202 08BE                      l131 359A                      l123 2F40  
                    l115 2EEA                      l107 2E86                      l211 12E4  
                    l203 08E4                      l124 2F5C                      l116 2EF8  
                    l108 2E82                      l220 11FA                      l212 0994  
                    l204 097C                      l125 2F66                      l117 2EF4  
                    l109 2E9E                      l221 0A82                      l213 0A56  
                    l205 0956                      l134 3450                      l118 2F10  
                    l222 0ADE                      l214 099A                      l206 091A  
                    l135 346A                      l119 2F1E                      l151 32D0  
                    l231 0D0C                      l223 0C30                      l215 09CE  
                    l207 0978                      l136 346A                      l152 3284  
                    l240 0EE6                      l232 0D4C                      l224 0B62  
                    l216 09F2                      l208 098C                      l145 361E  
                    l153 328C                      l241 0ECE                      l233 0D5A  
                    l225 0BEC                      l209 0A2C                      l217 09D2  
                    l154 3288                      l250 1032                      l242 0F18  
                    l226 0C2C                      l218 0A10                      l155 32A4  
                    l251 1062                      l243 0FB4                      l235 0DA8  
                    l227 0C28                      l219 0A14                      l148 35DC  
                    l156 3304                      l260 1284                      l252 11AA  
                    l244 0F1C                      l228 0C8C                      l157 3304  
                    l261 1280                      l253 10C4                      l245 0FCA  
                    l229 0DF6                      l237 0DE0                      l262 12B6  
                    l254 11C2                      l246 0FE8                      l238 0E72  
                    l511 2CFE                      l191 1AD4                      l263 12E0  
                    l255 11E0                      l247 0FCE                      l239 0E90  
                    l520 2DC0                      l512 2E20                      l440 3026  
                    l432 2F8A                      l192 19DC                      l264 12F4  
                    l256 11C6                      l248 1006                      l521 2DE4  
                    l513 2D94                      l441 3046                      l433 2FA8  
                    l185 22FA                      l193 1D16                      l257 11F6  
                    l249 102A                      l522 2E0C                      l514 2D78  
                    l442 3052                      l434 302A                      l450 30C8  
                    l186 243A                      l194 1AA4                      l258 122A  
                    l515 2D7C                      l267 36C2                      l435 2FD6  
                    l451 30CC                      l187 23EA                      l195 1AA0  
                    l259 1252                      l516 2D90                      l436 2FCA  
                    l452 30EE                      l188 23E6                      l196 1C22  
                    l517 2DE8                      l437 2FE8                      l453 30FE  
                    l445 3076                      l197 1CEA                      l518 2DBC  
                    l470 2B06                      l438 2FEC                      l454 311E  
                    l446 3090                      l198 1CE6                      l519 2DD0  
                    l471 2AEA                      l439 3016                      l455 312A  
                    l447 3102                      l472 2AEE                      l464 29EA  
                    l448 30B6                      l481 2BAA                      l473 2B02  
                    l465 2B66                      l449 30AA                      l482 2BEC  
                    l474 2B56                      l466 2A18                      l570 2886  
                    l483 2C38                      l475 2B2E                      l467 2A5E  
                    l571 28C0                      l484 2C80                      l740 13A0  
                    l660 31E2                      l476 2B42                      l468 2A9C  
                    l580 2996                      l572 28F2                      l628 368E  
                    l485 2CCE                      l741 13DE                      l653 31D2  
                    l477 2B32                      l469 2AB0                      l581 2986  
                    l573 2904                      l629 3698                      l750 14E8  
                    l742 13D4                      l654 316A                      l670 327E  
                    l478 2B56                      l582 29AA                      l574 295A  
                    l830 1DA6                      l751 14F0                      l743 13F2  
                    l735 1316                      l655 315A                      l663 326E  
                    l575 293E                      l831 1DE0                      l488 364A  
                    l760 15B2                      l752 1504                      l744 145A  
                    l736 1354                      l656 317C                      l664 3212  
                    l576 2942                      l568 284A                      l840 1FEE  
                    l832 1DDA                      l489 365E                      l761 1726  
                    l753 1526                      l745 141A                      l737 134A  
                    l657 3180                      l665 3202                      l577 2956  
                    l569 29BA                      l841 2014                      l833 1DF0  
                    l770 16F6                      l762 1668                      l754 15C6  
                    l746 14CA                      l738 1368                      l658 31BE  
                    l666 3224                      l578 29AA                      l850 2136  
                    l842 2076                      l834 1E2C                      l826 1D38  
                    l771 170C                      l763 1664                      l755 155C  
                    l747 1526                      l739 1386                      l659 31D2  
                    l667 3228                      l579 2982                      l851 2168  
                    l843 205C                      l827 1D72                      l780 1832  
                    l772 1722                      l764 1678                      l756 187A  
                    l748 1510                      l668 325A                      l860 26C8  
                    l852 215E                      l844 2076                      l836 1E14  
                    l828 1D6C                      l773 1770                      l765 16B6  
                    l757 15C2                      l749 14CE                      l669 326E  
                    l861 270A                      l845 2072                      l837 2184  
                    l829 1D86                      l782 1806                      l774 1756  
                    l766 1710                      l758 1596                      l870 27AC  
                    l862 2726                      l846 20D6                      l838 2002  
                    l783 182E                      l775 1770                      l767 16BA  
                    l759 159E                      l871 27F8                      l863 270E  
                    l855 267E                      l847 20D2                      l839 1FD4  
                    l784 1846                      l776 176C                      l768 16D8  
                    l864 2758                      l856 2692                      l848 2104  
                    l785 184C                      l777 17E2                      l769 16EE  
                    l865 276C                      l857 26C0                      l849 216C  
                    l786 1866                      l778 17DE                      l866 275C  
                    l858 280C                      l779 17DA                      l859 26D8  
                    l868 278E                      l789 3556                      l869 278E  
  __size_of_WriteCmdXLCD 0042             ___awmod@sign 0006                      wreg 000FE8  
           __CFG_FOSC$HS 000000             ___flmul@aexp 0020             ___flmul@bexp 0021  
            _sprintf$958 0060             ___flmul@sign 001B             ___flmul@temp 0026  
           ___flmul@prod 0022             __CFG_LVP$OFF 000000             ___fltol@exp1 003A  
           __CFG_WDT$OFF 000000                     l3001 2B32                     l3011 350E  
                   l3003 2B42                     l3021 2BAA                     l2301 1326  
                   l3013 351E                     l3101 3180                     l3005 369A  
                   l3031 2C46                     l3023 2BD8                     l2311 1368  
                   l2303 1336                     l3015 3556                     l3111 31C8  
                   l3103 318A                     l3007 36B6                     l3201 2E2C  
                   l3033 2CBE                     l3025 2BEC                     l3017 2B68  
                   l3041 3636                     l2401 156C                     l2321 139A  
                   l2313 136E                     l2305 134A                     l3105 31A8  
                   l3121 3228                     l3113 31E4                     l3009 36C2  
                   l3211 2E36                     l3203 2E2E                     l3035 2CC4  
                   l3027 2BFA                     l3019 2B96                     l3043 364A  
                   l2411 15AC                     l2403 157A                     l2331 13D6  
                   l2323 13A0                     l2315 1380                     l2307 134C  
                   l3051 2CFA                     l3107 31B8                     l3123 3246  
                   l3115 31FA                     l3131 263A                     l3221 2E4A  
                   l3213 2E38                     l3205 2E30                     l3037 2CCE  
                   l3029 2C38                     l3045 365E                     l2421 1642  
                   l2413 15B2                     l2405 1588                     l2341 141A  
                   l2325 13B0                     l2333 13DE                     l2317 1386  
                   l2309 1354                     l3061 2D3E                     l3053 2CFE  
                   l3109 31BE                     l3125 325A                     l3117 3202  
                   l3141 26C0                     l3133 2648                     l2501 1D38  
                   l3301 0A1C                     l3231 2E86                     l3223 2E50  
                   l3215 2E3C                     l3207 2E32                     l3039 3620  
                   l2431 169E                     l2423 1644                     l2415 15BC  
                   l2407 1596                     l2351 142E                     l2343 141E  
                   l2335 13F2                     l2327 13C0                     l2319 138C  
                   l3071 2D86                     l3063 2D4C                     l3055 2D28  
                   l3047 2CD0                     l3127 3264                     l3119 3212  
                   l3151 271C                     l3143 26C8                     l3135 2692  
                   l2511 1D86                     l2503 1D48                     l3311 0A76  
                   l3303 0A28                     l3241 2EEA                     l3233 2E9E  
                   l3225 2E54                     l3217 2E42                     l3209 2E34  
                   l2441 16D8                     l2433 16B2                     l2425 1654  
                   l2409 159E                     l2417 15C6                     l2361 1442  
                   l2353 1432                     l2345 1422                     l2337 1404  
                   l2329 13D4                     l3081 2DD0                     l3065 2D60  
                   l3073 2D94                     l3057 2D2A                     l3049 2CE6  
                   l3161 27D4                     l3153 275C                     l3145 26D8  
                   l3137 26A8                     l3129 262A                     l2601 20CA  
                   l2521 1DB6                     l2513 1D8C                     l2505 1D58  
                   l3401 0F1C                     l3321 0AD4                     l3313 0A82  
                   l3305 0A2C                     l3171 346E                     l2291 36E6  
                   l3251 2F44                     l3243 2EF8                     l3235 2EAC  
                   l3227 2E58                     l3219 2E46                     l2443 16E6  
                   l2435 16BA                     l2451 1710                     l2419 15EC  
                   l2427 1668                     l2363 1446                     l2355 1436  
                   l2347 1426                     l2339 1412                     l2371 145A  
                   l3075 2DA4                     l3083 2DE8                     l3067 2D74  
                   l3059 2D3A                     l3091 312C                     l3163 27E4  
                   l3155 276C                     l3147 270E                     l3139 26BC  
                   l2611 213A                     l2603 20D6                     l2531 1E14  
                   l2523 1DC6                     l2515 1D92                     l2507 1D6C  
                   l3411 0FCE                     l3403 0F68                     l3331 0B10  
                   l3323 0ADE                     l3315 0A9A                     l3307 0A56  
                   l3173 3480                     l3253 2F5C                     l3245 2F10  
                   l3237 2EC4                     l3229 2E66                     l3181 33BC  
                   l2461 1764                     l2445 16EE                     l2437 16C4  
                   l2429 168E                     l2453 1726                     l2381 14DC  
                   l2373 145E                     l2365 144A                     l2357 143A  
                   l2349 142A                     l2293 12F6                     l3085 2DF8  
                   l3077 2DB8                     l3069 2D7C                     l3093 313C  
                   l3165 27F2                     l3157 277A                     l3149 2710  
                   l2701 311E                     l2621 2170                     l2613 214A  
                   l2605 20F0                     l2541 1E58                     l2533 1E28  
                   l2525 1DDA                     l2517 1DA0                     l2509 1D72  
                   l3421 1022                     l3413 0FDA                     l3405 0F9C  
                   l3341 0B7A                     l3333 0B2C                     l3325 0AE6  
                   l3317 0AA2                     l3309 0A68                     l3261 08D0  
                   l3501 2458                     l3175 348E                     l2711 35F2  
                   l3255 2F66                     l3247 2F1E                     l3239 2ED2  
                   l3183 33DE                     l3191 3334                     l2287 2CC4  
                   l2463 1780                     l2471 17E2                     l2455 172A  
                   l2447 16F6                     l2439 16D2                     l2391 150E  
                   l2383 14E8                     l2375 1496                     l2367 144E  
                   l2359 143E                     l2295 1302                     l3087 2E0C  
                   l3079 2DC0                     l3095 3152                     l3167 27F8  
                   l3159 279C                     l2631 2F82                     l2703 312A  
                   l2623 2184                     l2615 2158                     l2607 2104  
                   l2551 1EA2                     l2543 1E64                     l2535 1E2C  
                   l2527 1DE0                     l2519 1DA6                     l3431 1062  
                   l3423 1032                     l3415 0FDE                     l3407 0FAC  
                   l3343 0BAE                     l3335 0B48                     l3327 0AFC  
                   l3351 0C30                     l3319 0AB0                     l3271 090E  
                   l3263 08DC                     l3511 24C4                     l3503 246C  
                   l3177 34A6                     l2721 360E                     l2713 35F6  
                   l2705 35E0                     l3249 2F36                     l3185 33E8  
                   l3193 3362                     l2801 35B4                     l2289 2CCA  
                   l2481 1840                     l2473 17F2                     l2465 178C  
                   l2457 1738                     l2449 1706                     l2393 1534  
                   l2385 14F0                     l2377 14B2                     l2369 1452  
                   l2297 1310                     l3089 2E20                     l3097 315A  
                   l3169 280C                     l2641 2FB0                     l2633 2F8A  
                   l2625 2F68                     l2617 215E                     l2609 211E  
                   l2561 1EF4                     l2553 1EAE                     l2545 1E7C  
                   l2537 1E38                     l2529 1E00                     l3441 1156  
                   l3433 1078                     l3425 103E                     l3417 0FE8  
                   l3409 0FB4                     l3361 0CEA                     l3353 0C4E  
                   l3345 0BE0                     l3337 0B58                     l3329 0B0A  
                   l3281 0986                     l3273 091A                     l3265 08E4  
                   l3257 08B0                     l3521 2574                     l3513 24F2  
                   l3505 247A                     l3179 34BC                     l2731 36C4  
                   l2723 3610                     l2715 35F8                     l2707 35EE  
                   l3187 3306                     l3195 3384                     l2811 35CE  
                   l2803 35B6                     l2491 1866                     l2483 1846  
                   l2475 1806                     l2467 179A                     l2459 174E  
                   l2395 1544                     l2387 14FE                     l2379 14C2  
                   l2299 1316                     l3099 316A                     l2651 2FF2  
                   l2643 2FC2                     l2635 2F98                     l2627 2F6C  
                   l2619 216C                     l2571 1F72                     l2563 1F04  
                   l2555 1EBE                     l2547 1E88                     l2539 1E42  
                   l3451 11D6                     l3443 115A                     l3435 10C4  
                   l3427 104E                     l3419 1006                     l3371 0D70  
                   l3363 0D0C                     l3355 0C8C                     l3347 0BEC  
                   l3339 0B62                     l3291 09D2                     l3283 0994  
                   l3275 094E                     l3267 08EC                     l3259 08BE  
                   l3531 259E                     l3523 257A                     l3515 2520  
                   l3507 2488                     l2741 3432                     l2733 3416  
                   l2725 3614                     l2717 35FC                     l2709 35F0  
                   l3189 332A                     l3197 338E                     l2813 35D2  
                   l2805 35BA                     l2493 187A                     l2485 184C  
                   l2477 1826                     l2469 17D4                     l2397 1558  
                   l2389 1504                     l2901 2886                     l2653 3008  
                   l2645 2FCA                     l2661 302A                     l2637 2FA0  
                   l2629 2F7A                     l2581 1FEC                     l2573 1FA8  
                   l2565 1F20                     l2557 1ECA                     l2549 1E94  
                   l2821 22BA                     l3461 122A                     l3453 11E0  
                   l3437 1112                     l3445 11AA                     l3429 105A  
                   l3381 0E72                     l3373 0DA8                     l3365 0D3E  
                   l3357 0CAA                     l3349 0C1E                     l3293 09E6  
                   l3285 099A                     l3277 0956                     l3269 0908  
                   l3541 25CE                     l3533 25AA                     l3525 2586  
                   l3517 253C                     l3509 2496                     l2751 3442  
                   l2743 3434                     l2735 341A                     l2727 361E  
                   l2719 360A                     l3199 2E24                     l2815 35DC  
                   l2807 35C8                     l2487 1852                     l2479 1832  
                   l2399 155C                     l2911 28B6                     l2903 2888  
                   l2663 303A                     l2655 3010                     l2647 2FD6  
                   l2639 2FA8                     l2671 3058                     l2591 2054  
                   l2583 2002                     l2575 1FB6                     l2567 1F2C  
                   l2559 1EDA                     l2495 1D18                     l2831 23AA  
                   l2823 22F2                     l3471 12A2                     l3463 124A  
                   l3447 11C6                     l3439 1146                     l3391 0ECE  
                   l3383 0E76                     l3375 0DE0                     l3367 0D4C  
                   l3359 0CC0                     l3455 11FA                     l3295 09EA  
                   l3287 09AC                     l3279 097C                     l3551 2604  
                   l3543 25D4                     l3535 25B0                     l3527 258C  
                   l3519 2558                     l2761 345C                     l2753 3448  
                   l2745 3438                     l2737 341E                     l2729 36D6  
                   l2809 35CC                     l3481 3280                     l2489 1860  
                   l2921 28FA                     l2913 28BC                     l2905 2896  
                   l2665 3046                     l2657 3016                     l2649 2FEC  
                   l2681 3090                     l2673 3066                     l2593 206A  
                   l2585 2014                     l2577 1FD4                     l2569 1F48  
                   l2497 1D24                     l2833 23E2                     l2825 22F6  
                   l2817 2188                     l2841 188C                     l3473 12AE  
                   l3465 1252                     l3457 120C                     l3449 11D2  
                   l3393 0ED0                     l3385 0E8C                     l3369 0D5A  
                   l3377 0DF6                     l3289 09C2                     l3297 09F2  
                   l3545 25E0                     l3537 25BC                     l3529 2598  
                   l2763 345E                     l2755 344C                     l2747 343E  
                   l2739 3424                     l2771 356A                     l3483 328C  
                   l2931 2942                     l2923 2904                     l2915 28CA  
                   l2907 28A2                     l2667 3052                     l2659 301C  
                   l2691 30E2                     l2683 30A2                     l2675 306E  
                   l2595 2086                     l2587 2018                     l2579 1FDE  
                   l2499 1D32                     l2835 23EA                     l2819 2198  
                   l2827 22FA                     l2851 19F0                     l2843 18A2  
                   l3467 1272                     l3459 1222                     l3395 0EE6  
                   l3387 0E90                     l3379 0E64                     l3299 0A14  
                   l3475 12BA                     l3547 25EC                     l3539 25C2  
                   l3491 243C                     l2765 3460                     l2757 3452  
                   l2749 3440                     l2781 3578                     l2773 356C  
                   l3485 32A4                     l2941 2986                     l2933 294C  
                   l2925 2912                     l2917 28E4                     l2909 28B2  
                   l2693 30EE                     l2685 30AA                     l2677 3076  
                   l2669 3054                     l2597 2092                     l2589 2026  
                   l2837 243A                     l2829 230A                     l2861 1AE8  
                   l2853 1A9C                     l2845 19D4                     l3469 1284  
                   l3397 0F04                     l3389 0ECA                     l3477 12E4  
                   l3549 25F8                     l3493 243E                     l2767 3466  
                   l2759 3456                     l2791 359A                     l2783 3586  
                   l2775 356E                     l3487 32C8                     l2951 29EA  
                   l2943 2996                     l2927 2926                     l2935 295A  
                   l2919 28F0                     l2695 30F4                     l2687 30B6  
                   l2679 3084                     l2599 20A0                     l2871 1CE2  
                   l2863 1C1A                     l2855 1AA4                     l2847 19D8  
                   l2839 187E                     l3479 12F4                     l3399 0F10  
                   l3495 2442                     l2785 358A                     l2777 3572  
                   l2769 355A                     l2793 359E                     l3489 32D0  
                   l2961 2A2A                     l2953 2A00                     l2945 29BC  
                   l2937 296A                     l2929 293A                     l2689 30CC  
                   l2697 3102                     l2881 3676                     l2873 1CEA  
                   l2865 1C1E                     l2857 1AD0                     l2849 19DC  
                   l3497 244C                     l2787 358C                     l2779 3574  
                   l2795 35AC                     l2971 2A5E                     l2963 2A3C  
                   l2955 2A14                     l2947 29D2                     l2939 297E  
                   l2891 2832                     l2699 3112                     l2883 3686  
                   l2875 1D16                     l2867 1C22                     l2859 1AD4  
                   l3499 2452                     l2789 3590                     l2797 35AE  
                   l2981 2AA6                     l2973 2A68                     l2965 2A4C  
                   l2957 2A18                     l2949 29E6                     l2893 2846  
                   l2885 368E                     l2877 3662                     l2869 1C36  
                   l2799 35B0                     l2991 2AEE                     l2983 2AB0  
                   l2975 2A86                     l2967 2A50                     l2959 2A1A  
                   l2895 284A                     l2887 3698                     l2879 3666  
                   l2993 2AF8                     l2985 2ABE                     l2977 2A96  
                   l2969 2A56                     l2897 286E                     l2889 280E  
                   l2987 2AD2                     l2995 2B06                     l2979 2A9C  
                   l2899 2882                     l2997 2B16                     l2989 2AE6  
                   l2999 2B2A                     STR_1 0891                     STR_2 089E  
                   STR_3 0898                     STR_4 08A3                     STR_5 08A7  
                   STR_6 08AB                     u2000 15AC                     u2001 15A8  
                   u2010 15EC                     u2011 15E8                     u2100 174E  
                   u2020 1654                     u2101 174A                     u2021 1650  
                   u2110 1764                     u2030 168E                     u2111 1760  
                   u2031 168A                     u2120 1780                     u2040 169E  
                   u3000 2754                     u2200 1D32                     u2121 177C  
                   u2041 169A                     u3001 2750                     u2201 1D2E  
                   u2130 179A                     u2050 16D2                     u3010 277A  
                   u2210 1D48                     u2131 1796                     u2051 16CE  
                   u3011 2776                     u2211 1D44                     u3100 3352  
                   u2140 17D4                     u2060 16E6                     u3020 278A  
                   u2300 2010                     u2220 1D58                     u3101 334E  
                   u2141 17D0                     u2061 16E2                     u3021 2786  
                   u2301 200C                     u2221 1D54                     u3110 3380  
                   u2150 17F2                     u2070 1706                     u3030 279C  
                   u2310 2026                     u2230 1DA0                     u3111 337C  
                   u2151 17EE                     u2071 1702                     u3031 2798  
                   u2311 2022                     u2231 1D9C                     u3120 33AC  
                   u2160 1802                     u2080 171E                     u3040 27E4  
                   u2400 2F98                     u2320 2054                     u2240 1DB6  
                   u3200 08D0                     u3121 33A8                     u2161 17FE  
                   u2081 171A                     u3041 27E0                     u2401 2F94  
                   u2321 2050                     u2241 1DB2                     u3201 08CC  
                   u3130 2E7A                     u2170 1826                     u2090 1738  
                   u3050 27F2                     u2410 2FC2                     u2330 206A  
                   u2250 1DC6                     u3210 0908                     u3131 2E76  
                   u2171 1822                     u2091 1734                     u3051 27EE  
                   u2411 2FBE                     u2331 2066                     u2251 1DC2  
                   u3211 0904                     u3060 34A2                     u3140 2E9A  
                   u2180 1840                     u2420 2FE4                     u2500 3112  
                   u2340 2086                     u2260 1E00                     u3300 0B58  
                   u3220 0974                     u3061 349E                     u3141 2E96  
                   u2181 183C                     u2421 2FE0                     u2501 310E  
                   u2341 2082                     u2261 1DFC                     u3301 0B54  
                   u3221 0970                     u2510 3432                     u3150 2EC0  
                   u3070 33DA                     u2190 1860                     u2430 3008  
                   u2350 20A0                     u2270 1E10                     u3310 0BE0  
                   u3230 09AC                     u2511 342E                     u3151 2EBC  
                   u3071 33D6                     u2191 185C                     u2431 3004  
                   u2351 209C                     u2271 1E0C                     u3311 0BDC  
                   u3231 09A8                     u3160 2EE6                     u3080 3406  
                   u2440 303A                     u2360 20F0                     u2280 1F92  
                   u2520 2198                     u2600 3686                     u3400 0EC6  
                   u3320 0C1E                     u3240 09C2                     u3161 2EE2  
                   u3081 3402                     u2441 3036                     u2361 20EC  
                   u2521 2194                     u2601 3682                     u3401 0EC2  
                   u3321 0C1A                     u3241 09BE                     u3170 2F0C  
                   u3090 3326                     u1810 1310                     u2450 3066  
                   u2370 211E                     u2290 1FEC                     u2530 230A  
                   u3410 0EE2                     u3330 0C4E                     u3250 0A0C  
                   u3171 2F08                     u3091 3322                     u1811 130C  
                   u2611 281E                     u2451 3062                     u2371 211A  
                   u2291 1FE8                     u2531 2306                     u3411 0EDE  
                   u3331 0C4A                     u3251 0A08                     u3180 2F32  
                   u1900 1496                     u1820 1326                     u2700 29D2  
                   u2620 2832                     u2460 3084                     u2380 2158  
                   u2540 188C                     u3500 1222                     u3420 0F04  
                   u3340 0CAA                     u3260 0A68                     u3181 2F2E  
                   u1901 1492                     u1821 1322                     u2701 29CE  
                   u2621 282E                     u2461 3080                     u2381 2154  
                   u2285 1F88                     u2541 1888                     u3501 121E  
                   u3421 0F00                     u3341 0CA6                     u3261 0A64  
                   u3190 2F58                     u1910 14AE                     u1830 1336  
                   u2710 2A00                     u2390 2F7A                     u2470 30A2  
                   u2550 18A2                     u3510 124A                     u3430 0FC6  
                   u3350 0CC0                     u3270 0A76                     u3191 2F54  
                   u1911 14A8                     u1831 1332                     u2711 29FC  
                   u2631 285A                     u2391 2F76                     u2471 309E  
                   u2551 189E                     u3511 1246                     u3431 0FC2  
                   u3351 0CBC                     u3271 0A72                     u2800 2C46  
                   u1920 14B0                     u1840 1380                     u2720 2A86  
                   u2640 286E                     u2480 30C4                     u2560 19F0  
                   u3520 1272                     u3440 1002                     u3360 0CEA  
                   u3280 0AB0                     u2801 2C42                     u1841 137C  
                   u2721 2A82                     u2641 286A                     u2481 30C0  
                   u2561 19EC                     u3521 126E                     u3441 0FFE  
                   u3361 0CE6                     u3281 0AAC                     u2810 2CBE  
                   u1930 14DC                     u1850 139A                     u2730 2ABE  
                   u2650 28E4                     u2490 30E2                     u2570 1AE8  
                   u3530 12A2                     u3450 1022                     u3370 0D08  
                   u3290 0AFC                     u2811 2CBA                     u1931 14D8  
                   u1851 1396                     u2731 2ABA                     u2651 28E0  
                   u2491 30DE                     u2571 1AE4                     u3531 129E  
                   u3451 101E                     u3371 0D04                     u3291 0AF8  
                   u2820 3636                     u1940 14FE                     u1860 13B0  
                   u2900 3152                     u2740 2AD2                     u2660 2912  
                   u2580 1C36                     u3540 12DC                     u3460 104E  
                   u3380 0D3E                     u2821 3632                     u1941 14FA  
                   u1861 13AC                     u2901 314E                     u2741 2ACE  
                   u2661 290E                     u2581 1C32                     u3541 12D8  
                   u3461 104A                     u3381 0D3A                     u3550 32A0  
                   u1950 1522                     u1870 13C0                     u2830 2CE6  
                   u2910 3178                     u2750 2B16                     u2670 2926  
                   u2590 3676                     u3470 11BE                     u3390 0E88  
                   u3551 329C                     u1951 151E                     u1871 13BC  
                   u2831 2CE2                     u2911 3174                     u2751 2B12  
                   u2671 2922                     u2591 3672                     u3471 11BA  
                   u3391 0E84                     u3560 32C4                     u1960 1534  
                   u1880 1404                     u2840 2D1E                     u2920 31A8  
                   u2760 2B52                     u2680 296A                     u3480 11F2  
                   u1961 1530                     u1881 1400                     u2921 31A4  
                   u2761 2B4E                     u2681 2966                     u3481 11EE  
                   u3617 245E                     u3570 32F0                     u2770 2B96  
                   u1970 1544                     u1890 1412                     u2850 2D4C  
                   u2930 31FA                     u2690 29A6                     u3490 120C  
                   u2771 2B92                     u1971 1540                     u1891 140E  
                   u2851 2D48                     u2931 31F6                     u2691 29A2  
                   u3491 1208                     u3627 260E                     u3580 3300  
                   u2780 2BD8                     u1980 157A                     u2860 2D60  
                   u2940 3220                     u3637 36CA                     u3581 32FC  
                   u2781 2BD4                     u1981 1576                     u2861 2D5C  
                   u2845 2D14                     u2941 321C                     u2790 2BFA  
                   u1990 1588                     u2870 2DA4                     u2950 3246  
                   u3647 36DC                     u3567 32BA                     u2791 2BF6  
                   u1991 1584                     u2871 2DA0                     u2951 3242  
                   u2880 2DE0                     u2960 263A                     u3657 36E8  
                   u3577 32E6                     u2881 2DDC                     u2961 2636  
                   u2890 2DF8                     u2970 2648                     u3667 3486  
                   u2891 2DF4                     u2971 2644                     u2980 26A8  
                   u2981 26A4                     u2990 2706                     u2991 2702  
                   _main 243C                     _temp 00AD              main@tempStr 009D  
                   fsr1h 000FE2                     fsr2h 000FDA                     indf1 000FE7  
                   indf2 000FDF                     fsr1l 000FE1                     fsr2l 000FD9  
 __size_of_WriteDataXLCD 0042                     prodh 000FF4                     prodl 000FF3  
                   start 0000             ___param_bank 000000             _WriteCmdXLCD 35DE  
          ?_controleAgua 0001            ___fltol@sign1 0039            ?_SetDDRamAddr 0001  
        __end_of___fladd 187C                    ?_main 0001          __end_of___awdiv 3054  
        __end_of___flneg 3660          __end_of___awmod 312C          __end_of___flmul 2186  
        __end_of___flsub 3558          __end_of___fltol 2E22          __end_of___lldiv 31E4  
                  _LEADC 346C          ___awdiv@divisor 0009          __end_of___llmod 3280  
        ___awdiv@counter 000B                    _PORTD 000F83                    _TRISA 000F92  
                  _TRISC 000F94                    _TRISD 000F95          __end_of_dpowers 0891  
                  _scale 187C          __end_of_isdigit 369A                    tablat 000FF5  
                  status 000FD8          __end_of_sprintf 12F6          __initialization 34BE  
           __end_of_main 2628         __end_of_BusyXLCD 346C       __size_of_DelayXLCD 0012  
         ??_controleAgua 0003    __size_of_DelayPORXLCD 0010           ??_SetDDRamAddr 0001  
       __end_of_OpenXLCD 2F68                   ??_main 0059                   ?_LEADC 0001  
          __activetblptr 000002            _WriteDataXLCD 359C     __size_of__tdiv_to_l_ 01AE  
                 _ADCON1 000FC1                   _ADCON2 000FC0         ___llmod@dividend 0001  
                 ?_scale 0028                   _ADRESH 000FC4                   _ADRESL 000FC3  
       ___awdiv@dividend 0007         __end_of___xxtofl 280E             _DelayPORXLCD 36D6  
       __end_of__powers_ 0835                   ___flge 2B68                ??___fladd 003D  
                 ___wmul 369A                ??___awdiv 000B                ??___flneg 0005  
              ??___awmod 0005                ??___flmul 0017                ??___flsub 0051  
              ??___fltol 0035                ??___lldiv 0009                ??___llmod 0009  
                 _fround 2186         ___awdiv@quotient 000D          ___awmod@divisor 0003  
        ___awmod@counter 0005           ?_WriteDataXLCD 0001             __pdataCOMRAM 005B  
              ??_isdigit 0001             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8             controlePh@Ph 0001  
           controleTc@Tc 0001         __end_of_putsXLCD 3306                ??_sprintf 0057  
      __end_of_DelayXLCD 36D6               ___flge@ff1 0001               ___flge@ff2 0005  
           ___xxtofl@arg 000B             ___xxtofl@exp 000A             ___xxtofl@val 0001  
             __accesstop 0060  __end_of__initialization 3504          __CFG_PBADEN$OFF 000000  
             ___flneg@f1 0001            ___rparam_used 000001            __end_of_LEADC 34BE  
             ___fltol@f1 0031           __pcstackCOMRAM 0001             __pidataBANK0 36F4  
          __end_of_scale 1D18                  ??_LEADC 0003               __div_to_l_ 29BC  
        __div_to_l_@exp1 000E          __div_to_l_@cntr 000D                  ??_scale 002C  
 __size_of_DelayFor18TCY 000A          __div_to_l_@quot 0009               __pbssBANK0 00AD  
              ?_BusyXLCD 0001     __end_of_controleAgua 3416          WriteCmdXLCD@cmd 0001  
   __end_of_SetDDRamAddr 359C                ?_OpenXLCD 0001            __div_to_l_@f1 0001  
          __div_to_l_@f2 0005                  ?___flge 0001        WriteDataXLCD@data 0001  
                ?___wmul 0001          ??_WriteDataXLCD 0001                  ?_fround 0028  
              ?___xxtofl 0001               ??_BusyXLCD 0001               _controlePh 3306  
             _controleTc 3362               ??_OpenXLCD 0002        __end_of__npowers_ 0869  
                __Hparam 0000                  __Lparam 0000          __size_of___flge 0168  
                ___fladd 12F6                  ___awdiv 2F68            _DelayFor18TCY 36E6  
                ___flneg 3620                  ___awmod 3054                  ___flmul 1D18  
                ___flsub 350E                  ___fltol 2CD0                  ___lldiv 312C  
        __size_of___wmul 002A                  ___llmod 31E4                ?_putsXLCD 0002  
             _fround$955 0030               _fround$956 002C             __psmallconst 0800  
                __pcinit 34BE          __size_of_fround 02B6                  __ramtop 0800  
                __ptext0 243C                  __ptext1 08B0                  __ptext2 187C  
                __ptext3 3660                  __ptext4 2186                  __ptext5 1D18  
                __ptext6 3054                  __ptext7 2F68                  __ptext8 280E  
                __ptext9 29BC              ?__div_to_l_ 0001                  _dpowers 0869  
                _isdigit 3660               ??___xxtofl 0005         ___awmod@dividend 0001  
                _umidade 00B1                  _sprintf 08B0     end_of_initialization 3504  
          __Lmediumconst 0000           main@umidadeStr 007D          ___lldiv@divisor 0005  
        ___lldiv@counter 000D           ?_DelayFor18TCY 0001                  postdec1 000FE5  
                postinc0 000FEE                  postinc2 000FDE               ??_putsXLCD 0004  
         __tdiv_to_l_@f1 0001           __tdiv_to_l_@f2 0005            ??__tdiv_to_l_ 0009  
              _PORTCbits 000F82              ___fladd@grs 0048            ___xxtofl@sign 0009  
              _TRISEbits 000F96    __size_of_controleAgua 005A    __size_of_SetDDRamAddr 0044  
            ___flmul@grs 001C              ?_controlePh 0001              ?_controleTc 0001  
              _DelayXLCD 36C4      __size_of__div_to_l_ 01AC           __end_of___flge 2CD0  
         __end_of___wmul 36C4            __pidataCOMRAM 36F0             _controleAgua 33BC  
         __end_of_fround 243C             _SetDDRamAddr 3558       SetDDRamAddr@DDaddr 0001  
    start_initialization 34BE      __end_of__tdiv_to_l_ 29BC          ___llmod@divisor 0005  
      __size_of_BusyXLCD 0056          ___llmod@counter 0009               ?_DelayXLCD 0001  
        ??_DelayFor18TCY 0001        __size_of_OpenXLCD 0146                 ??___flge 0009  
               ??___wmul 0005            ?_WriteCmdXLCD 0001              __pdataBANK0 00B3  
               ??_fround 002C            sprintf@tmpval 0072                ___fladd@a 0039  
              ___fladd@b 0035               fround@prec 0034      __size_of_controlePh 005C  
    __size_of_controleTc 005A                ___flmul@a 0013                ___flmul@b 000F  
              ___flsub@a 004D                ___flsub@b 0049            __pcstackBANK0 0060  
      __size_of___xxtofl 01E6              sprintf@flag 006A              sprintf@fval 0076  
            sprintf@prec 007A           putsXLCD@buffer 0002           ??_WriteCmdXLCD 0001  
               ?___fladd 0035                 ?___awdiv 0007                 ?___flneg 0001  
               ?___awmod 0001                 ?___flmul 000F                 ?___flsub 0049  
               ?___fltol 0031                 ?___lldiv 0001                 ?___llmod 0001  
              __npowers_ 0835              __tdiv_to_l_ 280E        __size_of_putsXLCD 0086  
  __end_of_WriteDataXLCD 35DE             ??__div_to_l_ 0009           __size_of_LEADC 0052  
            __smallconst 0800                 ?_isdigit 0001                _scale$957 002C  
               ?_sprintf 0051           __size_of_scale 049C                _limite_UR 005D  
              _limite_Ph 00B3                _limite_Tc 005B           ___wmul@product 0005  
               _LATEbits 000F8D              ??_DelayXLCD 0001            ?_DelayPORXLCD 0001  
        OpenXLCD@lcdtype 0002       __end_of__div_to_l_ 2B68               _ADCON0bits 000FC2  
      ___wmul@multiplier 0001                main@phStr 008D                copy_data0 34EA  
               _BusyXLCD 3416             ??_controlePh 0003             ??_controleTc 0003  
         ??_DelayPORXLCD 0001             LEADC@channel 0005                 _OpenXLCD 2E22  
               __Hrparam 0000                 __Lrparam 0000         __size_of___fladd 0586  
       __size_of___awdiv 00EC         __size_of___flneg 0040         __size_of___awmod 00D8  
       __size_of___flmul 046E         __size_of___flsub 004A         __size_of___fltol 0152  
       __size_of___lldiv 00B8         __size_of___llmod 009C              _isdigit$600 0002  
             sprintf@len 0068               sprintf@exp 0070               sprintf@val 006C  
               ___xxtofl 2628       __end_of_controlePh 3362       __end_of_controleTc 33BC  
       __size_of_isdigit 003A                 __ptext10 2628                 __ptext11 369A  
               __ptext20 359C                 __ptext12 31E4                 __ptext21 3362  
               __ptext13 312C                 __ptext30 36E6                 __ptext22 3306  
               __ptext14 2CD0                 __ptext31 346C                 __ptext23 33BC  
               __ptext15 350E                 __ptext24 2E22                 __ptext16 12F6  
               __ptext25 35DE                 __ptext17 3620                 __ptext26 3558  
               __ptext18 2B68                 __ptext27 36C4                 __ptext19 3280  
               __ptext28 36D6                 __ptext29 3416                 __powers_ 0801  
   __end_of_WriteCmdXLCD 3620         __size_of_sprintf 0A46            __size_of_main 01EC  
               _putsXLCD 3280                 isdigit@c 0003                 scale@scl 0030  
              sprintf@ap 0064                sprintf@cp 0066         __tdiv_to_l_@exp1 0011  
              sprintf@sp 0051         __tdiv_to_l_@cntr 0010         __tdiv_to_l_@quot 000C  
       ___lldiv@dividend 0001    __end_of_DelayFor18TCY 36F0           controleAgua@UR 0001  
           ?__tdiv_to_l_ 0001                 sprintf@c 007C                 sprintf@f 0053  
   __end_of_DelayPORXLCD 36E6         ___lldiv@quotient 0009            ___fladd@signs 0045  
           ___fladd@aexp 0046             ___fladd@bexp 0047  
